<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>
<!-- Generated by the JDiff Javadoc doclet -->
<!-- (http://www.jdiff.org) -->
<!-- on Wed Oct 28 10:25:15 CST 2015 -->

<api
  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
  xsi:noNamespaceSchemaLocation='api.xsd'
  name="iTrust_v11"
  jdversion="1.1.1">

<!--  Command line arguments =  -doclet jdiff.JDiff -docletpath /Users/niejia/Documents/Idea14/JDiffOriginDemo/build/jdiff-1.1.1/jdiff.jar:/Users/niejia/Documents/Idea14/JDiffOriginDemo/build/jdiff-1.1.1/xerces.jar -d /Users/niejia/Documents/Idea14/JDiffOriginDemo/build/reports/example -classpath /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/lib/javafx-doclet.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/lib/tools.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/htmlconverter.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/JObjC.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Users/niejia/Documents/Idea14/JDiffOriginDemo/out/production/JDiffOriginDemo:/Users/niejia/Documents/Idea14/JDiffOriginDemo/lib/ant.jar:/Users/niejia/Documents/Idea14/JDiffOriginDemo/lib/xerces.jar:/Users/niejia/Documents/Idea14/JDiffOriginDemo/lib/classdoc.jar:/Users/niejia/Documents/Idea14/JDiffOriginDemo/lib/ant-launcher-1.8.3.jar:/Applications/IntelliJ IDEA 14.app/Contents/lib/idea_rt.jar -sourcepath /Users/niejia/Documents/Idea14/JDiffOriginDemo/examples/iTrust_v11 -apiname iTrust_v11 -baseURI http://www.w3.org -apidir /Users/niejia/Documents/Idea14/JDiffOriginDemo/build/reports/example -source 1.5 -->
<package name="edu.ncsu.csc.itrust">
  <!-- start class edu.ncsu.csc.itrust.BeanBuilder -->
  <class name="BeanBuilder" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="BeanBuilder"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="build" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="map" type="java.util.Map"/>
      <param name="bean" type="T"/>
      <exception name="Exception" type="java.lang.Exception"/>
      <doc>
      <![CDATA[The code here is not obvious, but this method should not need rewriting unless a bug is found
 
 @param map -
            typically a request.getParameterMap; also can be a HashMap
 @param bean -
            an instantiated bean to be loaded. Loaded bean is returned.
 @return a loaded "bean"
 @throws Exception -
             Several exceptions are thrown here, so promotion seemed fitting]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Takes a parameter map and creates a bean from that map of the appropriate type.
 @param <T> The type to be returned from the appropriate parameter map.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.BeanBuilder -->
  <!-- start class edu.ncsu.csc.itrust.DateUtil -->
  <class name="DateUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DateUtil"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="yearsAgo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="years" type="long"/>
      <doc>
      <![CDATA[Returns a MM/dd/yyyy format of the date for the given years ago
 
 @param years
 @return]]>
      </doc>
    </method>
    <method name="isInMonthRange" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="date" type="java.util.Date"/>
      <param name="firstMonth" type="int"/>
      <param name="secondMonth" type="int"/>
      <doc>
      <![CDATA[Checks to see if a given date is within a range of months <strong>INCLUSIVELY</strong>, agnostic of
 the year. <br />
 <br />
 
 The range "wraps" so that if the first month is after the second month, then the definition of "is in
 month range" is:<br />
 the date falls outside of secondMonth, firstMonth, but including secondMonth and firstMonth.
 
 Modular arithmetic is used to adjust month values into the valid range.
 
 @param date
 @param firstMonth
 @param secondMonth
 @return]]>
      </doc>
    </method>
    <method name="currentlyInMonthRange" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstMonth" type="int"/>
      <param name="secondMonth" type="int"/>
      <doc>
      <![CDATA[Same as isInMonthRange but uses the current date as the date value.
 
 @see DateUtil#isInMonthRange(Date, int, int)
 @param firstMonth
 @param secondMonth
 @return]]>
      </doc>
    </method>
    <method name="getDateXyearsAgoFromNow" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="years" type="int"/>
      <doc>
      <![CDATA[Returns the date a certain number of years ago
 @param years how many years ago
 @return the date it was however many years ago]]>
      </doc>
    </method>
    <method name="getSQLdateXyearsAgoFromNow" return="java.sql.Date"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="years" type="int"/>
      <doc>
      <![CDATA[Returns the date a certain number of years ago
 @param years how many years ago
 @return the date it was however many years ago]]>
      </doc>
    </method>
    <method name="getDateXDaysAgoFromNow" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="days" type="int"/>
      <doc>
      <![CDATA[Returns the date a certain number of days ago
 @param days how many days ago
 @return the date it was however many days ago]]>
      </doc>
    </method>
    <method name="getSQLdateXDaysAgoFromNow" return="java.sql.Date"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="days" type="int"/>
      <doc>
      <![CDATA[Returns the date a certain number of days ago
 @param days how many days ago
 @return the date it was however many days ago]]>
      </doc>
    </method>
    <method name="setSQLMonthRange"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="month1" type="java.sql.Date"/>
      <param name="monthValue1" type="int"/>
      <param name="yearsAgo1" type="int"/>
      <param name="month2" type="java.sql.Date"/>
      <param name="monthValue2" type="int"/>
      <param name="yearsAgo2" type="int"/>
      <doc>
      <![CDATA[<!--Pass in INSTANTIATED sql date objects and they will be set to the specified range, ie, FROM
 <current year> - yearsAgo1/monthValue1/01 TO <current year> - yearsAgo2/monthValue2/<last day of
 month2>--> Pass in INSTANTIATED sql date objects and they will be set to the specified range, ie, FROM
 &lt;current year&gt; - yearsAgo1/monthValue1/01 TO &lt;current year&gt; -
 yearsAgo2/monthValue2/&lt;last day of month2&gt;
 
 @param month1
            First sql.Date object to be set
 @param monthValue1
 @param yearsAgo1
 @param month2
            Second sql.Date object to be set
 @param monthValue2
 @param yearsAgo2]]>
      </doc>
    </method>
    <field name="YEAR_IN_MS" type="long"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Provides a few extra date utilities
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.DateUtil -->
  <!-- start class edu.ncsu.csc.itrust.DBUtil -->
  <class name="DBUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DBUtil"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="canObtainProductionInstance" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Used to check if we can actually obtain a connection.
 
 @return]]>
      </doc>
    </method>
    <method name="closeConnection"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="conn" type="java.sql.Connection"/>
      <param name="ps" type="java.sql.PreparedStatement"/>
      <doc>
      <![CDATA[Close the prepared statement and the connection in a proper way
 
 @param conn
 @param ps]]>
      </doc>
    </method>
    <method name="getLastInsert" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="conn" type="java.sql.Connection"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Returns the last ID that was generated for an auto-increment column. Please note that this does NOT
 cause transaction problems! last_insert_id() returns the last generated ID on a per-connection basis.
 See the MySQL documentation at the following location to confirm this:
 {@link http://dev.mysql.com/doc/refman/5.0/en/getting-unique-id.html}
 
 Don't believe me? see {@link AutoIncrementTest}
 
 @param conn
 @return last generated id
 @throws SQLException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides a few database utilties
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.DBUtil -->
  <!-- start class edu.ncsu.csc.itrust.EmailUtil -->
  <class name="EmailUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EmailUtil" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="sendEmail"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="email" type="edu.ncsu.csc.itrust.beans.Email"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <doc>
    <![CDATA[Sends email to users. Since we don't want to train spammers in 326, this just inserts into a database. If
 we put this into an actual system, we would replace this class with stuff from javax.mail
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.EmailUtil -->
  <!-- start class edu.ncsu.csc.itrust.HtmlEncoder -->
  <class name="HtmlEncoder" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HtmlEncoder"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="encode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <doc>
      <![CDATA[Escapes a few key HTML characters
 @param input String to check and escape
 @return]]>
      </doc>
    </method>
    <method name="URLOnSite" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <doc>
      <![CDATA[Checks URL
 
 @param input URL to check
 @return false if the input contains http://, true otherwise]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Escapes a few key HTML characters and does some other checking
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.HtmlEncoder -->
  <!-- start class edu.ncsu.csc.itrust.Localization -->
  <class name="Localization" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Localization"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getCurrentLocale" return="java.util.Locale"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the current locale
 @return the current locale]]>
      </doc>
    </method>
    <method name="instance" return="edu.ncsu.csc.itrust.Localization"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[singleton method, may want to make this thread safe, as far as I know
 iTrust doesn't do any multithreading though...
 @return Localization instance]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides a singleton for accessing the current locale of iTrust
  Could possibly load the country and language from a file.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.Localization -->
  <!-- start class edu.ncsu.csc.itrust.Messages -->
  <class name="Messages" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Messages"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="key" type="java.lang.String"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.Messages -->
  <!-- start class edu.ncsu.csc.itrust.ParameterUtil -->
  <class name="ParameterUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ParameterUtil"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="convertMap" return="java.util.HashMap&lt;java.lang.String, java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params" type="java.util.Map"/>
      <doc>
      <![CDATA[Provides a utility method that converts the "Map" from the JSP container to a type-checked hashmap
 @param params Map to convert
 @return converted Map]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides a utility method that converts the "Map" from the JSP container to a type-checked hashmap
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.ParameterUtil -->
  <!-- start class edu.ncsu.csc.itrust.RandomPassword -->
  <class name="RandomPassword" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RandomPassword"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getRandomPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a string of random characters
 
 @return a string of random characters]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Generates a random string of characters
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.RandomPassword -->
</package>
<package name="edu.ncsu.csc.itrust.action">
  <!-- start class edu.ncsu.csc.itrust.action.ActivityFeedAction -->
  <class name="ActivityFeedAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ActivityFeedAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person retrieving the logs.]]>
      </doc>
    </constructor>
    <method name="getTransactions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="time" type="java.util.Date"/>
      <param name="n" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Returns a list of TransactionBeans between the two dates passed as params
 
 @param n Number of "pages" of 20 log entries to retrieve.
 @return list of 20*n TransactionBeans
 @throws DBException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="recent" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="java.util.Date"/>
      <doc>
      <![CDATA[Returns an indicator of the number of days between the current date and the date passed
 as a parameter. Returns 0 if the dates are on the same day, 1 if the date passed in is
 "yesterday", 2 otherwise.
 
 @param d1 First date
 @param d2 Second date
 @return 0, 1, or 2, depending on the difference in the dates.]]>
      </doc>
    </method>
    <method name="getMessageAsSentence" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="actor" type="java.lang.String"/>
      <param name="timestamp" type="java.sql.Timestamp"/>
      <param name="code" type="edu.ncsu.csc.itrust.enums.TransactionType"/>
      <doc>
      <![CDATA[Pulls Action Phrase from the associated TransactionType Enum
 Forms an English sentence with actor, action, and timestamp.
 @param actor
 @param timestamp
 @param code
 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles retrieving the log of record accesses for a given user Used by viewAccessLog.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ActivityFeedAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddApptAction -->
  <class name="AddApptAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddApptAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="addAppt" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appt" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets a users's name from their MID
 
 @param mid the MID of the user
 @return the user's name
 @throws iTrustException]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddApptAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddERespAction -->
  <class name="AddERespAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddERespAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up the defaults for the class
 
 @param factory factory for creating the defaults.
 @param loggedInMID person currently logged in 
 @author Andy Meneely]]>
      </doc>
    </constructor>
    <method name="add" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds the new user.  Event is logged.
 
 @param p bean containing the information for the new user
 @return MID of the new user.
 @throws FormValidationException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for Add Personnel page (addPersonnel.jsp). This just adds an empty HCP/UAP, creates a random password
 for them.
 
 Very similar to {@link AddOfficeVisitAction} and {@link AddPatientAction}
 
 @author Andy Meneely
 
 Copied from AddHCPAction]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddERespAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddHCPAction -->
  <class name="AddHCPAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddHCPAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up the defaults for the class
 
 @param factory factory for creating the defaults.
 @param loggedInMID person currently logged in 
 @author Andy Meneely]]>
      </doc>
    </constructor>
    <method name="add" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds the new user.   Event is logged.
 
 @param p bean containing the information for the new user
 @return MID of the new user.
 @throws FormValidationException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for Add Personnel page (addPersonnel.jsp). This just adds an empty HCP/UAP, creates a random password
 for them.
 
 Very similar to {@link AddOfficeVisitAction} and {@link AddPatientAction}
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddHCPAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddOfficeVisitAction -->
  <class name="AddOfficeVisitAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddOfficeVisitAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Sets up the defaults for the class
 @param factory
 @param pidString
            Patient ID to be validated by the superclass, {@link PatientBaseAction}
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="addEmptyOfficeVisit" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="loggedInMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds an empty office visit
 
 @param loggedInMID
            For logging purposes
 @return Office visit ID (primary key) of the new office visit
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllOfficeVisits" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Lists all office visits for a particular patient, regardless of who originally documented the office
 visit.
 
 @return List of office visits,
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getUserName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the full name of the patient with this MID
 
 @return name in the form of a string
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for Document Office Visit page (documentOfficeVisit.jsp). This just adds an empty office visit, and
 provides a list of office visits in case you want to edit an old office visit.
 
 Very similar to {@link AddPatientAction}
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddOfficeVisitAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddPatientAction -->
  <class name="AddPatientAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddPatientAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Just the factory and logged in MID
 
 @param factory
 @param loggedInMID]]>
      </doc>
    </constructor>
    <method name="addPatient" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PatientBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Creates a new patient, returns the new MID. Adds a new user to the table along with a random password.
 
 @return the new MID of the patient
 @throws DBException
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for Add Patient page (addPatient.jsp). This just adds an empty patient, creates a random password for
 that patient.
 
 Very similar to {@link AddOfficeVisitAction}
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddPatientAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddPHAAction -->
  <class name="AddPHAAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddPHAAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up the defaults for the class
 
 @param factory factory for creating the defaults.
 @param loggedInMID person currently logged in 
 @author Andy Meneely]]>
      </doc>
    </constructor>
    <method name="add" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds the new user.   Event is logged.
 
 @param p bean containing the information for the new user
 @return MID of the new user.
 @throws FormValidationException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for Add Personnel page (addPersonnel.jsp). This just adds an empty PHA, creates a random password
 for them.
 
 Very similar to {@link AddOfficeVisitAction} and {@link AddPatientAction}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddPHAAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction -->
  <class name="AddRemoteMonitoringDataAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddRemoteMonitoringDataAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person recording the patient's data.
 @param patientMID The MID of the patient]]>
      </doc>
    </constructor>
    <method name="getTelemedicineBean" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TelemedicineBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="addRemoteMonitoringData"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rmdBean" type="edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a patient's telemedicine data to the database.
 
 @param weight
 @param pedometerReading
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPatientName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[returns the patient name
 
 @return patient name
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles adding remote monitoring patient data to the database]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddRemoteMonitoringDataAction -->
  <!-- start class edu.ncsu.csc.itrust.action.AddUAPAction -->
  <class name="AddUAPAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddUAPAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up the defaults for the class
 
 @param factory factory for creating the defaults.
 @param loggedInMID person currently logged in 
 @author Andy Meneely]]>
      </doc>
    </constructor>
    <method name="add" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds the new user.  Event is logged.
 
 @param p bean containing the information for the new user
 @return MID of the new user.
 @throws FormValidationException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for Add Personnel page (addPersonnel.jsp). This just adds an empty HCP/UAP, creates a random password
 for them.
 
 Very similar to {@link AddOfficeVisitAction} and {@link AddPatientAction}
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.AddUAPAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction -->
  <class name="ChangeSessionTimeoutAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ChangeSessionTimeoutAction" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up defualts.
 
 @param factory
 @author Andy Meneely]]>
      </doc>
    </constructor>
    <method name="changeSessionTimeout"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="minuteString" type="java.lang.String"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Changes the session timeout, the complicated logic of this is somewhat regrettably in the DAO,
 {@link AccessDAO}
 
 @param minuteString
            Pass the number of minutes in the form of a string, greater than 0.
 @throws FormValidationException
 @throws DBException
 @author Andy Meneely]]>
      </doc>
    </method>
    <method name="getSessionTimeout" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the current session timeout in minutes, as reflected in the database
 
 @return the number of minutes it would take for an inactive session to timeout
 @throws DBException
 @author Andy Meneely]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used to change the session timeout, sessionTimeout.jsp. Note that a change to this timeout only gets
 reflected on new sessions.
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ChangeSessionTimeoutAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction -->
  <class name="ChronicDiseaseRiskAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ChronicDiseaseRiskAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
      <doc>
      <![CDATA[@param factory
 @param loggedInMID
 @param pidString
            The patient ID to be validated and used
 @throws iTrustException
 @throws DBException
 @throws NoHealthRecordsException
             This is thrown if a patient is added without any health records to be checked. Try to avoid
             having this exception be thrown in a normal flow of events.
 @author Andy Meneely]]>
      </doc>
    </constructor>
    <method name="getPatientID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the ID of the patient to be checked.
 
 @return patient ID whose risk we are checking
 @author Andy Meneely]]>
      </doc>
    </method>
    <method name="getUserName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gives the full name of the patient
 
 @return Full name of the patient who we are checking
 @throws DBException
 @throws iTrustException
 @author Andy Meneely]]>
      </doc>
    </method>
    <method name="getDiseasesAtRisk" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.RiskChecker&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the risks for which this patient is at risk for. All logic has been passed to
 {@link ChronicDiseaseMediator} and the subclasses of {@link RiskChecker}.
 
 @return List of risks
 @throws iTrustException
 @throws DBException
 @author Andy Meneely]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for chronicDiseaseRisks.jsp. Passes most of the logic off to {@link ChronicDiseaseMediator}, and the
 various subclasses of {@link RiskChecker}.
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ChronicDiseaseRiskAction -->
  <!-- start class edu.ncsu.csc.itrust.action.DeclareHCPAction -->
  <class name="DeclareHCPAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DeclareHCPAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up defaults
 
 @param factory The DAO factory to be used for generating the DAOs for this action.
 @param loggedInMID
            This patient
 @author Andy Meneely]]>
      </doc>
    </constructor>
    <method name="getDeclaredHCPS" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Lists the declared HCPs for this current patient
 
 @return Returns a list of the declared HCPs
 @throws iTrustException
 @author Andy Meneely]]>
      </doc>
    </method>
    <method name="declareHCP" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpStr" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Validate an HCP's MID and declare them, if possible
 
 @param hcpStr
            The MID of an HCP to declare
 @return A status message,
 @throws iTrustException
 @author Andy Meneely]]>
      </doc>
    </method>
    <method name="undeclareHCP" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Validate an HCP's MID and undeclare them, if possible
 
 @param input
            The MID of an HCP to undeclare
 @return
 @throws iTrustException
 @author Andy Meneely]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used by the patient to declare HCPs as "designated", in editHCPs.jsp.
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.DeclareHCPAction -->
  <!-- start class edu.ncsu.csc.itrust.action.DrugInteractionAction -->
  <class name="DrugInteractionAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DrugInteractionAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up defaults
 
 @param factory The DAO factory to be used for generating the DAOs for this action.]]>
      </doc>
    </constructor>
    <method name="reportInteraction" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstDrug" type="java.lang.String"/>
      <param name="secondDrug" type="java.lang.String"/>
      <param name="description" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Method to report an interaction
 @param firstDrug
 @param secondDrug
 @param description
 @return]]>
      </doc>
    </method>
    <method name="deleteInteraction" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstDrug" type="java.lang.String"/>
      <param name="secondDrug" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Method to delete an interaction
 @param firstDrug
 @param secondDrug
 @return]]>
      </doc>
    </method>
    <method name="getInteractions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DrugInteractionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="drugCode" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Method to return a list of drug interactions for a given drug
 @param drugCode - The ND Code of the drug
 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used by EditDrugInteraction.jsp to edit and get information about drug interactions.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.DrugInteractionAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditApptAction -->
  <class name="EditApptAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditApptAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getAppt" return="edu.ncsu.csc.itrust.beans.ApptBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptID" type="int"/>
      <doc>
      <![CDATA[Retrieves an appointment from the database, given its ID.
 Returns null if there is no match, or multiple matches.
 
 @param apptID
 @return ApptBean with matching ID]]>
      </doc>
    </method>
    <method name="editAppt" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appt" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates an existing appointment
 
 @param appt Appointment Bean containing the updated information
 @return Message to be displayed
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="removeAppt" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appt" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <doc>
      <![CDATA[Removes an existing appointment
 
 @param appt Appointment Bean containing the ID of the appointment to be removed.
 @return Message to be displayed]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets a users's name from their MID
 
 @param mid the MID of the user
 @return the user's name
 @throws iTrustException]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditApptAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditApptTypeAction -->
  <class name="EditApptTypeAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditApptTypeAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getApptTypes" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptTypeBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="addApptType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptType" type="edu.ncsu.csc.itrust.beans.ApptTypeBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
    <method name="editApptType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptType" type="edu.ncsu.csc.itrust.beans.ApptTypeBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
    <method name="getDurationByType" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="at" type="java.lang.String"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditApptTypeAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditHealthHistoryAction -->
  <class name="EditHealthHistoryAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditHealthHistoryAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[The patient ID is validated by the superclass
 
 @param factory The DAOFactory which will be used to generate the DAOs used for this action.
 @param loggedInMID The user authorizing this action.
 @param pidString The patient (or other user) who is being edited.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="getPatientName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[returns the patient name
 
 @return patient name
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="addHealthRecord" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <param name="hr" type="edu.ncsu.csc.itrust.beans.forms.HealthRecordForm"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a health record for the given patient
 
 @param pid  The patient record who is being edited.
 @param hr  The filled out health record form to be added.
 @return message - "Information Recorded" or exception's message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="getAllHealthRecords" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of all HealthRecords for the given patient
 
 @param pid  The ID of the patient to look up
 @return list of HealthRecords
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Edits the health history of a patient, used by editBasicHealth.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditHealthHistoryAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditMonitoringListAction -->
  <class name="EditMonitoringListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditMonitoringListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the HCP editing their monitoring list.]]>
      </doc>
    </constructor>
    <method name="addToList" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="tBean" type="edu.ncsu.csc.itrust.beans.TelemedicineBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a patient to the current HCP's remote monitoring list
 
 @param patientMID the patient
 @param permissions Array indicating what data the patient is allowed to enter. 
                                Ordered by Systolic Blood Pressure, Diastolic Blood Pressure, Glucose Level, Weight, Pedometer Reading.
 @return true if added successfully. False if already in list.
 @throws DBException]]>
      </doc>
    </method>
    <method name="removeFromList" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Removes a patient from the current HCP's remote monitoring list
 
 @param patientMID the patient
 @return true if removed successfully. False if not in list.
 @throws DBException]]>
      </doc>
    </method>
    <method name="isPatientInList" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns whether a patient is in an HCP's list already
 @param patientMID the patient
 @return true if in DB, false otherwise
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPatientName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[returns the patient name
 
 @return patient name
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles changes (adds and removes) to the monitoring list for a certain HCP.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditMonitoringListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditOfficeVisitAction -->
  <class name="EditOfficeVisitAction" extends="edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditOfficeVisitAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Patient id and office visit id validated by super class
 
 @param factory The DAOFactory to be used in creating the DAOs for this action.
 @param loggedInMID The MID of the user who is authorizing this action.
 @param pidString The patient who this action is performed on.
 @param ovIDString The ID of the office visit in play.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="getOfficeVisit" return="edu.ncsu.csc.itrust.beans.OfficeVisitBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the office visit bean for the office visit
 
 @return the OfficeVisitBean of the office visit
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getLabProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="ovid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of the lab procedures that have been done in an office visit.
 
 @param mid the doctor the visit was with
 @param ovid the office visit's id
 @return a list of the lab procedures that were done in that visit
 @throws DBException]]>
      </doc>
    </method>
    <method name="getHospitals" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[This is a list of all hospitals, ordered by the office visit's hcp FIRST
 
 @param hcpID
 @return
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="updateInformation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="form" type="edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates the office visit with information from the form passed in
 
 @param form
            information to update
 @return "success" or exception's message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="hasInteraction" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="drug" type="java.lang.String"/>
      <param name="pid" type="java.lang.String"/>
      <param name="startdate" type="java.lang.String"/>
      <param name="enddate" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
    </method>
    <method name="isAllergyOnList" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patMID" type="java.lang.String"/>
      <param name="ndcode" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
    </method>
    <method name="makeEmailApp" return="edu.ncsu.csc.itrust.beans.Email"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
      <param name="patID" type="java.lang.String"/>
      <param name="problem" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Sends e-mail regarding the prescribed dangerous drug.
 
 @param hcpID HCP the prescription is made by
 @param patID ID of the patient prescription is for
 @param problem The allergy and/or interaction that is the problem
 @return the sent e-mail
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Edits the office visits of a patient Used by editOfficeVisit.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditOfficeVisitAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditPatientAction -->
  <class name="EditPatientAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditPatientAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[The super class validates the patient id
 
 @param factory The DAOFactory used to create the DAOs for this action.
 @param loggedInMID The MID of the user who is authorizing this action.
 @param pidString The MID of the patient being edited.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="updateInformation"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PatientBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Takes the information out of the PatientBean param and updates the patient's information
 
 @param p
            the new patient information
 @throws iTrustException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a PatientBean for the patient
 
 @return the PatientBean
 @throws DBException]]>
      </doc>
    </method>
    <method name="editMessageFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="filter" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
    <doc>
    <![CDATA[Edits a patient Used by editPatient.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditPatientAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditPersonnelAction -->
  <class name="EditPersonnelAction" extends="edu.ncsu.csc.itrust.action.base.PersonnelBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditPersonnelAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Super class validates the patient id
 
 @param factory The DAOFactory used to create the DAOs for this action.
 @param loggedInMID The MID of the user editing this personnel.
 @param pidString The ID of the user being edited.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="updateInformation"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="personnelForm" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Takes information from the personnelForm param and updates the patient
 
 @param personnelForm
            PersonnelBean with new information
 @throws iTrustException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="editMessageFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="filter" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
    <doc>
    <![CDATA[Edits the designated personnel Used by admin/editPersonnel.jsp, staff/editMyDemographics.jsp,
 editPersonnel.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditPersonnelAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditPHRAction -->
  <class name="EditPHRAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditPHRAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Super class validates the patient id
 
 @param factory The DAOFactory to be used in creating DAOs for this action.
 @param loggedInMID The MID of the currently logged in user who is authorizing this action.
 @param pidString The MID of the patient whose personal health records are being added.
 @throws iTrustException
 @throws DBException
 @throws NoHealthRecordsException]]>
      </doc>
    </constructor>
    <method name="updateAllergies" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <param name="description" type="java.lang.String"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds an allergy to the patient's records
 
 @param pid
 @param description
 @return "Allergy Added", exception message, a list of invalid fields, or "" (only if description is
         null)
 @throws DBException 
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PatientBean for the patient
 
 @return PatientBean
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getAllergies" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AllergyBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of AllergyBeans for the patient
 
 @return list of AllergyBeans
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getFamily" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of FamilyMemberBeans for the patient
 
 @return list of FamilyMemberBeans
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getAllHealthRecords" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of HealthRecords for the patient
 
 @return
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getAllOfficeVisits" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of OfficeVisitBeans
 
 @return
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getCompleteOfficeVisit" return="edu.ncsu.csc.itrust.beans.OfficeVisitBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a complete OfficeVisitBean given a visitID
 
 @return
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getDiseasesAtRisk" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.RiskChecker&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of diseases for which the patient is at risk
 
 @return list of RiskCheckers
 @throws iTrustException
 @throws DBException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveHighBP" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if a particular family member has high blood pressure
 
 @param member the family member to check
 @return true if the family member has high blood pressure.  False if there are no records or the family member does not have high blood pressure
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveHighCholesterol" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if a particular family member has high cholesterol
 
 @param member the family member to check
 @return true if the family member has high cholesterol.  False if there are no records or the family member does not
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveDiabetes" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if a particular family member has diabetes
 
 @param member the family member to check
 @return true if the family member has diabetes.  False if there are no records or the family member does not
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveCancer" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if a particular family member has cancer
 
 @param member the family member to check
 @return true if the family member has cancer.  False if there are no records or the family member does not
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveHeartDisease" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if a particular family member has heart disease
 
 @param member the family member to check
 @return true if the family member has heart disease.  False if there are no records or the family member does not
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="isFamilyMemberSmoker" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if a particular family member smokes
 
 @param member the family member to check
 @return true if the family member smokes.  False if there are no records or the family member does not
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getFamilyMemberCOD" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if the family member is dead and returns their cause of death if so
 
 @param member the family member to check
 @return the cause of death if there is one; otherwise null
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Edits the patient health record for a given patient Used by editPHR.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditPHRAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditPrescriptionAction -->
  <class name="EditPrescriptionAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditPrescriptionAction" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Creates a new action by initializing the office visit
 database access object.
 
 @param factory
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="editPrescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pres" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Edits an existing prescription in the database.
 
 @param pres The prescription bean that has been changed.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Edits a patient's prescription information.  Used by hcp-uap/editPrescription.jsp
 @author Ben Smith]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditPrescriptionAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EditRepresentativesAction -->
  <class name="EditRepresentativesAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditRepresentativesAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Super class validates the patient mid
 
 @param factory The DAOFactory used in creating the DAOs for this action.
 @param loggedInMID The MID of the patient editing his/her representatives.
 @param pidString The MID of the representative in question.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="getRepresented" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Return a list of patients that pid represents
 
 @param pid The id of the personnel we are looking up representees for.
 @return a list of PatientBeans
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="addRepresentative" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pidString" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Makes the patient (pid) represent the input mid parameter
 
 @param pidString
            the mid of the person who will be represented (the representee)
 @return a message
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="removeRepresentative" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Makes the patient (pid) no longer represent the input mid param
 
 @param input
            the mid of the person be represented (representee)
 @return a message
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Edits a patient's personal representatives. Used by hcp/editRepresentatives.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EditRepresentativesAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EmergencyReportAction -->
  <class name="EmergencyReportAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EmergencyReportAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[The super class handles validating the pid Logs viewing of the report
 
 @param factory The DAOFactory used in creating the DAOs for this action.
 @param loggedInMID The MID of the user who is looking at the emergency report.
 @param pidString The ID of the patient whose report is being generated.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="getPatientName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the patient's name
 
 @return patient's full name]]>
      </doc>
    </method>
    <method name="getPatientAge" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the patient's age
 
 @return patient's age]]>
      </doc>
    </method>
    <method name="getPatientGender" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the patient's gender
 
 @return patient's gender]]>
      </doc>
    </method>
    <method name="getPatientEmergencyContact" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the patient's emergency contact
 
 @return patient's emergency contact]]>
      </doc>
    </method>
    <method name="getBloodType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the patient's blood type
 
 @return the patient's blood type]]>
      </doc>
    </method>
    <method name="getAllergies" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AllergyBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of allergies for the given patient
 
 @return a list of AllergyBeans
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getCurrentPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of prescriptions the patient is currently taking
 
 @return a list of PrescriptionBeans for which the patient is currently taking
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getWarningDiagnoses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of diagnoses that are in the range indicated by the DiagnosisRange enum
 
 @return list of DiagnosisBeans
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getImmunizations" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of prescriptions the patient is currently taking
 
 @return a list of PrescriptionBeans for which the patient is currently taking
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Creates a new Emergency Report Used by emergencyReport.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EmergencyReportAction -->
  <!-- start class edu.ncsu.csc.itrust.action.EventLoggingAction -->
  <class name="EventLoggingAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EventLoggingAction" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person retrieving the logs.]]>
      </doc>
    </constructor>
    <method name="logEvent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="edu.ncsu.csc.itrust.enums.TransactionType"/>
      <param name="loggedInMID" type="long"/>
      <param name="secondaryMID" type="long"/>
      <param name="addedInfo" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Log a transaction, with all of the info. The meaning of secondaryMID and addedInfo changes depending on
 the transaction type.
 
 @param type The {@link TransactionType} enum representing the type this transaction is.
 @param loggedInMID The MID of the user who is logged in.
 @param secondaryMID Typically, the MID of the user who is being acted upon.
 @param addedInfo A note about a subtransaction, or specifics of this transaction (for posterity).
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles retrieving the log of record accesses for a given user Used by viewAccessLog.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.EventLoggingAction -->
  <!-- start class edu.ncsu.csc.itrust.action.GenerateCalendarAction -->
  <class name="GenerateCalendarAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="GenerateCalendarAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user who is viewing the calendar]]>
      </doc>
    </constructor>
    <method name="getSend" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Return the send request for an AppointmentBean
 @return the send request for an AppointmentBean]]>
      </doc>
    </method>
    <method name="getConflicts" return="boolean[]"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Check appointments appearing on the calendar for conflicts 
 with other appointments on the calendar. 
 
 The array from this method is used to determine what appointments
 will appear in bold on the calendar.
 
 @return An array of items that are in conflict with other items.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getApptsTable" return="java.util.Hashtable&lt;java.lang.Integer, java.util.ArrayList&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="thisMonth" type="int"/>
      <param name="thisYear" type="int"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Creates a hash table with all of the Appointments to be 
 displayed on the calendar for the month and year being viewed.
 
 @param thisMonth The month of the calendar to be rendered
 @param thisYear The year of the calendar to be rendered
 @return A Hashtable containing the AppointmentBeans to be rendered
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getOfficeVisitsTable" return="java.util.Hashtable&lt;java.lang.Integer, java.util.ArrayList&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="thisMonth" type="int"/>
      <param name="thisYear" type="int"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Creates a hash table with all of the Office Visits to be 
 displayed on the calendar for the month and year being viewed.
 
 @param thisMonth The month of the calendar to be rendered
 @param thisYear The year of the calendar to be rendered
 @return A Hashtable containing the OfficeVisitBeans to be rendered
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getLabProceduresTable" return="java.util.Hashtable&lt;java.lang.Integer, java.util.ArrayList&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="thisMonth" type="int"/>
      <param name="thisYear" type="int"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Creates a hash table with all of the lab procedures to be 
 displayed on the calendar for the month and year being viewed.
 
 @param thisMonth The month of the calendar to be rendered
 @param thisYear The year of the calendar to be rendered
 @return A Hashtable containing the LabProcedureBeans to be rendered
 @throws SQLException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Action class for calendar.jsp
 @author Software Engineering Team 13, 2010 "Project Zephyr"]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.GenerateCalendarAction -->
  <!-- start class edu.ncsu.csc.itrust.action.GetUserNameAction -->
  <class name="GetUserNameAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="GetUserNameAction" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used for creating the DAOs for this action.]]>
      </doc>
    </constructor>
    <method name="getUserName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="inputMID" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the person's name that matches the inputMID param
 
 @param inputMID The MID to look up.
 @return the person's name
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles Getting the person's name associated with a certain mid Used by getUser.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.GetUserNameAction -->
  <!-- start class edu.ncsu.csc.itrust.action.GetVisitRemindersAction -->
  <class name="GetVisitRemindersAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="GetVisitRemindersAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID MID of the person who is logged in
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="getVisitReminders" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="edu.ncsu.csc.itrust.action.GetVisitRemindersAction.ReminderType"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Returns a list of VisitReminderReturnForms for the type passed in as a param
 
 @param type
            the ReminderType
 @return the list of VisitReminderReturnForms
 @throws iTrustException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="testHPV" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the HPV immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testHepA" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Hepatits A immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testVaricella" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Varicella immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testMeasles" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Measles, Mumps, and Rubekka immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testPolio" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Polio immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testPneumo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <param name="firstDoseTime" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Pneumococcal immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testHaemoFlu" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <param name="firstDoseTime" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Haemophilus Infulenzae immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testDipTet" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Diphtheria, Tetanus, Pertussis immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testRotaVirus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Rotavirus immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <method name="testHepB" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="count" type="int"/>
      <param name="patientAge" type="long"/>
      <param name="time" type="long"/>
      <doc>
      <![CDATA[Checks to see if a patient needs the Hepatitis B immunization
 
 @param count which immunization they are on
 @param patientAge how old the patient is
 @param time what the current date is
 @return when the immunization should be given]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Gets the VisitReminders for a given patient Used by visitReminders.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.GetVisitRemindersAction -->
  <!-- start class edu.ncsu.csc.itrust.action.GetVisitRemindersAction.ReminderType -->
  <class name="GetVisitRemindersAction.ReminderType" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.action.GetVisitRemindersAction.ReminderType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.action.GetVisitRemindersAction.ReminderType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.action.GetVisitRemindersAction.ReminderType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getReminderType" return="edu.ncsu.csc.itrust.action.GetVisitRemindersAction.ReminderType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <doc>
      <![CDATA[Gets the ReminderType for the name passed as a param
 
 @param name
 @return the ReminderType associated with the name]]>
      </doc>
    </method>
    <method name="getTypeName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the type name as a string
 
 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Reminder Type enumeration.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.GetVisitRemindersAction.ReminderType -->
  <!-- start class edu.ncsu.csc.itrust.action.LabProcHCPAction -->
  <class name="LabProcHCPAction" extends="edu.ncsu.csc.itrust.action.LabProcUAPAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LabProcHCPAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID  MID for the logged in HCP]]>
      </doc>
    </constructor>
    <method name="sortByLOINC" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[This method sorts by LOINC and returns the list
 
 @param id the ID to sort the list by
 @return List sorted by LOINC]]>
      </doc>
    </method>
    <method name="getLabProcForNextMonth" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all the lab procedures for the next month
 
 @return all the lab procedures for the next month]]>
      </doc>
    </method>
    <method name="changePrivacy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Changes the privacy settings
 
 @param x the ID of the procedure to change]]>
      </doc>
    </method>
    <method name="checkAccess" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="x" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Checks to see if the logged in HCP is the one who made the procedure.  Used to generate links for page to edit OfficeVisit
 
 @param x the ID of the HCP to check]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Action class for LabProcHCP.jsp.
 
 @extends LabProcUAPAction]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.LabProcHCPAction -->
  <!-- start class edu.ncsu.csc.itrust.action.LabProcUAPAction -->
  <class name="LabProcUAPAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LabProcUAPAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Setup 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID UAP who is logged in]]>
      </doc>
    </constructor>
    <method name="updateProcedure"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="edu.ncsu.csc.itrust.beans.LabProcedureBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates a lab procedure
 
 @param b the procedure to update
 @throws DBException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="viewProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all the lab procedures
 
 @param id MID of the UAP viewing the procedures 
 @return a list of all the lab procedures for that UAP
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Class for LabProcUAP.jsp.  Handles lab procedures for UAPs]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.LabProcUAPAction -->
  <!-- start class edu.ncsu.csc.itrust.action.LoginFailureAction -->
  <class name="LoginFailureAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LoginFailureAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param ipAddr The IP address of the user making the login attempt.]]>
      </doc>
    </constructor>
    <method name="recordLoginFailure" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Calls authDAO to record the login failure in the database
 
 @return How many login failure attempts or a DBException message]]>
      </doc>
    </method>
    <method name="isValidForLogin" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Checks to see if the current user can login (#failures<3)
 
 @return true if the user is valid to login]]>
      </doc>
    </method>
    <method name="needsCaptcha" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="resetFailures"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="setCaptcha"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="val" type="boolean"/>
    </method>
    <method name="getFailureCount" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="MAX_LOGIN_ATTEMPTS" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Please note that this is not the best mitigation for Denial of Service attacks. The better way would be to
 keep track of password failure attempts per user account, NOT with easily spoofable ip addresses. The
 reason this feature is implemented with ip addresses is a limitation in Tomcat authentication (actually,
 it's technically JSP's fault for not specifying a form of account lockout). <br />
 <br />
 All authentication in this application is done by the container (Tomcat), which doesn't support account
 lockout. So our options would be (a) to implement our own authentication (yuck!), or (2) to extend the
 JDBCRealm class in the Tomcat source code and add the logic. I've looked into this and it's actually pretty
 easy. The ONLY reason it's not implemented here is that the code would be buried in a jar in your Tomcat
 installation - not very educational for those who want to learn about authentication in webapps. Feel free
 to change this; extending this would be perfectly acceptable.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.LoginFailureAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction -->
  <class name="ManageHospitalAssignmentsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ManageHospitalAssignmentsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user managing hospitals.]]>
      </doc>
    </constructor>
    <method name="getAvailableHospitals" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="midString" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of hospitals to which the given mid is not currently assigned
 
 @param midString
 @return list of HospitalBeans
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getAssignedHospitals" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="midString" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of hospitals to which the given mid is currently assigned
 
 @param midString
 @return list of HosptialBeans
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="assignHCPToHospital" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="midString" type="java.lang.String"/>
      <param name="hospitalID" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Assigns the mid to the hospital
 
 @param midString The MID of the person assigned to the hospital as a String.
 @param hospitalID The ID of the hospital.
 @return message indicating the status of the assignment
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="removeHCPAssignmentToHospital" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="midString" type="java.lang.String"/>
      <param name="hospitalID" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Removes HCPs assignment to the designated hospital
 
 @param midString
            the HCP's mid
 @param hospitalID
            the hospital id to be removed
 @return Status message
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="removeAllAssignmentsFromHCP" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="midString" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Removes all hospital assignments for the given hcp mid
 
 @param midString
            HCP's mid
 @return status message
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="checkHCPID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks if the hcpID param is a HCP
 
 @param hcpID
            the String to be checked
 @return the mid as a long if the hcpID is a HCP's mid
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Manages the assignment of HCPs to hospitals Used by hospitalAssignments.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ManageHospitalAssignmentsAction -->
  <!-- start class edu.ncsu.csc.itrust.action.MonitorAdverseEventAction -->
  <class name="MonitorAdverseEventAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MonitorAdverseEventAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor 
 @param factory
 @param loggedInMID]]>
      </doc>
    </constructor>
    <method name="getReports" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="isPrescription" type="boolean"/>
      <param name="start" type="java.lang.String"/>
      <param name="end" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <exception name="ParseException" type="java.text.ParseException"/>
      <doc>
      <![CDATA[Returns a list of reports between specified dates
 @param isPrescription Boolean to return prescriptions or immunizations
 @param start The starting date
 @param end The ending date
 @return the list of events
 @throws iTrustException
 @throws FormValidationException
 @throws SQLException
 @throws ParseException]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="MID" type="long"/>
      <doc>
      <![CDATA[Returns the patient's name
 @param MID the MID of the patient to return the name for.
 @return]]>
      </doc>
    </method>
    <method name="sendEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="message" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Sends an e-mail to a patient requesting more information
 @param patientMID The patient to receive the message
 @param message The message
 @return string for testing purposes
 @throws DBException]]>
      </doc>
    </method>
    <method name="remove"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Method used to remove an adverse event report
 
 @param id the id of the report to be removed
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.MonitorAdverseEventAction -->
  <!-- start class edu.ncsu.csc.itrust.action.MyDiagnosisAction -->
  <class name="MyDiagnosisAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MyDiagnosisAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Set up for defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user who is looking at their diagnoses.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="getDiagnoses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of DiagnosisBeans for the patient
 
 @return the list of DiagnosisBeans
 @throws DBException]]>
      </doc>
    </method>
    <method name="getHCPByDiagnosis" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HCPDiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icdcode" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all the HCPs who have a particular diagnosis
 
 @param icdcode the diagnosis of interest
 @return the list of HCPs
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPrescriptionsByHCPAndICD" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpid" type="long"/>
      <param name="icdcode" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Looks up all the prescriptions given by a certain HCP with the same ICD code.
 @param hcpid The MID of the HCP
 @param icdcode The ICD code of the prescription we are looking up.
 @return A java.util.List of PrescriptionBeans made by this HCP of this ICD code.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Edits the privacy levels of diagnoses, used by myDiagnoses.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.MyDiagnosisAction -->
  <!-- start class edu.ncsu.csc.itrust.action.PrescriptionReportAction -->
  <class name="PrescriptionReportAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PrescriptionReportAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
      <doc>
      <![CDATA[Super class validates pidString
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user who is making a prescription report.
 @param pidString The MID of the patient in question.
 @throws iTrustException
 @throws DBException
 @throws NoHealthRecordsException]]>
      </doc>
    </constructor>
    <method name="representPatient" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Takes the patient's representee as a param and returns it as a long if the patient represents the input
 param
 
 @param input
            the patient's representee mid
 @return representee's mid as a long
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getAllOfficeVisits" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all office visits for the pid
 
 @return list of OfficeVisitBeans for the pid
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPrescriptionReports" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionReportBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params" type="java.util.Map"/>
      <param name="officeVisits" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Used by the JSP, passes a Map from the html form and a list of OfficeVisitBeans Returns a list of
 PrescriptionReportBeans
 
 @param params A java.util.HashMap containing the parameter map.
 @param officeVisits A java.util.List of OfficeVisitBeans for the visits.
 @return list of PrescriptionReportBeans
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a PatientBean for the pid
 
 @return PatientBean
 @throws DBException]]>
      </doc>
    </method>
    <method name="getQueryString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="paramMap" type="java.util.Map"/>
      <param name="officeVisits" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Used by the JSP, which passes the param map from the html form and a list of OfficeVisitBeans Returns a
 string that will be used to create a new url. The JSP will pull params from this url to create the
 prescription report.
 
 @param paramMap A java.util.HashMap of the parameters.
 @param officeVisits A java.util.List of OfficeVisitBeans.
 @return the string that will be used in the new url
 @throws FormValidationException
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles Prescription Reports for the given pid Used by hcp-uap/getPrescriptionReport.jsp,
 hcp-uap/viewPrescriptionRecord.jsp, patient/getMyPrescriptionReport.jsp, &
 patient/viewMyPrescriptionRecord.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.PrescriptionReportAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ProfilePhotoAction -->
  <class name="ProfilePhotoAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ProfilePhotoAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ProfilePhotoAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, ServletFileUpload"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="storePicture" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="request" type="HttpServletRequest"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Processes a multipart reqeuest (i.e. uploads) and then parses it as an image, then storing it in the
 database.
 
 @param request
 @return
 @throws DBException]]>
      </doc>
    </method>
    <method name="removePhoto" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[This method calls the ProfilePhotoDAO remove method and handles 
 IOExceptions appropriately.
 @param mid
 @return
 @throws DBException]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ProfilePhotoAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ReferralManagementAction -->
  <class name="ReferralManagementAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReferralManagementAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Super class validates the patient id
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user managing this referral.
 @param pidString The MID of the patient being referred.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="sendReferral"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="r" type="edu.ncsu.csc.itrust.beans.ReferralBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a referral bean to the database.
 @param r The referral bean to be added.
 @throws DBException]]>
      </doc>
    </method>
    <method name="updateReferral"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="r" type="edu.ncsu.csc.itrust.beans.ReferralBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates an existing referral bean.
 @param r The current referral bean.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getReferralsSentFromMe" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReferralBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets the referrals the currently logged in MID has sent.
 @return A java.util.List of ReferralBeans this MID has sent.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getReferralsSentToMe" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReferralBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets the referrals this MID has received.
 @return A java.util.List of the ReferralBeans this MID has received.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for referring patients to other HCPs.  The call is made in /auth/hcp/hcpConsultation.jsp]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ReferralManagementAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ReportAdverseEventAction -->
  <class name="ReportAdverseEventAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReportAdverseEventAction" type="java.lang.String, edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ReportAdverseEventAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor used to send e-mails only]]>
      </doc>
    </constructor>
    <method name="sendMails" return="edu.ncsu.csc.itrust.beans.Email"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aeList" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Method that sends exactly one e-mail to each MID in the list of Adverse Events
 @param aeList The list of adverse Event Beans that need to be acted upon
 @return EList The list of e-mails sent for testing purposes]]>
      </doc>
    </method>
    <method name="sendMail" return="edu.ncsu.csc.itrust.beans.Email"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aeBean" type="edu.ncsu.csc.itrust.beans.AdverseEventBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[A method used to send a single e-mail. Used in immunizations.
 @param aeBean
 @return Email returns the Email for testing purposes.]]>
      </doc>
    </method>
    <method name="addReport" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aeBean" type="edu.ncsu.csc.itrust.beans.AdverseEventBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Method used to add a report to the data base
 @param aeBean The adverse event to add
 @return a string for testing purposes only
 @throws iTrustException
 @throws FormValidationException
 @throws DBException]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ReportAdverseEventAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ResetPasswordAction -->
  <class name="ResetPasswordAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ResetPasswordAction" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 @param factory The DAOFactory used to create the DAOs used in this action.]]>
      </doc>
    </constructor>
    <method name="checkMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="midString" type="java.lang.String"/>
      <doc>
      <![CDATA[Checks to see if a user exists with the given mid
 
 @param midString The user's MID to check for.
 @return 0 if the user does not exist, else the mid of the user as a long]]>
      </doc>
    </method>
    <method name="isMaxedOut" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ipAddress" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Checks to see if the number of reset password attempts has been exceeded for the given ipAddress
 
 @param ipAddress The IPv4 or IPv6 IP address as a String.
 @return true if the the number of reset attempts is greater than or equal to MAX_RESET_ATTEMPTS
 @throws DBException]]>
      </doc>
    </method>
    <method name="checkRole" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="role" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks if the given mid matches the given role
 
 @param mid
            the mid to be checked
 @param role
            the role to be checked
 @return true if the mid and role match
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="checkAnswerNull" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="answer" type="java.lang.String"/>
      <doc>
      <![CDATA[Checks if the answer param is null
 
 @param answer the user's security answer
 @return answer if not null, else return null]]>
      </doc>
    </method>
    <method name="getSecurityQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the security question for the mid param
 
 @param mid MID of the user
 @return the security question or "" if DBException thrown
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="resetPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="role" type="java.lang.String"/>
      <param name="answer" type="java.lang.String"/>
      <param name="password" type="java.lang.String"/>
      <param name="confirmPassword" type="java.lang.String"/>
      <param name="ipAddr" type="java.lang.String"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Resets the password for the given mid
 
 @param mid of the user to have their password reset
 @param role what role the user has in iTrust
 @param answer answers to their security question
 @param password their password
 @param confirmPassword their password again
 @param ipAddr the ip address the request is coming from
 @return status message
 @throws FormValidationException
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <field name="MAX_RESET_ATTEMPTS" type="int"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Manages resetting the password Used by resetPassword.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ResetPasswordAction -->
  <!-- start class edu.ncsu.csc.itrust.action.SearchUsersAction -->
  <class name="SearchUsersAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SearchUsersAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user who is performing the search.]]>
      </doc>
    </constructor>
    <method name="searchForPersonnelWithName" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstName" type="java.lang.String"/>
      <param name="lastName" type="java.lang.String"/>
      <doc>
      <![CDATA[Searches for all personnel with the first name and last name specified in the parameter list.
 @param firstName The first name to be searched.
 @param lastName The last name to be searched.
 @return A java.util.List of PersonnelBeans for the users who matched.]]>
      </doc>
    </method>
    <method name="searchForPatientsWithName" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstName" type="java.lang.String"/>
      <param name="lastName" type="java.lang.String"/>
      <doc>
      <![CDATA[Search for all patients with first name and last name given in parameters.
 @param firstName The first name of the patient being searched.
 @param lastName The last name of the patient being searched.
 @return A java.util.List of PatientBeans]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.SearchUsersAction -->
  <!-- start class edu.ncsu.csc.itrust.action.SendMessageAction -->
  <class name="SendMessageAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SendMessageAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up defaults
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user sending the message.]]>
      </doc>
    </constructor>
    <method name="sendMessage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mBean" type="edu.ncsu.csc.itrust.beans.MessageBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Sends a message
 
 @param mBean message to be sent
 @throws iTrustException
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getPatientName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the patient's name
 
 @param mid MId of the patient
 @return the name of the patient
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPersonnelName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the personnel's name
 
 @param mid MId of the personnel
 @return the name of the personnel
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getMyRepresentees" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of the patients that the logged in HCP represents
 
 @return list of the patients that the logged in HCP represents
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getMyDLHCPs" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the designated HCPs for the logged in patient.
 
 @return designated HCPs for the logged in patient.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getDLHCPsFor" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the designated HCPs for the given patient.
 
 @return designated HCPs for the given patient.
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Class for SendMessage.jsp.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.SendMessageAction -->
  <!-- start class edu.ncsu.csc.itrust.action.SetSecurityQuestionAction -->
  <class name="SetSecurityQuestionAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SetSecurityQuestionAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Sets up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param rLoggedInMID The MID of the user who is setting their security question.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="updateInformation"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="a" type="edu.ncsu.csc.itrust.beans.SecurityQA"/>
      <exception name="Exception" type="java.lang.Exception"/>
      <doc>
      <![CDATA[Updates information in the database from the information held in the SecurityQA bean passed as a param
 
 @param a
            SecurityQuestionBean that holds new information
 @throws Exception]]>
      </doc>
    </method>
    <method name="retrieveInformation" return="edu.ncsu.csc.itrust.beans.SecurityQA"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a SecurityQA bean holding the security info for the currently logged in user
 
 @return SecurityQA for loggedInMid
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles setting and retrieving the security questions/answers for users Used by
 patient/editMyDemographics.jsp, staff/editMyDemographics.jsp, staff/editPersonnell.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.SetSecurityQuestionAction -->
  <!-- start class edu.ncsu.csc.itrust.action.SurveyAction -->
  <class name="SurveyAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SurveyAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up defaults
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user taking the survey.]]>
      </doc>
    </constructor>
    <method name="addSurvey"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="surveyBean" type="edu.ncsu.csc.itrust.beans.SurveyBean"/>
      <param name="visitID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Pass the OfficeVistBean along with SurveyBean
 @param surveyBean contains data to be added to database
 @param visitID The Office Visit ID corresponding to this Survey.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPatientMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovID" type="long"/>
      <exception name="NumberFormatException" type="java.lang.NumberFormatException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <doc>
    <![CDATA[This class is used to add patient survey data to the database.  The office visit ID is linked with the survey ID.  Once the
 survey is added, the transaction is logged]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.SurveyAction -->
  <!-- start class edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction -->
  <class name="UpdateCPTCodeListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="UpdateCPTCodeListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the administrator who is updating the CPTs.]]>
      </doc>
    </constructor>
    <method name="addCPTCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="proc" type="edu.ncsu.csc.itrust.beans.ProcedureBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Adds a new cpt code (med procedure)
 
 @param proc
            ProcedureBean that holds the new cpt code
 @return status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="updateInformation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="proc" type="edu.ncsu.csc.itrust.beans.ProcedureBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates a procedure with new information from the ProcedureBean
 
 @param proc
            ProcedureBean with new information (but same CPT code)
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Updates the CPT Code (Medical Procedures) List Used by editCPTProcedureCodes.jsp
 
 The CPT code set accurately describes medical, surgical, and diagnostic services 
 and is designed to communicate uniform information about medical services and procedures 
 among physicians, coders, patients, accreditation organizations, and payers for administrative, 
 financial, and analytical purposes.

 @see http://www.ama-assn.org/ama/pub/physician-resources/solutions-managing-your-practice/coding-billing-insurance/cpt/about-cpt.shtml
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.UpdateCPTCodeListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.UpdateHospitalListAction -->
  <class name="UpdateHospitalListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="UpdateHospitalListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param performerID The MID of the person updating the hospitals.]]>
      </doc>
    </constructor>
    <method name="addHospital" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hosp" type="edu.ncsu.csc.itrust.beans.HospitalBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Adds a hosptial using the HospitalBean passed as a param
 
 @param hosp
            the new hospital listing
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="updateInformation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hosp" type="edu.ncsu.csc.itrust.beans.HospitalBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates a hospital (based on the hospital id) using new information from the HospitalBean passed as a
 param
 
 @param hosp
            the new hospital information with the same hospital id
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles updating the list of hospitals Used by hospitalListing.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.UpdateHospitalListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.UpdateICDCodeListAction -->
  <class name="UpdateICDCodeListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="UpdateICDCodeListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param performerID The MID of the person udpating the ICDs.]]>
      </doc>
    </constructor>
    <method name="addICDCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diagn" type="edu.ncsu.csc.itrust.beans.DiagnosisBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Adds a new ICD code (diagnosis) based on the DiagnosisBean passed as a param
 
 @param diagn
            The new diagnosis (ICD code)
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="updateInformation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diagn" type="edu.ncsu.csc.itrust.beans.DiagnosisBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates a diagnosis with new information from the DiagnosisBean passed as a param
 
 @param diagn
            new information to update (but same code)
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles updating the ICD Code (Diagnosis) List Used by editICDCodes.jsp
 
 The International Statistical Classification of Diseases and Related Health Problems 
 (most commonly known by the abbreviation ICD) provides codes to classify diseases and a 
 wide variety of signs, symptoms, abnormal findings, complaints, social circumstances and 
 external causes of injury or disease. 
 
 @see http://www.cdc.gov/nchs/icd9.htm
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.UpdateICDCodeListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.UpdateLOINCListAction -->
  <class name="UpdateLOINCListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="UpdateLOINCListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Sets up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param performerID The MID of the person updating the LOINCs.]]>
      </doc>
    </constructor>
    <method name="add" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diagn" type="edu.ncsu.csc.itrust.beans.LOINCbean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a new LOINC
 
 @param diagn
            New LOINC
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="updateInformation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diagn" type="edu.ncsu.csc.itrust.beans.LOINCbean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates a LOINC
 
 @param diagn
            new information to update (but same code)
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles updating the LOINC Used.
 
 Logical Observation Identifiers Names and Codes (LOINC) is a database and universal
  standard for identifying medical laboratory observations. 
  
 @see http://loinc.org/]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.UpdateLOINCListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.UpdateNDCodeListAction -->
  <class name="UpdateNDCodeListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="UpdateNDCodeListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults.
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param performerID The MID of the user updating the ND lists.]]>
      </doc>
    </constructor>
    <method name="addNDCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="med" type="edu.ncsu.csc.itrust.beans.MedicationBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Adds a new ND Code (prescription) to the list
 
 @param med
            The new ND Code to be added
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="updateInformation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="med" type="edu.ncsu.csc.itrust.beans.MedicationBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates the ND Code with new information from the MedicationBean
 
 @param med
            the MedicationBean that holds new information but the same code
 @return status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles updating the ND Code (Prescription) List Used by editNDCodes.jsp
 
 The National Drug Code (NDC) is a universal product identifier used in the
 United States for drugs intended for human use.
 
 @see http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.UpdateNDCodeListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction -->
  <class name="UpdateReasonCodeListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="UpdateReasonCodeListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults.
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param performerID The MID of the user updating the ND lists.]]>
      </doc>
    </constructor>
    <method name="addORCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="orc" type="edu.ncsu.csc.itrust.beans.OverrideReasonBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Adds a new ND Code (prescription) to the list
 
 @param orc
            The new ND Code to be added
 @return Status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="updateInformation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="orc" type="edu.ncsu.csc.itrust.beans.OverrideReasonBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Updates the ND Code with new information from the OverrideReasonBean
 
 @param orc
            the OverrideReasonBean that holds new information but the same code
 @return status message
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles updating the Reason Codes List Used by editReasonCodes.jsp
 
 The National Drug Code (NDC) is a universal product identifier used in the
 United States for drugs intended for human use.
 
 @see http://archinte.ama-assn.org/cgi/content/full/163/21/2625/TABLEIOI20692T4]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.UpdateReasonCodeListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewAdverseEventAction -->
  <class name="ViewAdverseEventAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewAdverseEventAction" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getAdverseEvent" return="edu.ncsu.csc.itrust.beans.AdverseEventBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getUnremovedAdverseEventsByCode" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getNameForCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewAdverseEventAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction -->
  <class name="ViewExpiredPrescriptionsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewExpiredPrescriptionsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing the expired prescriptions.]]>
      </doc>
    </constructor>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets a PatientBean from an MID
 
 @param patientID MID of the patient
 @return PatientBean for the MID given
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getRepresentees" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets the logged in person's representees
 
 @return list of PatientBeans holding the representees
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPrescribingDoctor" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="prescription" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the prescribing HCP for a prescription
 
 @param prescription item in question
 @return HCP who prescribed the prescription
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPrescriptionsForPatient" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns all the prescriptions for a given patient
 
 @param patientID patient in question
 @return list of all the prescriptions for that patient
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles retrieving beans for viewPrescriptionRecords.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewExpiredPrescriptionsAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewHelperAction -->
  <class name="ViewHelperAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewHelperAction"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="calculateColor" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="primaryColor" type="java.lang.String"/>
      <param name="secondaryColor" type="java.lang.String"/>
      <param name="ratio" type="double"/>
    </method>
    <doc>
    <![CDATA[Edits the designated personnel Used by admin/editPersonnel.jsp, staff/editMyDemographics.jsp,
 editPersonnel.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewHelperAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewMyAccessLogAction -->
  <class name="ViewMyAccessLogAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewMyAccessLogAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person retrieving the logs.]]>
      </doc>
    </constructor>
    <method name="getAccesses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lowerDate" type="java.lang.String"/>
      <param name="upperDate" type="java.lang.String"/>
      <param name="getByRole" type="boolean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Returns a list of TransactionBeans between the two dates passed as params
 
 @param lowerDate
            the first date
 @param upperDate
            the second date
 @return list of TransactionBeans
 @throws DBException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="getDefaultStart" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accesses" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"/>
      <doc>
      <![CDATA[Returns the date of the first Transaction in the list passed as a param if the list is not empty
 otherwise, returns today's date
 
 @param accesses A java.util.List of TransactionBeans for the accesses.
 @return A String representing the date of the first transaction.]]>
      </doc>
    </method>
    <method name="getDefaultEnd" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accesses" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"/>
      <doc>
      <![CDATA[Returns the date of the last Transaction in the list passed as a param if the list is not empty
 otherwise, returns today's date
 
 @param accesses A java.util.List of TransactionBeans storing the access. 
 @return A String representation of the date of the last transaction.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles retrieving the log of record accesses for a given user Used by viewAccessLog.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewMyAccessLogAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewMyApptsAction -->
  <class name="ViewMyApptsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewMyApptsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMyAppointments" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="getAppointments" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="MID" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets a user's appointments
 
 @param mid the MID of the user
 @return a list of the user's appointments
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets a users's name from their MID
 
 @param mid the MID of the user
 @return the user's name
 @throws iTrustException]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewMyApptsAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewMyMessagesAction -->
  <class name="ViewMyMessagesAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewMyMessagesAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the user who is viewing their messages.]]>
      </doc>
    </constructor>
    <method name="getAllMyMessages" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for the logged in user
 
 @return a list of all the user's messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getAllMyMessagesTimeAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for the logged in user and sorts by ascending time
 
 @return a list of all the user's messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getAllMyMessagesNameAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for the logged in user and sorts names in ascending order
 
 @return a list of all the user's messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getAllMyMessagesNameDescending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for the logged in user and sorts name in descending order
 
 @return a list of all the user's messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getAllMySentMessages" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the sent messages for the logged in user
 
 @return a list of all the user's sent messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getAllMySentMessagesTimeAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for the logged in user and sorts by ascending time
 
 @return a list of all the user's messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getAllMySentMessagesNameAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for the logged in user and sorts names in ascending order
 
 @return a list of all the user's messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getAllMySentMessagesNameDescending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for the logged in user and sorts name in descending order
 
 @return a list of all the user's messages
 @throws SQLException]]>
      </doc>
    </method>
    <method name="validateAndCreateFilter" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="filter" type="java.lang.String"/>
    </method>
    <method name="filterMessages" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="messages" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"/>
      <param name="filter" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="ParseException" type="java.text.ParseException"/>
      <doc>
      <![CDATA[Gets a list of messages for a user based on their filter criteria.
 
 @param messages List of all of a user's MessageBeans
 @param filter String containing a user's filter criteria.
 @return a List of MessageBeans that meet the criteria of the filter.
 @throws iTrustException
 @throws ParseException]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets a patient's name from their MID
 
 @param mid the MID of the patient
 @return the patient's name
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPersonnelName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets a personnel's name from their MID
 
 @param mid the MID of the personnel
 @return the personnel's name
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="setRead"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mBean" type="edu.ncsu.csc.itrust.beans.MessageBean"/>
      <doc>
      <![CDATA[Set the state of the MessageBean to read, after 
 it is read by a user.
 @param mBean MessageBean to be read]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Action class for ViewMyMessages.jsp]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewMyMessagesAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewMyRecordsAction -->
  <class name="ViewMyRecordsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewMyRecordsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing the records.]]>
      </doc>
    </constructor>
    <method name="representPatient" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Takes the patient's representee as a param and returns it as a long if the patient represents the input
 param
 
 @param input
            the patient's representee mid
 @return representee's mid as a long
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PatientBean for the currently logged in patient
 
 @return PatientBean for the currently logged in patient
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PatientBean for the specified MID
 @param mid id of the requested bean
 @return PatientBean for the specified MID
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPersonnel" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PersonnelBean for the requested MID
 @param mid id of the requested bean
 @return a PersonnelBean for the requested MID
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getEmailHistory" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.Email&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PatientBean for the currently logged in patient
 
 @return PatientBean for the currently logged in patient
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getAllergies" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AllergyBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of AllergyBeans for the currently logged in patient
 
 @return a list of AllergyBeans for the currently logged in patient
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getFamily" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of Parents, Siblings, and Children of the currently logged in patient
 
 @return list of FamilyMemberBeans]]>
      </doc>
    </method>
    <method name="getFamilyHistory" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of Parents, Siblings, and Grand Parents of the currently logged in patient
 
 @return list of FamilyMemberBeans]]>
      </doc>
    </method>
    <method name="getAllHealthRecords" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of HealthRecords for the currently logged in patient
 
 @return a list of HealthRecords for the currently logged in patient
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getFamilyHealthRecords" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of HealthRecords for the specified family member
 
 @return a list of HealthRecords for the specified family member
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getAllOfficeVisits" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of OfficeVisitBeans for all office visits for the currently logged in patient
 
 @return  a list of OfficeVisitBeans for all office visits for the currently logged in patient
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getCompleteOfficeVisit" return="edu.ncsu.csc.itrust.beans.OfficeVisitBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a complete OfficeVisitBean given a visitID
 
 @return a complete OfficeVisitBean given a visitID
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getRepresented" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of PatientBeans of all patients the currently logged in patient represents
 
 @return a list of PatientBeans of all patients the currently logged in patient represents
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getRepresenting" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of PatientBeans of all patients the currently logged in patient represents
 
 @return a list of PatientBeans of all patients the currently logged in patient represents
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="isSurveyCompleted" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Has a survey been created for this office visit
 
 @param visitID ID of the office visit in question
 @return true if the survey has been completed, otherwise false
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getLabs" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a list of lab procedures
 
 @return a list of lab procedures for the logged in patient
 @throws DBException]]>
      </doc>
    </method>
    <method name="getReportRequests" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReportRequestBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns all the report requests for the logged in patient
 @return the report requests for the logged in patient
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveHighBP" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if family members have high blood pressure
 
 @param member the family member in question
 @return true if the family member has the risk factor, otherwise false.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveHighCholesterol" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if family members have high cholesterol
 
 @param member the family member in question
 @return true if the family member has the risk factor, otherwise false.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveDiabetes" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if family members have diabetes
 
 @param member the family member in question
 @return true if the family member has the risk factor, otherwise false.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveCancer" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if family members have cancer
 
 @param member the family member in question
 @return true if the family member has the risk factor, otherwise false.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="doesFamilyMemberHaveHeartDisease" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if family members have heart disease
 
 @param member the family member in question
 @return true if the family member has the risk factor, otherwise false.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="isFamilyMemberSmoker" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if family members smoke
 
 @param member the family member in question
 @return true if the family member has the risk factor, otherwise false.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getFamilyMemberCOD" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="member" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Checks to see if family member is dead, and if so, what their cause of death was
 
 @param member the family member in question
 @return the cause of death for the family member
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles patients viewing their own records Used by viewMyRecords.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewMyRecordsAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction -->
  <class name="ViewMyRemoteMonitoringListAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewMyRemoteMonitoringListAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the HCP retrieving the patient data.]]>
      </doc>
    </constructor>
    <method name="getPatientsData" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of RemoteMonitoringDataBeans for the logged in HCP
 
 @return list of TransactionBeans
 @throws DBException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="getPatientDataByDate" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="startDate" type="java.lang.String"/>
      <param name="endDate" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Returns a list of RemoteMonitoringDataBeans for the logged in HCP
 
 @return list of TransactionBeans
 @throws DBException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="getPatientDataByType" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="dataType" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Returns a list of RemoteMonitoringDataBeans for the logged in HCP based on a certain data type
 @param patientMID
 @param dataType
 @return list of TransactionBeans
 @throws DBException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="getPatientDataWithoutLogging" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getPatientName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[returns the patient name
 
 @return patient name
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getMonitoringHCPs" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Useful to figure out who is monitoring a given patient
 
 @return list of HCPs monitoring this patient
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles retrieving the patient data for a certain HCP as used by viewTelemedicineData.jsp]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewMyRemoteMonitoringListAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction -->
  <class name="ViewMyReportRequestsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewMyReportRequestsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing their report requests.]]>
      </doc>
    </constructor>
    <method name="getAllReportRequestsForRequester" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReportRequestBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns all the reports for the currently logged in HCP
 
 @return list of all reports for the logged in HCP
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="addReportRequest" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a report request to the list
 
 @param patientMID ID of the patient that the report request is for
 @return
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getReportRequest" return="edu.ncsu.csc.itrust.beans.ReportRequestBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ID" type="int"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the requested report
 
 @param ID id of the requested report
 @return the requested report
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="setViewed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ID" type="int"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Sets the viewed status of the report.  If the report is "viewed" the HCP must request a new one to see it again.
 
 @param ID id of the report
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getLongStatus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets the status of the request
 
 @param id id of the request
 @return the request's status
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Action class for ViewMyReports.jsp.  Allows the user to see all their reports]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewMyReportRequestsAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewOfficeVisitAction -->
  <class name="ViewOfficeVisitAction" extends="edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewOfficeVisitAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Super class handles validating the loggedInMid and ovIDString
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing their office visits. 
 @param ovIDString
            The unique identifier of the office visit as a String.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <constructor name="ViewOfficeVisitAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Super class handles validating the pidString and ovIDString. Usually used for representing a patient.
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param repPIDString The MID of the representative viewing the records.
 @param ovIDString
            The unique identifier of the office visit as a String.
 @throws iTrustException]]>
      </doc>
    </constructor>
    <method name="getOfficeVisit" return="edu.ncsu.csc.itrust.beans.OfficeVisitBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the office visit as an OfficeVisitBean for the ovID that was initially passed to the
 constructor
 
 @return the OfficeVisitBean for the ovID
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the prescriptions associated with the ovID initially passed to the constructor
 
 @return list of PrescriptionBeans for the ovID
 @throws DBException]]>
      </doc>
    </method>
    <method name="getHCPName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the name of the HCP for the hcpID passed as a param
 
 @param hcpID
 @return the name of the HCP
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles viewing the office visits, prescriptions, and HCP name for the given ovID Used by
 viewOfficeVisit.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewOfficeVisitAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction -->
  <class name="ViewPatientOfficeVisitHistoryAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewPatientOfficeVisitHistoryAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing the office visits.]]>
      </doc>
    </constructor>
    <method name="getPatients" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Get the list of patients an HCP has had office visits with
 
 @return the list of patients an HCP has had office visits with
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPersonnel" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PersonnelBean for the logged in HCP
 @return PersonnelBean for the logged in HCP
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Action class for ViewPatientOfficeVisitHistory.jsp]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewPatientOfficeVisitHistoryAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewPersonnelAction -->
  <class name="ViewPersonnelAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewPersonnelAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person retrieving personnel beans.]]>
      </doc>
    </constructor>
    <method name="getPersonnel" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Retrieves a PersonnelBean for the mid passed as a param
 
 @param input
            the mid for which the PersonnelBean will be returned
 @return PersonnelBean
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getEmailHistory" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.Email&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PatientBean for the currently logged in personnel
 
 @return The PatientBean
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles retrieving personnel beans for a given personnel Used by viewPersonnel.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewPersonnelAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction -->
  <class name="ViewPrescriptionRecordsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewPrescriptionRecordsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing prescription records.]]>
      </doc>
    </constructor>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets a PatientBean from an MID
 
 @param patientID MID of the patient
 @return PatientBean for the MID given
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getRepresentees" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Gets the logged in person's representees
 
 @return list of PatientBeans holding the representees
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPrescribingDoctor" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="prescription" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the prescribing HCP for a prescription
 
 @param prescription item in question
 @return HCP who prescribed the prescription
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPrescriptionsForPatient" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns all the prescriptions for a given patient
 
 @param patientID patient in question
 @return list of all the prescriptions for that patient
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Handles retrieving beans for viewPrescriptionRecords.jsp
 
 @author laurenhayward]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewPrescriptionRecordsAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewPrescriptionRenewalNeedsAction -->
  <class name="ViewPrescriptionRenewalNeedsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewPrescriptionRenewalNeedsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing the prescription renewals.]]>
      </doc>
    </constructor>
    <method name="getRenewalNeedsPatients" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Uses PatientDAO as a helper class to return a list of patients with a special-diagnosis-history who
 have the logged in HCP as a DHCP and whose medications are going to
 expire within seven days.
 
 @return A list of PatientBean's]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewPrescriptionRenewalNeedsAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewReportAction -->
  <class name="ViewReportAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewReportAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing the report.]]>
      </doc>
    </constructor>
    <method name="getDiagnoses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Get diagnosis list for the given patient
 @param pid the patient of interest
 @return list of diagnoses
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Get procedure list for the given patient
 @param pid the patient of interest
 @return list of procedures
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Get prescription list for the given patient
 @param pid the patient of interest
 @return list of prescriptions
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getDeclaredHCPs" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Get declared HCPs list for the given patient
 @param pid the patient of interest
 @return list of declared HCPs
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPersonnel" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns a PersonnelBean when given an MID
 @param mid HCP of interest
 @return PersonnelBean of the given HCP
 @throws iTrustException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Action class for ViewReport.jsp]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewReportAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewSurveyResultAction -->
  <class name="ViewSurveyResultAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewSurveyResultAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults.
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person retrieving survey results.]]>
      </doc>
    </constructor>
    <method name="getSurveyResultsForHospital" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.SurveyResultBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bean" type="edu.ncsu.csc.itrust.beans.SurveyResultBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Retrieves survey results for a whole hospital.
 @param bean The SurveyResultBean containing the survey result specs.
 @return A java.util.List of Survey Results.
 @throws iTrustException
 @throws FormValidationException]]>
      </doc>
    </method>
    <method name="getSurveyResultsForZip" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.SurveyResultBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bean" type="edu.ncsu.csc.itrust.beans.SurveyResultBean"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Retrieves survey results for a given zip code.
 @param bean The SurveyResultBean containing the survey result specs.
 @return A java.util.List of Survey Results.
 @throws iTrustException
 @throws FormValidationException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This class is used to handle retrieving survey results from the database.  It also logs the transaction.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewSurveyResultAction -->
  <!-- start class edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction -->
  <class name="ViewVisitedHCPsAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ViewVisitedHCPsAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Set up defaults 
 @param factory The DAOFactory used to create the DAOs used in this action.
 @param loggedInMID The MID of the person viewing the visited HCPs.]]>
      </doc>
    </constructor>
    <method name="getVisitedHCPs" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HCPVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of all the visited HCPs
 @return list of all the visited HCPs]]>
      </doc>
    </method>
    <method name="undeclareHCP" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Set a given HCP as undeclared
 
 @param name HCP to undeclare
 @return An empty string.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="declareHCP" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Set a given HCP as declared
 
 @param name HCP to declare
 @return An empty string.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="checkDeclared" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <doc>
      <![CDATA[Check to see if a given HCP is declared
 @param mid HCP to check
 @return true if the HCP is declared, otherwise false]]>
      </doc>
    </method>
    <method name="filterHCPList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="doc" type="java.lang.String"/>
      <param name="specialty" type="java.lang.String"/>
      <param name="zip" type="java.lang.String"/>
      <doc>
      <![CDATA[Filter the list of HCPs by last name, specialty, or zip code. 
 @param doc sort by last name
 @param specialty sort by specialty
 @param zip sort by zip
 @return sorted list of HCPs]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Action class for ViewVisitedHCPs.jsp]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.ViewVisitedHCPsAction -->
</package>
<package name="edu.ncsu.csc.itrust.action.base">
  <!-- start class edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction -->
  <class name="OfficeVisitBaseAction" extends="edu.ncsu.csc.itrust.action.base.PatientBaseAction"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OfficeVisitBaseAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[The default constructor.
 
 @param factory
            A database access object factory for supplying a runtime context.
 @param pidString
            The patient's MID as a String, to be passed to the super constructor (for PatientBaseAction)
 @param ovIDString
            The unique identifier of the office visit as a String.
 @throws iTrustException
             If any of the supplied parameters is incorrect or there is a DB problem.]]>
      </doc>
    </constructor>
    <method name="getOvID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[For obtaining the unique identifier of the office visit this action is associated with.
 
 @return A long of the identifier.]]>
      </doc>
    </method>
    <method name="encode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
      <doc>
      <![CDATA[Converts all characters of the input string to their HTML special characters equivalent representation.
 Explicitly, the less than symbol becomes lt, the greater than symbol becomes gt and a newline feed
 becomes br.
 
 @param input
            The string to encode.
 @return The encoded string.]]>
      </doc>
    </method>
    <field name="ovID" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The unique identifier of the office visit this action is associated with.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[An abstract class which contains functionalities common among all actions relating to inserting and editing
 office visits. Because all office visits are with a certain patient, OfficeVisitBaseAction extends
 PatientBaseAction.
 
 Use this class whenever you have a page which not only requires a patient MID, but an office visit ID. Pass
 those IDs to the constructor, and an exception will be thrown if they are not valid IDs (which should kick
 the user out to the home page).
 
 The concrete methods created by this class allow for its association with the unique identifier of a given
 office visit. These identifiers can also be verified for their correctness and existence.
 
 Very similar to {@link PatientBaseAction} and {@link PersonnelBaseAction}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.base.OfficeVisitBaseAction -->
  <!-- start class edu.ncsu.csc.itrust.action.base.PatientBaseAction -->
  <class name="PatientBaseAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PatientBaseAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[The default constructor.
 
 @param factory
            A factory to create a database access object.
 @param pidString
            The patient's ID to associate with this action.
 @throws iTrustException
             If the patient's ID is incorrect or there is a DB problem.]]>
      </doc>
    </constructor>
    <method name="getPid" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Retrieves the identifier of the patient as a long.
 
 @return The patient's MID.]]>
      </doc>
    </method>
    <field name="pid" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Stores the MID of the patient associated with this action.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[An abstract class for dealing with actions that require an associated patient. The concrete functionality
 provided by this class allows for asserting the correctness and existence of patients' MIDs.
 
 Use this class whenever your JSP requires a patient ID when it loads (e.g. editPatient.jsp). The patient
 string is passed to the constructor of this class and is checked for both format and existence. If the
 patient ID is wrong in any way, an exception is thrown, resulting in the user getting kicked out to the
 home page.
 
 Very similar to {@link PersonnelBaseAction} and {@link OfficeVisitBaseAction}
 
 Subclasses need not rewrite this functionality, and they are not held to any strict contract to extend this
 class.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.base.PatientBaseAction -->
  <!-- start class edu.ncsu.csc.itrust.action.base.PersonnelBaseAction -->
  <class name="PersonnelBaseAction" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PersonnelBaseAction" type="edu.ncsu.csc.itrust.dao.DAOFactory, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[The default constructor.
 
 @param factory
            A factory to create a database access object.
 @param pidString
            The personnel's ID to associate with this action.
 @throws iTrustException
             If the personnel's ID is incorrect or there is a DB problem.]]>
      </doc>
    </constructor>
    <method name="getPid" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Retrieves the identifier of the patient as a long.
 
 @return The patient's MID.]]>
      </doc>
    </method>
    <field name="pid" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Stores the MID of the personnel associated with this action.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[An abstract class for dealing with actions that require an associated personnel. The concrete functionality
 provided by this class allows for asserting the correctness and existence of personnel' MIDs.
 
 Use this class whenever your JSP requires a personnel ID when it loads (e.g. editPatient.jsp). The patient
 string is passed to the constructor of this class and is checked for both format and existence. If the
 patient ID is wrong in any way, an exception is thrown, resulting in the user getting kicked out to the
 home page.
 
 Subclasses need not rewrite this functionality, and they are not held to any strict contract to extend this
 class.
 
 Very similar to {@link PatientBaseAction}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.action.base.PersonnelBaseAction -->
</package>
<package name="edu.ncsu.csc.itrust.beans">
  <!-- start class edu.ncsu.csc.itrust.beans.AdverseEventBean -->
  <class name="AdverseEventBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AdverseEventBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getPrescriber" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPrescriber"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="prescriber" type="java.lang.String"/>
    </method>
    <method name="getStatus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="status" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the id]]>
      </doc>
    </method>
    <method name="setId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <doc>
      <![CDATA[@param id the id to set]]>
      </doc>
    </method>
    <method name="getDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the date]]>
      </doc>
    </method>
    <method name="setDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="date" type="java.lang.String"/>
      <doc>
      <![CDATA[@param date the date to set]]>
      </doc>
    </method>
    <method name="getCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <method name="getMID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the patient MID]]>
      </doc>
    </method>
    <method name="setMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mID" type="java.lang.String"/>
      <doc>
      <![CDATA[@param mID the patients MID]]>
      </doc>
    </method>
    <method name="getDrug" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the drug the event is being reported for]]>
      </doc>
    </method>
    <method name="setDrug"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="drug" type="java.lang.String"/>
      <doc>
      <![CDATA[@param drug sets the drug the event is being reported for]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the description]]>
      </doc>
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
      <doc>
      <![CDATA[@param description the description to set]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a adverse event based on a drug.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.AdverseEventBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.AllergyBean -->
  <class name="AllergyBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AllergyBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getFirstFound" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFirstFound"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstFound" type="java.util.Date"/>
    </method>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPatientID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
    </method>
    <method name="getFirstFoundStr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A bean for storing data about Allergies.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.AllergyBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.ApptBean -->
  <class name="ApptBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ApptBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getApptType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the apptType]]>
      </doc>
    </method>
    <method name="setApptID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptID" type="int"/>
      <doc>
      <![CDATA[@param apptID the apptID to set]]>
      </doc>
    </method>
    <method name="getApptID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setApptType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptType" type="java.lang.String"/>
      <doc>
      <![CDATA[@param apptType the apptType to set]]>
      </doc>
    </method>
    <method name="getPatient" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the patient]]>
      </doc>
    </method>
    <method name="setPatient"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patient" type="long"/>
      <doc>
      <![CDATA[@param patient the patient to set]]>
      </doc>
    </method>
    <method name="getHcp" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the hcp]]>
      </doc>
    </method>
    <method name="setHcp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcp" type="long"/>
      <doc>
      <![CDATA[@param hcp the hcp to set]]>
      </doc>
    </method>
    <method name="getDate" return="java.sql.Timestamp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the date]]>
      </doc>
    </method>
    <method name="setDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="date" type="java.sql.Timestamp"/>
      <doc>
      <![CDATA[@param date the date to set]]>
      </doc>
    </method>
    <method name="getComment" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the comment]]>
      </doc>
    </method>
    <method name="setComment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="comment" type="java.lang.String"/>
      <doc>
      <![CDATA[@param comment the comment to set]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.ApptBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.ApptTypeBean -->
  <class name="ApptTypeBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ApptTypeBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ApptTypeBean" type="java.lang.String, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getDuration" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDuration"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="duration" type="int"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.ApptTypeBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.DiagnosisBean -->
  <class name="DiagnosisBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DiagnosisBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="DiagnosisBean" type="java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[This functionality will be moved elsewhere.]]>
      </doc>
    </constructor>
    <method name="getICDCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the ICD Code for this procedure
 
 @return The ICD Code for this procedure]]>
      </doc>
    </method>
    <method name="setICDCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <method name="getClassification" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the ICD Description for this procedure
 
 @return The ICD Description for this procedure]]>
      </doc>
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getFormattedDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOvDiagnosisID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Optional - for use with editing an office visit
 
 @return]]>
      </doc>
    </method>
    <method name="setOvDiagnosisID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovDiagnosisID" type="long"/>
    </method>
    <method name="setVisitID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vid" type="long"/>
    </method>
    <method name="getVisitID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A bean for storing data about Diagnosis.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.DiagnosisBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.DrugInteractionBean -->
  <class name="DrugInteractionBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DrugInteractionBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getFirstDrug" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the firstDrug]]>
      </doc>
    </method>
    <method name="setFirstDrug"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstDrug" type="java.lang.String"/>
      <doc>
      <![CDATA[@param firstDrug the firstDrug to set]]>
      </doc>
    </method>
    <method name="getSecondDrug" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the secondDrug]]>
      </doc>
    </method>
    <method name="setSecondDrug"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="secondDrug" type="java.lang.String"/>
      <doc>
      <![CDATA[@param secondDrug the secondDrug to set]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the description]]>
      </doc>
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
      <doc>
      <![CDATA[@param description the description to set]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a message from one user to another.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.DrugInteractionBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.Email -->
  <class name="Email" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Email"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getToList" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setToList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="toList" type="java.util.List&lt;java.lang.String&gt;"/>
    </method>
    <method name="getToListStr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFrom" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFrom"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="from" type="java.lang.String"/>
    </method>
    <method name="getSubject" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSubject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="subject" type="java.lang.String"/>
    </method>
    <method name="getBody" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBody"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="body" type="java.lang.String"/>
    </method>
    <method name="getTimeAdded" return="java.sql.Timestamp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTimeAdded"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timeAdded" type="java.sql.Timestamp"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A bean for storing data about Fake Emails.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.Email -->
  <!-- start class edu.ncsu.csc.itrust.beans.FamilyMemberBean -->
  <class name="FamilyMemberBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FamilyMemberBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getFirstName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFirstName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstName" type="java.lang.String"/>
    </method>
    <method name="getLastName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastName" type="java.lang.String"/>
    </method>
    <method name="getFullName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMid" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMid"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
    </method>
    <method name="getRelation" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRelation"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="relation" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about Family Members.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.FamilyMemberBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.HCPDiagnosisBean -->
  <class name="HCPDiagnosisBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HCPDiagnosisBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getHCP" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCP"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcp" type="long"/>
    </method>
    <method name="getHCPName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getNumPatients" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="incNumPatients"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMedList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MedicationBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMedList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="medlist" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.MedicationBean&gt;"/>
    </method>
    <method name="getLabList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLabList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lablist" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"/>
    </method>
    <method name="getVisitSatisfaction" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setVisitSat"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sat" type="int"/>
    </method>
    <method name="getTreatmentSatisfaction" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTreatmentSat"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sat" type="int"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about the diagnosis given by an HCP.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.HCPDiagnosisBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.HCPLinkBean -->
  <class name="HCPLinkBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HCPLinkBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="isChecked" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setChecked"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="checked" type="boolean"/>
    </method>
    <method name="getCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <method name="getPrescriberMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the patient MID]]>
      </doc>
    </method>
    <method name="setPrescriberMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mID" type="long"/>
      <doc>
      <![CDATA[@param mID the patients MID]]>
      </doc>
    </method>
    <method name="getDrug" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the drug the event is being reported for]]>
      </doc>
    </method>
    <method name="setDrug"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="drug" type="java.lang.String"/>
      <doc>
      <![CDATA[@param drug sets the drug the event is being reported for]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A mini-bean to pass data between viewPrescriptionRecords.jsp and reportAdverseEvent.jsp
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.HCPLinkBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.HCPVisitBean -->
  <class name="HCPVisitBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HCPVisitBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setHCPMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
    </method>
    <method name="getHCPMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHCPName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getHCPSpecialty" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPSpecialty"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="specialty" type="java.lang.String"/>
    </method>
    <method name="getHCPAddr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPAddr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addr" type="java.lang.String"/>
    </method>
    <method name="getOVDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOVDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="date" type="java.lang.String"/>
    </method>
    <method name="isDesignated" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDesignated"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="val" type="boolean"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a visit with an HCP.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.HCPVisitBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.HealthRecord -->
  <class name="HealthRecord" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HealthRecord"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getBloodPressureD" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBloodPressureD"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodPressureD" type="int"/>
    </method>
    <method name="setBloodPressureSystolic"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodPressure" type="int"/>
    </method>
    <method name="setBloodPressureDiastolic"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodPressure" type="int"/>
    </method>
    <method name="getBloodPressureN" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getBloodPressureSystolic" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getBloodPressureDiastolic" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBloodPressureN"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodPressureN" type="int"/>
    </method>
    <method name="getBloodPressure" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCholesterolHDL" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCholesterolHDL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cholesterolHDL" type="int"/>
    </method>
    <method name="getCholesterolLDL" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCholesterolLDL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cholesterolLDL" type="int"/>
    </method>
    <method name="getCholesterolTri" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCholesterolTri"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cholesterolTri" type="int"/>
    </method>
    <method name="getTotalCholesterol" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Note that this is a simplistic view. See the Wikipedia article on cholesterol.
 
 @return]]>
      </doc>
    </method>
    <method name="getDateRecorded" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDateRecorded"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dateRecorded" type="java.sql.Timestamp"/>
    </method>
    <method name="getHeight" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHeight"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="height" type="double"/>
    </method>
    <method name="getPatientID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
    </method>
    <method name="getPersonnelID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPersonnelID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="personnelID" type="long"/>
    </method>
    <method name="isSmoker" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSmoker"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="smoker" type="boolean"/>
    </method>
    <method name="getWeight" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setWeight"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="weight" type="double"/>
    </method>
    <method name="getBodyMassIndex" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A bean for storing health record data.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.HealthRecord -->
  <!-- start class edu.ncsu.csc.itrust.beans.HospitalBean -->
  <class name="HospitalBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HospitalBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HospitalBean" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="HospitalBean" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getHospitalID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHospitalID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hospitalID" type="java.lang.String"/>
    </method>
    <method name="getHospitalName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHospitalName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hospitalName" type="java.lang.String"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A bean for storing data about a hospital.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.HospitalBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.LabProcedureBean -->
  <class name="LabProcedureBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LabProcedureBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getPid" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Unique 10-digit number that does not start with 9]]>
      </doc>
    </method>
    <method name="setPid"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <doc>
      <![CDATA[Unique 10-digit number that does not start with 9]]>
      </doc>
    </method>
    <method name="getProcedureID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Unique identifier for a laboratory procedure of a patient]]>
      </doc>
    </method>
    <method name="setProcedureID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="procedureID" type="long"/>
      <doc>
      <![CDATA[Unique identifier for a laboratory procedure of a patient]]>
      </doc>
    </method>
    <method name="getLoinc" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Digits of the format nnnnn-n]]>
      </doc>
    </method>
    <method name="setLoinc"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="loinc" type="java.lang.String"/>
      <doc>
      <![CDATA[Digits of the format nnnnn-n]]>
      </doc>
    </method>
    <method name="getStatus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[One of (NOT YET RECEIVED, PENDING, COMPLETED)]]>
      </doc>
    </method>
    <method name="setStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="status" type="java.lang.String"/>
      <doc>
      <![CDATA[One of (NOT YET RECEIVED, PENDING, COMPLETED)]]>
      </doc>
    </method>
    <method name="getCommentary" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Up to 500 alphanumeric characters]]>
      </doc>
    </method>
    <method name="setCommentary"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commentary" type="java.lang.String"/>
      <doc>
      <![CDATA[Up to 500 alphanumeric characters]]>
      </doc>
    </method>
    <method name="getResults" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Up to 500 alphanumeric characters]]>
      </doc>
    </method>
    <method name="setResults"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="results" type="java.lang.String"/>
      <doc>
      <![CDATA[Up to 500 alphanumeric characters]]>
      </doc>
    </method>
    <method name="getOvID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Office VisitID	Identifier that specifies the office visit in 
 which the laboratory procedure was ordered]]>
      </doc>
    </method>
    <method name="setOvID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovID" type="long"/>
      <doc>
      <![CDATA[Office VisitID	Identifier that specifies the office visit in 
 which the laboratory procedure was ordered]]>
      </doc>
    </method>
    <method name="getTimestamp" return="java.sql.Timestamp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTimestamp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timestamp" type="java.sql.Timestamp"/>
    </method>
    <method name="getRights" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[permission granted by lhcp who ordered test:
 "ALLOWED", "RESTRICTED"]]>
      </doc>
    </method>
    <method name="setRights"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rights" type="java.lang.String"/>
      <doc>
      <![CDATA[permission granted by lhcp who ordered test:
 "ALLOWED", "RESTRICTED"]]>
      </doc>
    </method>
    <method name="allow"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="restrict"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="statusComplete"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="statusPending"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="statusNotReceived"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="Not_Received" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="Pending" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="Completed" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="Allow" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="Restrict" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[A bean for storing data about a lab procedure.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.LabProcedureBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.LOINCbean -->
  <class name="LOINCbean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LOINCbean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getLabProcedureCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLabProcedureCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aLabProcedureCode" type="java.lang.String"/>
    </method>
    <method name="getComponent" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setComponent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aComponent" type="java.lang.String"/>
    </method>
    <method name="getKindOfProperty" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setKindOfProperty"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aKindOfProperty" type="java.lang.String"/>
    </method>
    <method name="getTimeAspect" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTimeAspect"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aTimeAspect" type="java.lang.String"/>
    </method>
    <method name="getSystem" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSystem"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aSystem" type="java.lang.String"/>
    </method>
    <method name="getScaleType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setScaleType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aScaleType" type="java.lang.String"/>
    </method>
    <method name="getMethodType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMethodType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aMethodType" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about Lab Procedure Codes.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.LOINCbean -->
  <!-- start class edu.ncsu.csc.itrust.beans.MedicationBean -->
  <class name="MedicationBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MedicationBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="MedicationBean" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="MedicationBean" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getNDCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the ND Code for this procedure
 
 @return The ND Code for this procedure]]>
      </doc>
    </method>
    <method name="setNDCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the ND Description for this procedure
 
 @return The ND Description for this procedure]]>
      </doc>
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getNDCodeFormatted" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[A medication is the same thing as an ND code - it's like "Aspirin". A medication is not associated with an
 office visit; that's a "prescription". See {@link PrescriptionBean}
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.MedicationBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.MessageBean -->
  <class name="MessageBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MessageBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getTo" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the MIDs of the recipients for this Message
 @return]]>
      </doc>
    </method>
    <method name="setTo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="to" type="long"/>
      <doc>
      <![CDATA[Sets the MIDs of the recipients for this Message
 @param to]]>
      </doc>
    </method>
    <method name="getMessageId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessageId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
    </method>
    <method name="getParentMessageId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setParentMessageId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentMsgId" type="long"/>
    </method>
    <method name="getFrom" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the MID of the sender for this message
 @return]]>
      </doc>
    </method>
    <method name="setFrom"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="from" type="long"/>
      <doc>
      <![CDATA[Sets the MID of the sender for this message
 @param from]]>
      </doc>
    </method>
    <method name="getSubject" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the subject of this message
 @return]]>
      </doc>
    </method>
    <method name="setSubject"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="subject" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the subject of this message
 @param subject]]>
      </doc>
    </method>
    <method name="getBody" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the body of this message
 @return]]>
      </doc>
    </method>
    <method name="setBody"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="body" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the body of this message
 @param body]]>
      </doc>
    </method>
    <method name="getSentDate" return="java.sql.Timestamp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the time for this message
 @return]]>
      </doc>
    </method>
    <method name="setSentDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timestamp" type="java.sql.Timestamp"/>
      <doc>
      <![CDATA[Sets the time for this message
 @param timestamp]]>
      </doc>
    </method>
    <method name="getRead" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets read for this message
 @return]]>
      </doc>
    </method>
    <method name="setRead"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="read" type="int"/>
      <doc>
      <![CDATA[Sets read for this message
 @param read]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a message from one user to another.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.MessageBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.OfficeVisitBean -->
  <class name="OfficeVisitBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OfficeVisitBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="OfficeVisitBean" type="long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[For use ONLY by DAOs
 
 @param visitID]]>
      </doc>
    </constructor>
    <method name="getID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPatientID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHcpID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNotes" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVisitDate" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVisitDateStr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDiagnoses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVisitID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDiagnoses"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diagnoses" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"/>
    </method>
    <method name="setHcpID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
    </method>
    <method name="setPrescriptions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="prescriptions" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"/>
    </method>
    <method name="setNotes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="notes" type="java.lang.String"/>
    </method>
    <method name="setPatientID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
    </method>
    <method name="setProcedures"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="procedures" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"/>
    </method>
    <method name="setVisitDateStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitDate" type="java.lang.String"/>
    </method>
    <method name="getHospitalID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHospitalID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hospitalID" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about an office visit at the hospital.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.OfficeVisitBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.OperationalProfile -->
  <class name="OperationalProfile" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OperationalProfile"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getTotalCount" return="java.util.HashMap&lt;edu.ncsu.csc.itrust.enums.TransactionType, java.lang.Integer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTotalCount"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="totalCount" type="java.util.HashMap&lt;edu.ncsu.csc.itrust.enums.TransactionType, java.lang.Integer&gt;"/>
    </method>
    <method name="getPersonnelCount" return="java.util.HashMap&lt;edu.ncsu.csc.itrust.enums.TransactionType, java.lang.Integer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPersonnelCount"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="personnelCount" type="java.util.HashMap&lt;edu.ncsu.csc.itrust.enums.TransactionType, java.lang.Integer&gt;"/>
    </method>
    <method name="getPatientCount" return="java.util.HashMap&lt;edu.ncsu.csc.itrust.enums.TransactionType, java.lang.Integer&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientCount"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientCount" type="java.util.HashMap&lt;edu.ncsu.csc.itrust.enums.TransactionType, java.lang.Integer&gt;"/>
    </method>
    <method name="setNumTotalTransactions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="numTransactions" type="int"/>
    </method>
    <method name="getNumTotalTransactions" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNumPatientTransactions" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNumPatientTransactions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="numPatientTransactions" type="int"/>
    </method>
    <method name="getNumPersonnelTransactions" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNumPersonnelTransactions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="numPersonnelTransactions" type="int"/>
    </method>
    <doc>
    <![CDATA[A bean for storing operational profile data.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.OperationalProfile -->
  <!-- start class edu.ncsu.csc.itrust.beans.OverrideReasonBean -->
  <class name="OverrideReasonBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OverrideReasonBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="OverrideReasonBean" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="OverrideReasonBean" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getPresID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPresID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
    </method>
    <method name="getID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
    </method>
    <method name="getORCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the reason Code for this procedure
 
 @return The reason Code for this procedure]]>
      </doc>
    </method>
    <method name="setORCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the reason Description for this procedure
 
 @return The reason Description for this procedure]]>
      </doc>
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[A reason code is like "Aspirin". A reason code is not associated with an
 office visit; that's a reason associated with a "prescription". See {@link PrescriptionBean}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.OverrideReasonBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.PatientBean -->
  <class name="PatientBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PatientBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMessageFilter" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessageFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="messageFilter" type="java.lang.String"/>
    </method>
    <method name="getBloodType" return="edu.ncsu.csc.itrust.enums.BloodType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBloodTypeStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodType" type="java.lang.String"/>
    </method>
    <method name="setBloodType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodType" type="edu.ncsu.csc.itrust.enums.BloodType"/>
    </method>
    <method name="getCauseOfDeath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCauseOfDeath"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="causeOfDeath" type="java.lang.String"/>
    </method>
    <method name="getCity" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="city" type="java.lang.String"/>
    </method>
    <method name="getDateOfBirthStr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDateOfBirth" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDateOfDeath" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDateOfBirthStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dateOfBirthStr" type="java.lang.String"/>
    </method>
    <method name="getAge" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAgeInDays" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAgeInWeeks" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDateOfDeathStr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDateOfDeathStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dateOfDeathStr" type="java.lang.String"/>
    </method>
    <method name="getEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEmail"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="email" type="java.lang.String"/>
    </method>
    <method name="getEmergencyName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEmergencyName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="emergencyName" type="java.lang.String"/>
    </method>
    <method name="getEthnicity" return="edu.ncsu.csc.itrust.enums.Ethnicity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEthnicityStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ethnicity" type="java.lang.String"/>
    </method>
    <method name="setEthnicity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ethnicity" type="edu.ncsu.csc.itrust.enums.Ethnicity"/>
    </method>
    <method name="getFatherMID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFatherMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fatherMID" type="java.lang.String"/>
    </method>
    <method name="getFullName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFirstName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFirstName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstName" type="java.lang.String"/>
    </method>
    <method name="getGender" return="edu.ncsu.csc.itrust.enums.Gender"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setGenderStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="gender" type="java.lang.String"/>
    </method>
    <method name="setGender"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="gender" type="edu.ncsu.csc.itrust.enums.Gender"/>
    </method>
    <method name="getIcAddress1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcAddress1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icAddress1" type="java.lang.String"/>
    </method>
    <method name="getIcAddress2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcAddress2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icAddress2" type="java.lang.String"/>
    </method>
    <method name="getIcAddress3" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcCity" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcCity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icCity" type="java.lang.String"/>
    </method>
    <method name="getIcID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icID" type="java.lang.String"/>
    </method>
    <method name="getCreditCardType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCreditCardType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="creditCardType" type="java.lang.String"/>
    </method>
    <method name="getCreditCardNumber" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCreditCardNumber"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="creditCardNumber" type="java.lang.String"/>
    </method>
    <method name="getIcName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icName" type="java.lang.String"/>
    </method>
    <method name="getIcZip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcZip1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcZip1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icZip1" type="java.lang.String"/>
    </method>
    <method name="getIcZip2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcZip2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icZip2" type="java.lang.String"/>
    </method>
    <method name="getIcState" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcState"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icState" type="java.lang.String"/>
    </method>
    <method name="getLastName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastName" type="java.lang.String"/>
    </method>
    <method name="getMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
    </method>
    <method name="getMotherMID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMotherMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="motherMID" type="java.lang.String"/>
    </method>
    <method name="getPhone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPhone1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPhone2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPhone3" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPhone1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone1" type="java.lang.String"/>
    </method>
    <method name="setPhone2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone2" type="java.lang.String"/>
    </method>
    <method name="setPhone3"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone3" type="java.lang.String"/>
    </method>
    <method name="getSecurityAnswer" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSecurityAnswer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="securityAnswer" type="java.lang.String"/>
    </method>
    <method name="getSecurityQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSecurityQuestion"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="securityQuestion" type="java.lang.String"/>
    </method>
    <method name="getState" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setState"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="state" type="java.lang.String"/>
    </method>
    <method name="getStreetAddress1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStreetAddress1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="streetAddress1" type="java.lang.String"/>
    </method>
    <method name="getStreetAddress2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStreetAddress2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="streetAddress2" type="java.lang.String"/>
    </method>
    <method name="getStreetAddress3" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTopicalNotes" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTopicalNotes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="topicalNotes" type="java.lang.String"/>
    </method>
    <method name="getZip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getZip1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setZip1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="zip1" type="java.lang.String"/>
    </method>
    <method name="getZip2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setZip2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="zip2" type="java.lang.String"/>
    </method>
    <method name="getEmergencyPhone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEmergencyPhone1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEmergencyPhone1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="emergencyPhone1" type="java.lang.String"/>
    </method>
    <method name="getEmergencyPhone2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEmergencyPhone2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="emergencyPhone2" type="java.lang.String"/>
    </method>
    <method name="getEmergencyPhone3" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEmergencyPhone3"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="emergencyPhone3" type="java.lang.String"/>
    </method>
    <method name="getIcPhone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIcPhone1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcPhone1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icPhone1" type="java.lang.String"/>
    </method>
    <method name="getIcPhone2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcPhone2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icPhone2" type="java.lang.String"/>
    </method>
    <method name="getIcPhone3" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIcPhone3"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icPhone3" type="java.lang.String"/>
    </method>
    <method name="getConfirmPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setConfirmPassword"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="confirmPassword" type="java.lang.String"/>
    </method>
    <method name="getPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPassword"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="password" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a patient.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.PatientBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.PatientVisitBean -->
  <class name="PatientVisitBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PatientVisitBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getLastOVDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastOVDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastOVDate" type="java.lang.String"/>
    </method>
    <method name="getLastOVDateM" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastOVDateM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastOVDateM" type="java.lang.String"/>
    </method>
    <method name="getLastOVDateD" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastOVDateD"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastOVDateD" type="java.lang.String"/>
    </method>
    <method name="getLastOVDateY" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastOVDateY"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastOVDateY" type="java.lang.String"/>
    </method>
    <method name="getPatientName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientName" type="java.lang.String"/>
    </method>
    <method name="getAddress1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddress1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="address1" type="java.lang.String"/>
    </method>
    <method name="getAddress2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddress2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="address2" type="java.lang.String"/>
    </method>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatient"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patient" type="edu.ncsu.csc.itrust.beans.PatientBean"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a patient's visit.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.PatientVisitBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.PersonnelBean -->
  <class name="PersonnelBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="PersonnelBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMessageFilter" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMessageFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="messageFilter" type="java.lang.String"/>
    </method>
    <method name="getEmail" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEmail"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="email" type="java.lang.String"/>
    </method>
    <method name="getAMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="amid" type="long"/>
    </method>
    <method name="getCity" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="city" type="java.lang.String"/>
    </method>
    <method name="getConfirmPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setConfirmPassword"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="confirmPassword" type="java.lang.String"/>
    </method>
    <method name="getFirstName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFirstName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstName" type="java.lang.String"/>
    </method>
    <method name="getLastName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastName" type="java.lang.String"/>
    </method>
    <method name="getFullName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
    </method>
    <method name="getPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPassword"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="password" type="java.lang.String"/>
    </method>
    <method name="getPhone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPhone1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPhone1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone1" type="java.lang.String"/>
    </method>
    <method name="getPhone2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPhone2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone2" type="java.lang.String"/>
    </method>
    <method name="getPhone3" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPhone3"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone3" type="java.lang.String"/>
    </method>
    <method name="getRoleString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSecurityAnswer" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSecurityAnswer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="securityAnswer" type="java.lang.String"/>
    </method>
    <method name="getSecurityQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSecurityQuestion"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="securityQuestion" type="java.lang.String"/>
    </method>
    <method name="getState" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setState"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="state" type="java.lang.String"/>
    </method>
    <method name="getStreetAddress1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStreetAddress1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="streetAddress1" type="java.lang.String"/>
    </method>
    <method name="getStreetAddress2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStreetAddress2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="streetAddress2" type="java.lang.String"/>
    </method>
    <method name="getZip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getZip1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setZip1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="zip1" type="java.lang.String"/>
    </method>
    <method name="getZip2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setZip2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="zip2" type="java.lang.String"/>
    </method>
    <method name="getSpecialty" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSpecialty"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="specialty" type="java.lang.String"/>
    </method>
    <method name="getIndexIn" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="list" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"/>
    </method>
    <method name="setRoleString"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="role" type="java.lang.String"/>
    </method>
    <method name="getRole" return="edu.ncsu.csc.itrust.enums.Role"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRole"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="role" type="edu.ncsu.csc.itrust.enums.Role"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a hospital employee.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.PersonnelBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.PrescriptionBean -->
  <class name="PrescriptionBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PrescriptionBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDosage" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDosage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dosage" type="int"/>
    </method>
    <method name="getReason" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setReason"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reason" type="java.lang.String"/>
    </method>
    <method name="getEndDate" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEndDateStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="endDate" type="java.lang.String"/>
    </method>
    <method name="getInstructions" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setInstructions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="instruction" type="java.lang.String"/>
    </method>
    <method name="getMedication" return="edu.ncsu.csc.itrust.beans.MedicationBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setMedication"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="medication" type="edu.ncsu.csc.itrust.beans.MedicationBean"/>
    </method>
    <method name="getStartDate" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getStartDateStr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getEndDateStr" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStartDateStr"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="startDate" type="java.lang.String"/>
    </method>
    <method name="getVisitID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setVisitID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
    </method>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a prescription.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.PrescriptionBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.PrescriptionReportBean -->
  <class name="PrescriptionReportBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PrescriptionReportBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getPrescription" return="edu.ncsu.csc.itrust.beans.PrescriptionBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPrescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="prescription" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
    </method>
    <method name="getOfficeVisit" return="edu.ncsu.csc.itrust.beans.OfficeVisitBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOfficeVisit"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="officeVisit" type="edu.ncsu.csc.itrust.beans.OfficeVisitBean"/>
    </method>
    <doc>
    <![CDATA[This is the container bean for the Prescription Report requirement. It contains a PrescriptionBean (which
 in turn contains a Medication Bean), and an office visit bean. <br />
 <br />
 This was made so that the prescription report could be done all in one clean query.<br />
 <br />
 See {@link PrescriptionBean} See {@link OfficeVisitBean}
 
 @author Andy Meneely]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.PrescriptionReportBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.ProcedureBean -->
  <class name="ProcedureBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ProcedureBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ProcedureBean" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ProcedureBean" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ProcedureBean" type="java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ProcedureBean" type="java.lang.String, java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getCPTCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the CPT Code for this procedure
 
 @return The CPT Code for this procedure]]>
      </doc>
    </method>
    <method name="setCPTCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the CPT Description for this procedure
 
 @return The CPT Description for this procedure]]>
      </doc>
    </method>
    <method name="setDescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="description" type="java.lang.String"/>
    </method>
    <method name="getHcpid" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the HCP ID of the HCP administering the immunization
 @return String]]>
      </doc>
    </method>
    <method name="setHcpid"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpid" type="java.lang.String"/>
    </method>
    <method name="getAttribute" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the CPT attribute, used to determine if this is an immunization
 @return String]]>
      </doc>
    </method>
    <method name="setAttribute"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrib" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the CPT attribute, used to determine if this is an immunization
 @param String]]>
      </doc>
    </method>
    <method name="getOvProcedureID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOvProcedureID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovProcedureID" type="long"/>
    </method>
    <method name="getDate" return="java.sql.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="java.sql.Date"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a procedure.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.ProcedureBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.ReferralBean -->
  <class name="ReferralBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReferralBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setId"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
    </method>
    <method name="getSenderID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSenderID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="senderID" type="long"/>
    </method>
    <method name="getReceiverID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setReceiverID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="receiverID" type="long"/>
    </method>
    <method name="getReferralDetails" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setReferralDetails"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="referralDetails" type="java.lang.String"/>
    </method>
    <method name="getConsultationDetails" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setConsultationDetails"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="consultationDetails" type="java.lang.String"/>
    </method>
    <method name="getStatus" return="edu.ncsu.csc.itrust.beans.ReferralBean.ReferralStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="status" type="edu.ncsu.csc.itrust.beans.ReferralBean.ReferralStatus"/>
    </method>
    <method name="getPatientID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a medical referral.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.ReferralBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.ReferralBean.ReferralStatus -->
  <class name="ReferralBean.ReferralStatus" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.beans.ReferralBean.ReferralStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.beans.ReferralBean.ReferralStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.beans.ReferralBean.ReferralStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.ReferralBean.ReferralStatus -->
  <!-- start class edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean -->
  <class name="RemoteMonitoringDataBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RemoteMonitoringDataBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor with no parameters]]>
      </doc>
    </constructor>
    <constructor name="RemoteMonitoringDataBean" type="long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor with loggedInMID parameter]]>
      </doc>
    </constructor>
    <method name="getReporterMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setReporterMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reporterMID" type="long"/>
    </method>
    <method name="getPatientMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLoggedInMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
    </method>
    <method name="getTime" return="java.sql.Timestamp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="time" type="java.sql.Timestamp"/>
    </method>
    <method name="getSystolicBloodPressure" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSystolicBloodPressure"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="systolicBloodPressure" type="int"/>
    </method>
    <method name="getDiastolicBloodPressure" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDiastolicBloodPressure"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diastolicBloodPressure" type="int"/>
    </method>
    <method name="getGlucoseLevel" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setGlucoseLevel"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="glucoseLevel" type="int"/>
    </method>
    <method name="getHeight" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHeight"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="height" type="float"/>
    </method>
    <method name="getWeight" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setWeight"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="weight" type="float"/>
    </method>
    <method name="getPedometerReading" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPedometerReading"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pedometerReading" type="int"/>
    </method>
    <method name="getReporterRole" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setReporterRole"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reporterRole" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[A bean for storing remote monitoring data for patients.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.ReportRequestBean -->
  <class name="ReportRequestBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReportRequestBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="iD" type="long"/>
    </method>
    <method name="getID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRequesterMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="requesterMID" type="long"/>
    </method>
    <method name="getRequesterMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
    </method>
    <method name="getPatientMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRequestedDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="requestedDate" type="java.util.Date"/>
    </method>
    <method name="setRequestedDateString"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="s" type="java.lang.String"/>
    </method>
    <method name="getRequestedDate" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRequestedDateString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setViewedDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="viewedDate" type="java.util.Date"/>
    </method>
    <method name="setViewedDateString"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="s" type="java.lang.String"/>
    </method>
    <method name="getViewedDate" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getViewedDateString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="status" type="java.lang.String"/>
    </method>
    <method name="getStatus" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="dateFormat" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="Requested" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="Viewed" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[A bean for storing data about a report request.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.ReportRequestBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.SecurityQA -->
  <class name="SecurityQA" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SecurityQA"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setQuestion"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="question" type="java.lang.String"/>
    </method>
    <method name="getAnswer" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAnswer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="answer" type="java.lang.String"/>
    </method>
    <method name="getConfirmAnswer" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setConfirmAnswer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="confirmAnswer" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a security question and answer.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.SecurityQA -->
  <!-- start class edu.ncsu.csc.itrust.beans.SurveyBean -->
  <class name="SurveyBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SurveyBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setVisitID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="iD" type="long"/>
    </method>
    <method name="getVisitID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSurveyDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="surveyDate" type="java.util.Date"/>
    </method>
    <method name="setSurveyDateString"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="s" type="java.lang.String"/>
    </method>
    <method name="getSurveyDate" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSurveyDateString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setWaitingRoomMinutes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="waitingRoomMinutes" type="int"/>
    </method>
    <method name="getWaitingRoomMinutes" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setExamRoomMinutes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="examRoomMinutes" type="int"/>
    </method>
    <method name="getExamRoomMinutes" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setVisitSatisfaction"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitSatisfaction" type="int"/>
    </method>
    <method name="getVisitSatisfaction" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTreatmentSatisfaction"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="treatmentSatisfaction" type="int"/>
    </method>
    <method name="getTreatmentSatisfaction" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="dateFormat" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[A bean for storing survey data associated with an office visit.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.SurveyBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.SurveyResultBean -->
  <class name="SurveyResultBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SurveyResultBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setHCPMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
    </method>
    <method name="getHCPMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPFirstName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstName" type="java.lang.String"/>
    </method>
    <method name="getHCPFirstName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPLastName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastName" type="java.lang.String"/>
    </method>
    <method name="getHCPLastName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPaddress1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="address1" type="java.lang.String"/>
    </method>
    <method name="getHCPaddress1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPaddress2"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="address2" type="java.lang.String"/>
    </method>
    <method name="getHCPaddress2" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPcity"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="city" type="java.lang.String"/>
    </method>
    <method name="getHCPcity" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPstate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="state" type="java.lang.String"/>
    </method>
    <method name="getHCPstate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPzip"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="zip" type="java.lang.String"/>
    </method>
    <method name="getHCPzip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPspecialty"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="specialty" type="java.lang.String"/>
    </method>
    <method name="getHCPspecialty" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHCPhospital"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hospital" type="java.lang.String"/>
    </method>
    <method name="getHCPhospital" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAvgWaitingRoomMinutes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="waitingRoomMinutes" type="float"/>
    </method>
    <method name="getAvgWaitingRoomMinutes" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAvgExamRoomMinutes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="examRoomMinutes" type="float"/>
    </method>
    <method name="getAvgExamRoomMinutes" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAvgVisitSatisfaction"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitSatisfaction" type="float"/>
    </method>
    <method name="getAvgVisitSatisfaction" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAvgTreatmentSatisfaction"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="treatmentSatisfaction" type="float"/>
    </method>
    <method name="getAvgTreatmentSatisfaction" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPercentSatisfactionResults"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="percent" type="float"/>
    </method>
    <method name="getPercentSatisfactionResults" return="float"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="GENERAL_SPECIALTY" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="SURGEON_SPECIALTY" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="HEART_SPECIALTY" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="PEDIATRICIAN_SPECIALTY" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OBGYN_SPECIALTY" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="ANY_SPECIALTY" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Bean to be used for survey results (search).  Stores address information about a HCP
 in addition to their specialty, hospital, and averages from survey (results range from 1-5).  This
 beans also contains a variable that stores the percent of office visits that satisfaction results are 
 available.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.SurveyResultBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.TelemedicineBean -->
  <class name="TelemedicineBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TelemedicineBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="isHeightAllowed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHeightAllowed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="heightAllowed" type="boolean"/>
    </method>
    <method name="isSystolicBloodPressureAllowed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSystolicBloodPressureAllowed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="systolicBloodPressureAllowed" type="boolean"/>
    </method>
    <method name="isDiastolicBloodPressureAllowed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDiastolicBloodPressureAllowed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diastolicBloodPressureAllowed" type="boolean"/>
    </method>
    <method name="isGlucoseLevelAllowed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setGlucoseLevelAllowed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="glucoseLevelAllowed" type="boolean"/>
    </method>
    <method name="isWeightAllowed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setWeightAllowed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="weightAllowed" type="boolean"/>
    </method>
    <method name="isPedometerReadingAllowed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPedometerReadingAllowed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pedometerReadingAllowed" type="boolean"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.TelemedicineBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.TransactionBean -->
  <class name="TransactionBean" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TransactionBean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getRole" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRole"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="role" type="java.lang.String"/>
    </method>
    <method name="getAddedInfo" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddedInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addedInfo" type="java.lang.String"/>
    </method>
    <method name="getLoggedInMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLoggedInMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="loggedInMID" type="long"/>
    </method>
    <method name="getSecondaryMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setSecondaryMID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="secondaryMID" type="long"/>
    </method>
    <method name="getTimeLogged" return="java.sql.Timestamp"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTimeLogged"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timeLogged" type="java.sql.Timestamp"/>
    </method>
    <method name="getTransactionType" return="edu.ncsu.csc.itrust.enums.TransactionType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTransactionType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tranactionType" type="edu.ncsu.csc.itrust.enums.TransactionType"/>
    </method>
    <method name="getTransactionID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setTransactionID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="transactionID" type="long"/>
    </method>
    <doc>
    <![CDATA[A bean for storing data about a transaction that occurred within iTrust.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.TransactionBean -->
  <!-- start class edu.ncsu.csc.itrust.beans.VisitFlag -->
  <class name="VisitFlag" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="VisitFlag" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="VisitFlag" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="java.lang.String"/>
    </method>
    <method name="getValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setValue"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.lang.String"/>
    </method>
    <field name="DIAGNOSED" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="MISSED_MEDICATION" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="MISSING_MEDICATION" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="LAST_VISIT" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="IMMUNIZATION" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[A bean for storing data to flag an office visit.
 
 A bean's purpose is to store data. Period. Little or no functionality is to be added to a bean 
 (with the exception of minor formatting such as concatenating phone numbers together). 
 A bean must only have Getters and Setters (Eclipse Hint: Use Source > Generate Getters and Setters# 
 to create these easily)]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.VisitFlag -->
</package>
<package name="edu.ncsu.csc.itrust.beans.forms">
  <!-- start class edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm -->
  <class name="EditOfficeVisitForm" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditOfficeVisitForm"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getAddDiagID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddDiagID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addDiagID" type="java.lang.String"/>
    </method>
    <method name="getAddLabProcID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddLabProcID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addLabProcID" type="java.lang.String"/>
    </method>
    <method name="getAddMedID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddMedID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addMedID" type="java.lang.String"/>
    </method>
    <method name="getAddProcID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddProcID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addProcID" type="java.lang.String"/>
    </method>
    <method name="getAddImmunizationID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setAddImmunizationID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addImmunizationID" type="java.lang.String"/>
    </method>
    <method name="getNotes" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setNotes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="notes" type="java.lang.String"/>
    </method>
    <method name="getOvID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOvID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovID" type="java.lang.String"/>
    </method>
    <method name="getRemoveLabProcID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRemoveLabProcID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="removeLabProcID" type="java.lang.String"/>
    </method>
    <method name="getRemoveDiagID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRemoveDiagID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="removeDiagID" type="java.lang.String"/>
    </method>
    <method name="getRemoveMedID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRemoveMedID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="removeMedID" type="java.lang.String"/>
    </method>
    <method name="getRemoveProcID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRemoveProcID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="removeProcID" type="java.lang.String"/>
    </method>
    <method name="getRemoveImmunizationID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setRemoveImmunizationID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="removeImmunizationID" type="java.lang.String"/>
    </method>
    <method name="getVisitDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setVisitDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitDate" type="java.lang.String"/>
    </method>
    <method name="getHcpID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHcpID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="java.lang.String"/>
    </method>
    <method name="getPatientID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="java.lang.String"/>
    </method>
    <method name="getHospitalID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHospitalID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hospitalID" type="java.lang.String"/>
    </method>
    <method name="getDosage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDosage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dosage" type="java.lang.String"/>
    </method>
    <method name="getEndDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setEndDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="endDate" type="java.lang.String"/>
    </method>
    <method name="getInstructions" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setInstructions"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="instructions" type="java.lang.String"/>
    </method>
    <method name="getStartDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setStartDate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="startDate" type="java.lang.String"/>
    </method>
    <method name="getCauseOfDeath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCauseOfDeath"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="causeOfDeath" type="java.lang.String"/>
    </method>
    <method name="setOverrideCode" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="reasonCode" type="java.lang.String[]"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
    <method name="getOverrideCodes" return="java.lang.String[]"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setOverrideComment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="comment" type="java.lang.String"/>
    </method>
    <method name="getOverrideComment" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A form to contain data coming from editing an office visit.
 
 A form is a bean, kinda. You could say that it's a #form# of a bean :) 
 Think of a form as a real-life administrative form that you would fill out to get 
 something done, not necessarily making sense by itself.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm -->
  <!-- start class edu.ncsu.csc.itrust.beans.forms.HealthRecordForm -->
  <class name="HealthRecordForm" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HealthRecordForm"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getBloodPressureD" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBloodPressureD"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodPressureD" type="java.lang.String"/>
    </method>
    <method name="getBloodPressureN" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setBloodPressureN"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodPressureN" type="java.lang.String"/>
    </method>
    <method name="getCholesterolHDL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCholesterolHDL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cholesterolHDL" type="java.lang.String"/>
    </method>
    <method name="getCholesterolLDL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCholesterolLDL"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cholesterolLDL" type="java.lang.String"/>
    </method>
    <method name="getCholesterolTri" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCholesterolTri"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cholesterolTri" type="java.lang.String"/>
    </method>
    <method name="getHeight" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHeight"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="height" type="java.lang.String"/>
    </method>
    <method name="getIsSmoker" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setIsSmoker"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="isSmoker" type="java.lang.String"/>
    </method>
    <method name="getWeight" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setWeight"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="weight" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[A form to contain data coming from editing a health record.
 
 A form is a bean, kinda. You could say that it's a #form# of a bean :) 
 Think of a form as a real-life administrative form that you would fill out to get 
 something done, not necessarily making sense by itself.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.forms.HealthRecordForm -->
  <!-- start class edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm -->
  <class name="VisitReminderReturnForm" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="VisitReminderReturnForm" type="long, long, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getHcpID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setHcpID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
    </method>
    <method name="getPatientID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPatientID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
    </method>
    <method name="getLastName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setLastName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lastName" type="java.lang.String"/>
    </method>
    <method name="getFirstName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setFirstName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstName" type="java.lang.String"/>
    </method>
    <method name="getPhoneNumber" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPhoneNumber"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phone1" type="java.lang.String"/>
      <param name="phone2" type="java.lang.String"/>
      <param name="phone3" type="java.lang.String"/>
    </method>
    <method name="getVisitFlags" return="edu.ncsu.csc.itrust.beans.VisitFlag[]"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setVisitFlags"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitFlags" type="edu.ncsu.csc.itrust.beans.VisitFlag[]"/>
    </method>
    <method name="addVisitFlag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="flag" type="edu.ncsu.csc.itrust.beans.VisitFlag"/>
    </method>
    <doc>
    <![CDATA[A form to contain data coming from reminding a user about an upcoming office visit.
 
 A form is a bean, kinda. You could say that it's a #form# of a bean :) 
 Think of a form as a real-life administrative form that you would fill out to get 
 something done, not necessarily making sense by itself.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm -->
</package>
<package name="edu.ncsu.csc.itrust.beans.loaders">
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader -->
  <class name="AdverseEventBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"/>
    <constructor name="AdverseEventBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.AdverseEventBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.AdverseEventBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for AdverseEventBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.AdverseEventBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader -->
  <class name="AllergyBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.AllergyBean&gt;"/>
    <constructor name="AllergyBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AllergyBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.AllergyBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.AllergyBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for AllergyBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.AllergyBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader -->
  <class name="ApptBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"/>
    <constructor name="ApptBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.ApptBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.ApptBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader -->
  <class name="ApptTypeBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.ApptTypeBean&gt;"/>
    <constructor name="ApptTypeBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptTypeBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="apptType" type="edu.ncsu.csc.itrust.beans.ApptTypeBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.ApptTypeBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.ApptTypeBeanLoader -->
  <!-- start interface edu.ncsu.csc.itrust.beans.loaders.BeanLoader -->
  <interface name="BeanLoader"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="loadList" return="java.util.List&lt;T&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Loads a list of the bean of type T from a result set.  Typically makes iterated calls
 to loadSingle.
 @param rs The java.sql.ResultSet we are extracting.
 @return A java.util.List<T> where T is the type for this loader.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="loadSingle" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Contains the instructions for mapping the rows in this java.sql.ResultSet into
 beans of type <T>.
 @param rs The java.sql.ResultSet to be loaded.
 @return A Bean of type T containing the loaded information, typically of the first (or next) item in the result set.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="T"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Used for an insert or update, this method contains the instructions for mapping the fields within
 a bean of type T into a prepared statement which modifies the appropriate table.
 @param ps The prepared statement to be loaded.
 @param bean The bean containing the data to be placed.
 @return A prepared statement with the appropriately loaded parameters.
 @throws SQLException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This interface helps enforce the paradigm of what should be contained in a loader.
 
 The generic type <T> specifies the type of bean that the loader is responsible for extacting from
 a result set.
 
 @param <T> A type for the bean that will be loaded with this class.]]>
    </doc>
  </interface>
  <!-- end interface edu.ncsu.csc.itrust.beans.loaders.BeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader -->
  <class name="DiagnosisBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"/>
    <constructor name="DiagnosisBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="DiagnosisBeanLoader" type="boolean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.DiagnosisBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.DiagnosisBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for DiagnosisBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency.
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.DiagnosisBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader -->
  <class name="DrugInteractionBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.DrugInteractionBean&gt;"/>
    <constructor name="DrugInteractionBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DrugInteractionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.DrugInteractionBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.DrugInteractionBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for MedicationBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.DrugInteractionBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader -->
  <class name="EmailBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.Email&gt;"/>
    <constructor name="EmailBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.Email&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="email" type="edu.ncsu.csc.itrust.beans.Email"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.Email"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for Fake Emails.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.EmailBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader -->
  <class name="FamilyBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"/>
    <constructor name="FamilyBeanLoader" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.FamilyMemberBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.FamilyMemberBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for FamilyMemberBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.FamilyBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader -->
  <class name="HealthRecordsBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"/>
    <constructor name="HealthRecordsBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.HealthRecord"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.HealthRecord"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for HealthRecords.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.HealthRecordsBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader -->
  <class name="HospitalBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"/>
    <constructor name="HospitalBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.HospitalBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.HospitalBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for HospitalBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.HospitalBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader -->
  <class name="LabProcedureBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"/>
    <constructor name="LabProcedureBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.LabProcedureBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.LabProcedureBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for LabProcedureBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.LabProcedureBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader -->
  <class name="LOINCBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.LOINCbean&gt;"/>
    <constructor name="LOINCBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LOINCbean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.LOINCbean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.LOINCbean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for LOINCBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.LOINCBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader -->
  <class name="MedicationBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.MedicationBean&gt;"/>
    <constructor name="MedicationBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MedicationBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.MedicationBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.MedicationBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for MedicationBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.MedicationBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader -->
  <class name="MessageBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"/>
    <constructor name="MessageBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="message" type="edu.ncsu.csc.itrust.beans.MessageBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.MessageBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for MessageBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.MessageBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader -->
  <class name="OfficeVisitLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"/>
    <constructor name="OfficeVisitLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.OfficeVisitBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="p" type="edu.ncsu.csc.itrust.beans.OfficeVisitBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for OfficeVisitBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.OfficeVisitLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader -->
  <class name="OperationalProfileLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.OperationalProfile&gt;"/>
    <constructor name="OperationalProfileLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OperationalProfile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.OperationalProfile"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.OperationalProfile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for the operational profile.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.OperationalProfileLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader -->
  <class name="OverrideReasonBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.OverrideReasonBean&gt;"/>
    <constructor name="OverrideReasonBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OverrideReasonBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.OverrideReasonBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.OverrideReasonBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for OverrideReasonBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.OverrideReasonBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.PatientLoader -->
  <class name="PatientLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"/>
    <constructor name="PatientLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="p" type="edu.ncsu.csc.itrust.beans.PatientBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for PatientBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.PatientLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader -->
  <class name="PersonnelLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"/>
    <constructor name="PersonnelLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for PersonnelBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.PersonnelLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader -->
  <class name="PrescriptionBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"/>
    <constructor name="PrescriptionBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.PrescriptionBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="pres" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for PrescriptionBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.PrescriptionBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader -->
  <class name="PrescriptionReportBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.PrescriptionReportBean&gt;"/>
    <constructor name="PrescriptionReportBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionReportBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.PrescriptionReportBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="pres" type="edu.ncsu.csc.itrust.beans.PrescriptionReportBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for PrescriptionReportBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.PrescriptionReportBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader -->
  <class name="ProcedureBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"/>
    <constructor name="ProcedureBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ProcedureBeanLoader" type="boolean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.ProcedureBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.ProcedureBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for ProcedureBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.ProcedureBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader -->
  <class name="ReferralBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.ReferralBean&gt;"/>
    <constructor name="ReferralBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReferralBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.ReferralBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="ref" type="edu.ncsu.csc.itrust.beans.ReferralBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for ReferralBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.ReferralBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader -->
  <class name="RemoteMonitoringDataBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"/>
    <constructor name="RemoteMonitoringDataBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for RemoteMonitoringDataBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringDataBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader -->
  <class name="RemoteMonitoringListsBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.TelemedicineBean&gt;"/>
    <constructor name="RemoteMonitoringListsBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TelemedicineBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.TelemedicineBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.TelemedicineBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for RemoteMonitoringDataBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.RemoteMonitoringListsBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader -->
  <class name="ReportRequestBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.ReportRequestBean&gt;"/>
    <constructor name="ReportRequestBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReportRequestBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.ReportRequestBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.ReportRequestBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for ReportRequestBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.ReportRequestBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.SurveyLoader -->
  <class name="SurveyLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.SurveyBean&gt;"/>
    <constructor name="SurveyLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.SurveyBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.SurveyBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.SurveyBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for SurveyBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.SurveyLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader -->
  <class name="SurveyResultBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.SurveyResultBean&gt;"/>
    <constructor name="SurveyResultBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.SurveyResultBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.SurveyResultBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.SurveyResultBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for SurveyResultBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.SurveyResultBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader -->
  <class name="TransactionBeanLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"/>
    <constructor name="TransactionBeanLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.TransactionBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.TransactionBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for TransactionBeans.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.TransactionBeanLoader -->
  <!-- start class edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader -->
  <class name="VisitReminderReturnFormLoader" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.beans.loaders.BeanLoader&lt;edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm&gt;"/>
    <constructor name="VisitReminderReturnFormLoader"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadList" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadSingle" return="edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="rs" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="loadParameters" return="java.sql.PreparedStatement"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ps" type="java.sql.PreparedStatement"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[A loader for VisitReminderReturnForms.
 
 Loads in information to/from beans using ResultSets and PreparedStatements. Use the superclass to enforce consistency. 
 For details on the paradigm for a loader (and what its methods do), see {@link BeanLoader}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.beans.loaders.VisitReminderReturnFormLoader -->
</package>
<package name="edu.ncsu.csc.itrust.charts">
  <!-- start class edu.ncsu.csc.itrust.charts.AdverseEventsData -->
  <class name="AdverseEventsData" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="AdverseEventsData"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="setAdverseEventsList"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="adEvents" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"/>
      <param name="name" type="java.lang.String"/>
      <doc>
      <![CDATA[Called from the JSP page to initialize the list of Adverse Events needed to
 produce the desired chart.
 
 @param adEvents
 @param name]]>
      </doc>
    </method>
    <method name="produceDataset" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params" type="java.util.Map"/>
      <exception name="DatasetProduceException" type="DatasetProduceException"/>
      <doc>
      <![CDATA[This method parses the list of Adverse Event Beans to initialize the chart dataset.]]>
      </doc>
    </method>
    <method name="hasExpired" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params" type="java.util.Map"/>
      <param name="since" type="java.util.Date"/>
      <doc>
      <![CDATA[This producer's data is invalidated after 5 seconds. By this method the
 producer can influence Cewolf's caching behaviour the way it wants to.]]>
      </doc>
    </method>
    <method name="getProducerId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a unique ID for this DatasetProducer]]>
      </doc>
    </method>
    <method name="generateLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="data" type="java.lang.Object"/>
      <param name="series" type="int"/>
      <param name="category" type="java.lang.Object"/>
      <doc>
      <![CDATA[Returns a link target for a special data item.]]>
      </doc>
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
      <doc>
      <![CDATA[@see java.lang.Object#finalize()]]>
      </doc>
    </method>
    <method name="generateToolTip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="CategoryDataset"/>
      <param name="series" type="int"/>
      <param name="arg2" type="int"/>
      <doc>
      <![CDATA[@see org.jfree.chart.tooltips.CategoryToolTipGenerator#generateToolTip(CategoryDataset, int, int)]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This class handles the data for charting in CeWolf/JFreeChart. This class implements DatasetProducer,
 CategoryToolTipGenerator, CategoryItemLinkGenerator, and Serializable.
 
 @author Jason]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.charts.AdverseEventsData -->
  <!-- start class edu.ncsu.csc.itrust.charts.HealthData -->
  <class name="HealthData" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="HealthData"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="hasData" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Lets the JSP know if there is any data to be displayed.
 
 @return False if there is no data to be displayed.]]>
      </doc>
    </method>
    <method name="initializeHealthRecords"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hRecs" type="java.util.List&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"/>
      <param name="name" type="java.lang.String"/>
      <doc>
      <![CDATA[Called from the JSP to initialize the list of HealthRecords needed
 to produce the desired chart.
 
 @param hRecs Health records for the patient being viewed.
 @param name Type of data that is being graphed (originally Height, Weight, and BMI).]]>
      </doc>
    </method>
    <method name="produceDataset" return="java.lang.Object"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params" type="java.util.Map"/>
      <exception name="DatasetProduceException" type="DatasetProduceException"/>
      <doc>
      <![CDATA[This method parses the list of Adverse Event Beans to initialize the
 chart dataset.
 @param Map parameters passed from CeWolf (though not actually used locally)
 @return A dataset containing information to be graphed
 @throws DatasetProduceException]]>
      </doc>
    </method>
    <method name="hasExpired" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="params" type="java.util.Map"/>
      <param name="since" type="java.util.Date"/>
      <doc>
      <![CDATA[This producer's data is invalidated after 5 seconds. By this method the
 producer can influence Cewolf's caching behavior the way it wants to.]]>
      </doc>
    </method>
    <method name="getProducerId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A unique ID for this DatasetProducer]]>
      </doc>
    </method>
    <method name="generateLink" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="data" type="java.lang.Object"/>
      <param name="series" type="int"/>
      <param name="category" type="java.lang.Object"/>
      <doc>
      <![CDATA[@return A link target for a special data item.]]>
      </doc>
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
      <doc>
      <![CDATA[@see java.lang.Object#finalize()]]>
      </doc>
    </method>
    <method name="generateToolTip" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="CategoryDataset"/>
      <param name="series" type="int"/>
      <param name="arg2" type="int"/>
      <doc>
      <![CDATA[@see org.jfree.chart.tooltips.CategoryToolTipGenerator#generateToolTip(CategoryDataset, int, int)]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This class handles the data for charting height and weight information in
 CeWolf/JFreeChart. This class implements DatasetProducer,
 CategoryToolTipGenerator, CategoryItemLinkGenerator, and Serializable.
 
 @author Fu]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.charts.HealthData -->
</package>
<package name="edu.ncsu.csc.itrust.dao">
  <!-- start class edu.ncsu.csc.itrust.dao.DAOFactory -->
  <class name="DAOFactory" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DAOFactory"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </constructor>
    <method name="getProductionInstance" return="edu.ncsu.csc.itrust.dao.DAOFactory"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A production instance of the DAOFactory, to be used in deployment (by Tomcat).]]>
      </doc>
    </method>
    <method name="getConnection" return="java.sql.Connection"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="getAccessDAO" return="edu.ncsu.csc.itrust.dao.mysql.AccessDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAllergyDAO" return="edu.ncsu.csc.itrust.dao.mysql.AllergyDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApptDAO" return="edu.ncsu.csc.itrust.dao.mysql.ApptDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getApptTypeDAO" return="edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAuthDAO" return="edu.ncsu.csc.itrust.dao.mysql.AuthDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCPTCodesDAO" return="edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDrugInteractionDAO" return="edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFamilyDAO" return="edu.ncsu.csc.itrust.dao.mysql.FamilyDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHealthRecordsDAO" return="edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHospitalsDAO" return="edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getICDCodesDAO" return="edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNDCodesDAO" return="edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOfficeVisitDAO" return="edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPatientDAO" return="edu.ncsu.csc.itrust.dao.mysql.PatientDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getProfilePhotoDAO" return="edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPersonnelDAO" return="edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getReferralDAO" return="edu.ncsu.csc.itrust.dao.mysql.ReferralDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRiskDAO" return="edu.ncsu.csc.itrust.dao.mysql.RiskDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getTransactionDAO" return="edu.ncsu.csc.itrust.dao.mysql.TransactionDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getVisitRemindersDAO" return="edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFakeEmailDAO" return="edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getReportRequestDAO" return="edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSurveyDAO" return="edu.ncsu.csc.itrust.dao.mysql.SurveyDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLabProcedureDAO" return="edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLOINCDAO" return="edu.ncsu.csc.itrust.dao.mysql.LOINCDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSurveyResultDAO" return="edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMessageDAO" return="edu.ncsu.csc.itrust.dao.mysql.MessageDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAdverseEventDAO" return="edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRemoteMonitoringDAO" return="edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getORCodesDAO" return="edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[The central mediator for all Database Access Objects. The production instance uses the database connection pool
 provided by Tomcat (so use the production instance when doing stuff from JSPs in the "real code"). Both the
 production and the test instance parses the context.xml file to get the JDBC connection.
 
 Also, @see {@link EvilDAOFactory} and @see {@link TestDAOFactory}.
 
 Any DAO that is added to the system should be added in this class, in the same way that all other DAOs are.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.DAOFactory -->
  <!-- start interface edu.ncsu.csc.itrust.dao.IConnectionDriver -->
  <interface name="IConnectionDriver"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getConnection" return="java.sql.Connection"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[Used by DAOFactory to abstract away different ways of getting our JDBC connection
 
 @author Andy]]>
    </doc>
  </interface>
  <!-- end interface edu.ncsu.csc.itrust.dao.IConnectionDriver -->
  <!-- start class edu.ncsu.csc.itrust.dao.ProductionConnectionDriver -->
  <class name="ProductionConnectionDriver" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="edu.ncsu.csc.itrust.dao.IConnectionDriver"/>
    <constructor name="ProductionConnectionDriver"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ProductionConnectionDriver" type="javax.naming.InitialContext"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getConnection" return="java.sql.Connection"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <doc>
    <![CDATA[Produces the JDBC connection from Tomcat's JDBC connection pool (defined in context.xml). Produces and
 exception when running the unit tests because they're not being run through Tomcat.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.ProductionConnectionDriver -->
</package>
<package name="edu.ncsu.csc.itrust.dao.mysql">
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.AccessDAO -->
  <class name="AccessDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AccessDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getSessionTimeoutMins" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the number of minutes it would take for a session to time out. This is done by effectively
 using the database table as a hash table. If a row in GlobalVariables does not exist, one is inserted
 with the default value '20'.
 
 @return An int for the number of minutes.
 @throws DBException]]>
      </doc>
    </method>
    <method name="setSessionTimeoutMins"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mins" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Sets the number of minutes it would take for a session to timeout.
 
 @param mins An int specifying the number of minutes
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[AccessDAO is for all queries related to authorization.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.AccessDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO -->
  <class name="AdverseEventDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AdverseEventDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getReportsFor" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets all the adverse event reports for a certain user MID.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of AdverseEventBeans.
 @throws SQLException
 @throws DBException]]>
      </doc>
    </method>
    <method name="addReport"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="aeBean" type="edu.ncsu.csc.itrust.beans.AdverseEventBean"/>
      <param name="hcpmid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a message to the database.
 @param mBean A bean representing the message to be added.
 @throws SQLException
 @throws DBException]]>
      </doc>
    </method>
    <method name="getHCPMID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getReport" return="edu.ncsu.csc.itrust.beans.AdverseEventBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="removeReport" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getUnremovedAdverseEventsByCode" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getNameForCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getPerscriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="start" type="java.lang.String"/>
      <param name="end" type="java.lang.String"/>
      <exception name="ParseException" type="java.text.ParseException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getImmunizations" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="start" type="java.lang.String"/>
      <param name="end" type="java.lang.String"/>
      <exception name="ParseException" type="java.text.ParseException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <doc>
    <![CDATA[Used for the logging mechanism.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.AdverseEventDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.AllergyDAO -->
  <class name="AllergyDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AllergyDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllergies" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.AllergyBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of patient's allergies.
 @param pid A long for the MID of the patient we are looking up.
 @return A java.util.List of AllergyBeans associated with this patient.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addAllergy"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <param name="description" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds an allergy to this patient's list.
 @param pid The MID of the patient whose allergy we are adding.
 @param description The name of the allergen.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.AllergyDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.ApptDAO -->
  <class name="ApptDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ApptDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getAppt" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptID" type="int"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="getApptsFor" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="scheduleAppt"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appt" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="editAppt"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appt" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="removeAppt"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="appt" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.ApptDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO -->
  <class name="ApptTypeDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ApptTypeDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getApptTypes" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ApptTypeBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="addApptType" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptType" type="edu.ncsu.csc.itrust.beans.ApptTypeBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="editApptType" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="apptType" type="edu.ncsu.csc.itrust.beans.ApptTypeBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.ApptTypeDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.AuthDAO -->
  <class name="AuthDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AuthDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="addUser" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="java.lang.Long"/>
      <param name="role" type="edu.ncsu.csc.itrust.enums.Role"/>
      <param name="password" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Add a particular user to the system. Does not add user-specific information (e.g. Patient or HCP).
 Initially sets security question to a random set of characters, so that nobody should be able to guess
 its value.
 
 @param mid The user's MID as a Long.
 @param role The role of the user as a Role enum {@link Role}
 @param password The password for the new user.
 @return A string representing the newly added randomly-generated password. 
 @throws DBException]]>
      </doc>
    </method>
    <method name="setSecurityQuestionAnswer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="question" type="java.lang.String"/>
      <param name="answer" type="java.lang.String"/>
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Reset the security question and answer for a particular user
 
 @param question The security question as a string.
 @param answer The security answer as a string.
 @param mid The MID of the user as a long.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getUserName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the user name of a user from just the MID
 
 @param mid The MID of the user to get the name of.
 @return The user's name as a String.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getUserRole" return="edu.ncsu.csc.itrust.enums.Role"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Returns the role of a particular MID
 
 @param mid The MID of the user to look up.
 @return The {@link Role} of the user as an enum.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="resetPassword"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="password" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Change the password of a particular user
 
 @param mid The MID of the user whose password we are changing.
 @param password The new password.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getSecurityQuestion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Return the security question for a particular user.
 
 @param mid The MID of the user we are looking up.
 @return The security question of the user we are looking up.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getSecurityAnswer" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Return the security answer of a particular user
 
 @param mid The MID of the user we are looking up.
 @return The security answer as a String.
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="recordLoginFailure"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ipAddr" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Record a login failure, which blacklists the ipAddress. Uses the database table like a hash table where
 the key is the user's IP address. If the user's IP address is not in the table, a row with "1" is
 added.
 
 @param ipAddr The IP address of the user as a String.
 @throws DBException]]>
      </doc>
    </method>
    <method name="recordResetPasswordFailure"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ipAddr" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Record a reset password failure, which blacklists the ipAddress. Uses the database table like a hash
 table where the key is the user's IP address. If the user's IP address is not in the table, a row with
 "1" is added.
 
 @param ipAddr The IP address of the user as a String.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getResetPasswordFailures" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ipAddr" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return the number of failures from resetting a password, given an IP address.
 
 @param ipAddr An IP address for the associated attempt as a String.
 @return An int representing the number of failures.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getLoginFailures" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ipAddr" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return the number of failures from login failures a password, given an IP address.
 
 @param ipAddr The IP address for this attempt as a String.
 @return An int representing the number of failures which have occured.
 @throws DBException]]>
      </doc>
    </method>
    <method name="resetLoginFailuresToZero"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ipAddr" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
    </method>
    <method name="checkUserExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Check that a user actually exists.
 
 @param mid
 @return
 @throws DBException]]>
      </doc>
    </method>
    <field name="LOGIN_TIMEOUT" type="long"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[AuthDAO is for anything that has to do with authentication. Most methods access the users table.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.AuthDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO -->
  <class name="CPTCodesDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="CPTCodesDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllCPTCodes" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all CPT codes.
 
 @return A java.util.List of ProcedureBeans for the CPT codes.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getImmunizationCPTCodes" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all CPT codes.
 
 @return A java.util.List of all Immunization-related CPT codes.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getCPTCode" return="edu.ncsu.csc.itrust.beans.ProcedureBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a particular procedure description for a code.
 
 @param code The string representation of the code.
 @return The textual description of the code.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addCPTCode" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="proc" type="edu.ncsu.csc.itrust.beans.ProcedureBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a new CPT code, returns that it was added successfully
 
 @param proc A ProcedureBean representing the new code information.
 @return A boolean for whether the operation was successful.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="updateCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="proc" type="edu.ncsu.csc.itrust.beans.ProcedureBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Change the procedure description for a particular CPT code
 
 @param proc A ProcedureBean representing the new code information.
 @return A boolean for whether the operation was successful.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing CPT codes.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 The CPT code set accurately describes medical, surgical, and diagnostic services 
 and is designed to communicate uniform information about medical services and procedures 
 among physicians, coders, patients, accreditation organizations, and payers for administrative, 
 financial, and analytical purposes.

 @see http://www.ama-assn.org/ama/pub/physician-resources/solutions-managing-your-practice/coding-billing-insurance/cpt/about-cpt.shtml
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.CPTCodesDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO -->
  <class name="DrugInteractionDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DrugInteractionDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getInteractions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DrugInteractionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="drugCode" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all drug interactions for the input drug name
 
 @return A java.util.List of DrugInteractionBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="reportInteraction" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstDrug" type="java.lang.String"/>
      <param name="secondDrug" type="java.lang.String"/>
      <param name="description" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a new drug interaction, returns whether or not the addition was successful. If the code already exists, an
 iTrustException is thrown.
 
 @param firstDrug  The name of the first drug in an interaction.
 @param secondDrug  The name of the second drug in an interaction.
 @param description  Explanation of the drug interaction.
 @return A boolean indicating success or failure.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="deleteInteraction" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="firstDrug" type="java.lang.String"/>
      <param name="secondDrug" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Remove an interaction from the database
 
 @param firstDrug  The name of the first patient
 @param secondDrug  The name of the second patient
 @return true if removed successfully, false if not in list]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing drug interactions.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @see http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.DrugInteractionDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO -->
  <class name="FakeEmailDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FakeEmailDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllEmails" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.Email&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return all emails that have been "sent" (inserted into the database)
 
 @return A java.util.List of Email objects representing fake e-mails.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getEmailsByPerson" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.Email&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="email" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return all emails that a person has sent
 
 @param email The "From" email address as a string.
 @return A java.util.List of fake emails.
 @throws DBException]]>
      </doc>
    </method>
    <method name="sendEmailRecord"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="email" type="edu.ncsu.csc.itrust.beans.Email"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA["Send" an email, which just inserts it into the database.
 
 @param email The Email object to insert.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getEmailWithBody" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.Email&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bodySubstring" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of emails that have the given string as a substring of the body
 @param string The string to search within the body.
 @return A java.util.List of fake emails.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.FakeEmailDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.FamilyDAO -->
  <class name="FamilyDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FamilyDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getParents" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return the information of the mother and father of this patient
 
 @param pid -
            this patient
 @return
 @throws DBException]]>
      </doc>
    </method>
    <method name="getSiblings" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of patients who share at least one parent (and that parent is not '0') with this patient
 
 @param pid -
            this patient
 @return A java.util.list of FamilyMemberBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getChildren" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.FamilyMemberBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of patients whose mother or father is this patient
 
 @param pid -
            this patient
 @return A java.util.List of FamilyMemberBeans.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for queries related to families.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.FamilyDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO -->
  <class name="HealthRecordsDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HealthRecordsDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllHealthRecords" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HealthRecord&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all health records for a particular patient
 
 @param mid The MID of the patient to look up.
 @return A java.util.List of HealthRecords.
 @throws DBException]]>
      </doc>
    </method>
    <method name="add" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="record" type="edu.ncsu.csc.itrust.beans.HealthRecord"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a health record for a particular patient
 
 @param record The HealthRecord object to insert.
 @return A boolean indicating whether the insert was successful.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for all health records where a whole history is kept.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.HealthRecordsDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO -->
  <class name="HospitalsDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HospitalsDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllHospitals" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all hospitals sorted alphabetically
 
 @return A java.util.List of HospitalBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getHospital" return="edu.ncsu.csc.itrust.beans.HospitalBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a particular hospital given its ID
 
 @param id The String ID of the hospital.
 @return A HospitalBean representing this hospital.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addHospital" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hosp" type="edu.ncsu.csc.itrust.beans.HospitalBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a hospital
 
 @param hosp The HospitalBean object to insert.
 @return A boolean indicating whether the insertion was successful.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="updateHospital" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hosp" type="edu.ncsu.csc.itrust.beans.HospitalBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates a particular hospital's description. Returns the number of rows affected (should be 1)
 
 @param hosp The HospitalBean to update.
 @return An int indicating the number of affected rows.
 @throws DBException]]>
      </doc>
    </method>
    <method name="assignHospital" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
      <param name="hospitalID" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Assign an HCP to a hospital. If they have already been assigned to that hospital, then an
 iTrustException is thrown.
 
 @param hcpID The HCP's MID to assign to the hospital.
 @param hospitalID The ID of the hospital to assign them to.
 @return A boolean indicating whether the assignment was a success.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="removeHospitalAssignment" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
      <param name="hospitalID" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Unassigns an HCP to a hospital. Returns whether or not any changes were made
 
 @param hcpID The MID of the HCP to remove.
 @param hospitalID The ID of the hospital being removed from.
 @return A boolean indicating success.
 @throws DBException]]>
      </doc>
    </method>
    <method name="removeAllHospitalAssignmentsFrom" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Removes all hospital assignments for a particular HCP. Returns the number of rows affected.
 
 @param hcpID The MID of the HCP.
 @return An int representing the number of hospital assignments removed.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing hospitals
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.HospitalsDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO -->
  <class name="ICDCodesDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ICDCodesDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllICDCodes" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all ICD9CM codes sorted by code
 
 @return java.util.List of DiagnosisBeans
 @throws DBException]]>
      </doc>
    </method>
    <method name="getICDCode" return="edu.ncsu.csc.itrust.beans.DiagnosisBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a particular description for a given code
 
 @param code The String representation of the code.
 @return A DiagnosisBean of the code.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addICDCode" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diag" type="edu.ncsu.csc.itrust.beans.DiagnosisBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds an ICD9CM code. Returns whether or not the change was made.
 
 @param diag The DiagnosisBean representing the changes.
 @return A boolean indicating success.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="updateCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="diag" type="edu.ncsu.csc.itrust.beans.DiagnosisBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Changes a the description of a particular code.
 
 @param diag A DiagnosisBean representing the changes.
 @return A boolean indicating the number of updated rows.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing all ICD codes.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 The International Statistical Classification of Diseases and Related Health Problems 
 (most commonly known by the abbreviation ICD) provides codes to classify diseases and a 
 wide variety of signs, symptoms, abnormal findings, complaints, social circumstances and 
 external causes of injury or disease. 
 
 @see http://www.cdc.gov/nchs/icd9.htm
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.ICDCodesDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO -->
  <class name="LabProcedureDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LabProcedureDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getLabProceduresForPatient" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Get a list of the lab procedures associated with a given patient.
 @param id The MID of the patient as a long.
 @return A java.util.List of LabProcedureBeans
 @throws DBException]]>
      </doc>
    </method>
    <method name="getLabProceduresForPatientForNextMonth" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets all the lab procedures for a given patient that occur within the next month.
 @param id The MID of the patient as a long.
 @return A java.util.List of LabProcedureBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getLabProcedure" return="edu.ncsu.csc.itrust.beans.LabProcedureBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets an individual lab procedure.
 @param id The ID of the lab procedure.
 @return A LabProcedureBean representing the procedure.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllLabProceduresDate" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets all procedures for Patient
 @param mid patient id
 @return A java.util.List of LabProcedureBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllLabProceduresForDocOV" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="ovid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[This gets all the procedures for a particular patient on a particular office visit
 @param mid The MID of the patient.
 @param ovid The Office Visit ID.
 @return A java.util.List of LabProcedureBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllLabProceduresForDocOV" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[This gets all the procedures for a particular patient on a particular office visit
 @param mid The MID of the patient.
 @param ovid The Office Visit ID.
 @return A java.util.List of LabProcedureBeans
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllLabProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets all lab procedures, period.
 @return A java.util.List of LabProcedureBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getLabProceduresForLHCPForNextMonth" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets the lab procedures for a given LHCP that occur within the next month.
 @param ovid The Office Visit ID conducted by the LHCP in question.
 @return A java.util.List of LabProcedureBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addLabProcedure" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="edu.ncsu.csc.itrust.beans.LabProcedureBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Inserts a lab procedure into the database.
 @param b The LabProcedureBean to be inserted.
 @return A long containing the ID of the newly inserted lab procedure bean.
 @throws DBException]]>
      </doc>
    </method>
    <method name="updateLabProcedure"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="edu.ncsu.csc.itrust.beans.LabProcedureBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates an existing lab procedure.
 @param b The LabProcedureBean representing the procedure to be updated.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllLabProceduresLOINC" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LabProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets all the lab procedures that correspond to a particular LOINC.
 @param id The LOINC in question.
 @return A java.util.List of LabProcedureBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="updateRights"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="edu.ncsu.csc.itrust.beans.LabProcedureBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates the rights of a user on a given lab procedure.
 @param b The LabProcedureBean in question.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A DAO for managing lab procedure codes. Database Access Object. All info coming into a DAO is already validated. 
 Just worry about DB stuff here. Note that all DAOs need to have a DAOFactory with which to access other 
 DAOs and to get connections. Also, every DAO must have a constructor with a DAOFactory as a parameter.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.LabProcedureDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.LOINCDAO -->
  <class name="LOINCDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LOINCDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="addLOINC"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hosp" type="edu.ncsu.csc.itrust.beans.LOINCbean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a LOINC
 
 @param hosp The LOINCbean representing the new code to be added.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LOINCbean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all LOINCs associated with LaboratoryProcedureCode
 
 @param visitID The code of the Laboratory Procedure Code as a String.
 @return A java.util.List of LOINCBeans matching the Laboratory Procedure Code.
 @throws DBException]]>
      </doc>
    </method>
    <method name="update" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ov" type="edu.ncsu.csc.itrust.beans.LOINCbean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates the information in LOINC.
 
 @param ov
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllLOINC" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.LOINCbean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all LOINCs as a list.
 
 @return A java.util.List of LOINCbeans.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 Logical Observation Identifiers Names and Codes (LOINC) is a database and universal
  standard for identifying medical laboratory observations. 
  
 @see http://loinc.org/
 @author Ben Smith]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.LOINCDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.MessageDAO -->
  <class name="MessageDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MessageDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getMessagesFor" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for a certain user MID.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getMessagesTimeAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for a certain user MID sorted by ascending time.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getMessagesNameAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for a certain user MID sorted by name ascending.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getMessagesNameDescending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for a certain user MID sorted by name descending.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getMessagesFrom" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages from a certain user MID.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getMessagesFromTimeAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for a certain user MID sorted by ascending time.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getMessagesFromNameAscending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for a certain user MID sorted by name ascending.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="getMessagesFromNameDescending" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Gets all the messages for a certain user MID sorted by name descending.
 @param mid The MID of the user to be looked up.
 @return A java.util.List of MessageBeans.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="addMessage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mBean" type="edu.ncsu.csc.itrust.beans.MessageBean"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Adds a message to the database.
 @param mBean A bean representing the message to be added.
 @throws SQLException]]>
      </doc>
    </method>
    <method name="updateRead"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mBean" type="edu.ncsu.csc.itrust.beans.MessageBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <doc>
    <![CDATA[Used for the logging mechanism.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.MessageDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO -->
  <class name="NDCodesDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NDCodesDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllNDCodes" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.MedicationBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all ND codes
 
 @return A java.util.List of MedicationBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getNDCode" return="edu.ncsu.csc.itrust.beans.MedicationBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a particular description for a given code.
 
 @param code The ND code to be looked up.
 @return A bean representing the Medication that was looked up.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addNDCode" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="med" type="edu.ncsu.csc.itrust.beans.MedicationBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a new ND code, returns whether or not the change was made. If the code already exists, an
 iTrustException is thrown.
 
 @param med The medication bean to be added.
 @return A boolean indicating success or failure.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="updateCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="med" type="edu.ncsu.csc.itrust.beans.MedicationBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates a particular code's description
 
 @param med A bean representing the particular medication to be updated.
 @return An int representing the number of updated rows.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing the ND Codes.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 The National Drug Code (NDC) is a universal product identifier used in the
 United States for drugs intended for human use.
 
 @see http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.NDCodesDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO -->
  <class name="OfficeVisitDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OfficeVisitDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="add" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ov" type="edu.ncsu.csc.itrust.beans.OfficeVisitBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds an visit and return its ID
 
 @param ov The OfficeVisitBean to be added.
 @return A long indicating the unique ID for the office visit.
 @throws DBException]]>
      </doc>
    </method>
    <method name="update"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ov" type="edu.ncsu.csc.itrust.beans.OfficeVisitBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates the information in a particular office visit.
 
 @param ov The Office Visit bean representing the changes.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getOfficeVisit" return="edu.ncsu.csc.itrust.beans.OfficeVisitBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a particular office visit given an ID
 
 @param visitID The unique ID of the office visit.
 @return An OfficeVisitBean with the specifics for that office visit.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all of the procedures associated with the given office visit
 
 @param visitID The unique ID of the office visit.
 @return A java.util.List of procedures.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all of the prescriptions associated with the given office visit
 
 @param visitID The ID of the office visit.
 @return A java.util.List of prescriptions.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getDiagnoses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all of the diagnoses associated with the given office visit
 
 @param visitID The unique ID of the office visit.
 @return A java.util.List of diagnoses.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addProcedureToOfficeVisit" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="cptCode" type="java.lang.String"/>
      <param name="visitID" type="long"/>
      <param name="hcpid" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds the given CPT codes to the given office visit
 
 @param cptCode
 @param visitID
 @return
 @throws DBException]]>
      </doc>
    </method>
    <method name="removeProcedureFromOfficeVisit"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovProcedureID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Removes the given procedure from its office visit
 
 @param ovProcedureID The unique ID of the office visit procedure.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addPrescription" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pres" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a prescription bean to the database.
 @param pres The prescription bean to be added.
 @return The unique ID of the newly added bean.
 @throws DBException]]>
      </doc>
    </method>
    <method name="editPrescription" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pres" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Edits an existing prescription bean.
 
 @param pres The newly updated prescription bean.
 @return A long indicating the ID of the newly updated prescription bean.
 @throws DBException]]>
      </doc>
    </method>
    <method name="removePrescription"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovMedicationID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Removes the given medication from its office visit
 
 @param ovMedicationID The unique ID of the medication to be removed.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addDiagnosisToOfficeVisit" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icd" type="double"/>
      <param name="visitID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds the given CPT codes to the given office visit
 @param icd A double representing the ICD code to be added.
 @param visitID The ID of the office visit we are adding the code to.
 @return A long for the new ICD code's ID.
 @throws DBException]]>
      </doc>
    </method>
    <method name="removeDiagnosisFromOfficeVisit"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovDiagnosisID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Removes a particular diagnosis from its office visit
 
 @param ovDiagnosisID The ID for the office visit diagnosis to be removed. 
 @throws DBException]]>
      </doc>
    </method>
    <method name="addLabProcedureToOfficeVisit" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="LOINCCode" type="java.lang.String"/>
      <param name="visitID" type="long"/>
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a LOINCCode to an office visit.
 
 @param LOINCCode A string of the code being added.
 @param visitID The ID of the office visit the code is being added to.
 @param pid The patient's MID associated with this transaction.
 @return The unique ID of the code that was added.
 @throws DBException]]>
      </doc>
    </method>
    <method name="removeLabProcedureFromOfficeVisit"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="labProcedureID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Removes a given lab procedure.
 
 @param labProcedureID The unique ID of the lab procedure.
 @throws DBException]]>
      </doc>
    </method>
    <method name="checkOfficeVisitExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovID" type="long"/>
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns whether or not an office visit actually exists
 
 @param ovID The ID of the office visit to be checked.
 @param pid The MID of the patient associated with this transaction.
 @return A boolean indicating its existence.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllOfficeVisits" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all office visits for a given patient
 
 @param pid The MID of the patient in question.
 @return A java.util.List of OfficeVisitBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllOfficeVisitsForLHCP" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all office visits for a given patient
 
 @param mid The MID of the LHCP you are looking up.
 @return A java.util.List of Office Visits.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getOfficeVisitsWithNoSurvey" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all office visits for a given patient
 
 @param pid The MID of the patient.
 @return A java.util.List of Office Visits.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPrescriptionReportsByDate" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionReportBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <param name="startDate" type="java.lang.String"/>
      <param name="endDate" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of information related to prescription reports given all of the office visits and the
 patient ID. The patient ID is necessary in case the office visit IDs are for different patients (the
 disambiguation is for security reasons).
 
 @param ovIDs A java.util.List of Longs for the office visits.
 @param patientID A long representing the MID of the patient in question.
 @return A java.util.List of prescription reports.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPrescriptionReports" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionReportBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ovIDs" type="java.util.List&lt;java.lang.Long&gt;"/>
      <param name="patientID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of information related to prescription reports given all of the office visits and the
 patient ID. The patient ID is necessary in case the office visit IDs are for different patients (the
 disambiguation is for security reasons).
 
 @param ovIDs A java.util.List of Longs for the office visits.
 @param patientID A long representing the MID of the patient in question.
 @return A java.util.List of prescription reports.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getOfficeVisitsFromHospital" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hospitalID" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all office visits at a given hospital
 @param hospitalID the id of the hospital
 @return a list of the OfficeVisitBeans that hold the office visits
 @throws DBException in the event of a database error]]>
      </doc>
    </method>
    <method name="getAllOfficeVisitsForDiagnosis" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OfficeVisitBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="icdcode" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets all office visits corresponding to a particular ICD diagnosis.
 
 @param icdcode A string represnting the ICD diagnosis to look up.
 @return A java.util.List of Office visits.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addReason" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="orb" type="edu.ncsu.csc.itrust.beans.OverrideReasonBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds an override reason bean to the database.
 @param orc The override reason bean to be added.
 @return The unique ID of the newly added bean.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for doing tasks related to office visits. Use this for linking diagnoses to office visits, and similar
 tasks.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.OfficeVisitDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.PatientDAO -->
  <class name="PatientDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PatientDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the name for the given MID
 
 @param mid The MID of the patient in question.
 @return A String representing the patient's first name and last name.
 @throws iTrustException
 @throws DBException]]>
      </doc>
    </method>
    <method name="getRole" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="role" type="java.lang.String"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the role of a particular patient - why is this in PatientDAO? It should be in AuthDAO
 
 @param mid The MID of the patient in question.
 @param role A String representing the role of the patient.
 @return A String representing the patient's role.
 @throws iTrustException
 @throws DBException]]>
      </doc>
    </method>
    <method name="addEmptyPatient" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds an empty patient to the table, returns the new MID
 
 @return The MID of the patient as a long.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPatient" return="edu.ncsu.csc.itrust.beans.PatientBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the patient's information for a given ID
 
 @param mid The MID of the patient to retrieve.
 @return A PatientBean representing the patient.
 @throws DBException]]>
      </doc>
    </method>
    <method name="editPatient"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PatientBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates a patient's information for the given MID
 
 @param p The patient bean representing the new information for the patient.
 @throws DBException]]>
      </doc>
    </method>
    <method name="checkPatientExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns whether or not the patient exists
 
 @param pid The MID of the patient in question.
 @return A boolean indicating whether the patient exists.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getDeclaredHCPs" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of HCPs who are declared by the given patient
 
 @param pid The MID of the patient in question.
 @return A java.util.List of Personnel Beans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="declareHCP" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <param name="hcpID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Declares an HCP for a particular patient
 
 @param pid The MID of the patient in question.
 @param hcpID The HCP's MID.
 @return A boolean as to whether the insertion was successful.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="undeclareHCP" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <param name="hcpID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Undeclare an HCP for a given patient
 
 @param pid The MID of the patient in question.
 @param hcpID The MID of the HCP in question.
 @return A boolean indicating whether the action was successful.
 @throws DBException]]>
      </doc>
    </method>
    <method name="checkDeclaredHCP" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <param name="hcpid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Check if a patient has declared the given HCP
 
 @param pid The MID of the patient in question as a long.
 @param hcpid The MID of the HCP in question as a long.
 @return
 @throws DBException]]>
      </doc>
    </method>
    <method name="getRepresented" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of patients that the given patient represents
 
 @param pid The MID of the patient in question.
 @return A java.util.List of PatientBeans
 @throws DBException]]>
      </doc>
    </method>
    <method name="getRepresenting" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of patients that the given patient is represented by
 
 @param pid The MID of the patient in question.
 @return A java.util.List of PatientBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="represents" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="representer" type="long"/>
      <param name="representee" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Check if the given representer represents the representee
 
 @param representer The MID of the representer in question.
 @param representee The MID of the representee in question.
 @return A boolean indicating whether represenation is in place.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addRepresentative" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="representer" type="long"/>
      <param name="representee" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Assign a representer to the representee
 
 @param representer The MID of the representer as a long.
 @param representee The MID of the representee as a long.
 @return A boolean as to whether the insertion was correct.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="removeRepresentative" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="representer" type="long"/>
      <param name="representee" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Unassign the representation
 
 @param representer The MID of the representer in question.
 @param representee The MID of the representee in question.
 @return A boolean indicating whether the unassignment was sucessful.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getDiagnoses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of all diagnoses for a given patient
 
 @param pid The MID of the patient in question.
 @return A java.util.List of Diagnoses.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of all procedures for a given patient
 
 @param pid The MID of the patient in question.
 @return A java.util.List of all the procedures.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getImmunizationProcedures" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of all immunization procedures for a given patient
 
 @param pid The MID of the patient in question.
 @return A java.util.List of the procedures.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of all prescriptions for a patient
 
 @param patientID The MID of the patient in question.
 @return A java.util.List of prescriptions.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getCurrentPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of prescriptions which are currently prescribed for a patient
 
 @param patientID The MID of the patient in question.
 @return A java.util.List of prescription beans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getExpiredPrescriptions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PrescriptionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of prescriptions which are expired prescription for a patient
 
 @param patientID The MID of the patient in question.
 @return A java.util.List of prescriptions.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllPatients" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Lists every patient in the database.
 
 @return A java.util.List of PatientBeans representing the patients.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getRenewalNeedsPatients" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of patients with a special-diagnosis-history who
 have the logged in HCP as a DHCP and whose medications are going to
 expire within seven days.
 
 @param hcpMID The MID of the logged in HCP
 @return A list of patients satisfying the conditions.
 @throws DBException]]>
      </doc>
    </method>
    <method name="searchForPatientsWithName" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="first" type="java.lang.String"/>
      <param name="last" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all patients with names "LIKE" (as in SQL) the passed in parameters.
 
 @param first The patient's first name.
 @param last The patient's last name.
 @return A java.util.List of PatientBeans.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing all static information related to a patient. For other information related to all aspects
 of patient care, see the other DAOs.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.PatientDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO -->
  <class name="PersonnelDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PersonnelDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the name for a given MID
 
 @param mid The MID of the personnel in question.
 @return A String representing the name of the personnel.
 @throws iTrustException
 @throws DBException]]>
      </doc>
    </method>
    <method name="addEmptyPersonnel" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="role" type="edu.ncsu.csc.itrust.enums.Role"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds an empty personnel, and returns the MID.
 
 @return A long indicating the new MID.
 @param role A {@link Role} enum indicating the personnel's specific role.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="getPersonnel" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Retrieves a PersonnelBean with all of the specific information for a given employee.
 
 @param mid The MID of the personnel in question.
 @return A PersonnelBean representing the employee.
 @throws DBException]]>
      </doc>
    </method>
    <method name="editPersonnel"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates the demographics for a personnel.
 
 @param p The personnel bean with the updated information.
 @throws DBException]]>
      </doc>
    </method>
    <method name="checkPersonnelExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Indicates whether a certain personnel is in the database.
 
 @param pid The MID of the personnel in question.
 @return A boolean indicating whether this personnel exists.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getHospitals" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all of the hospitals this LHCP is associated with.
 
 @param mid The MID of the personnel in question.
 @return A java.util.List of HospitalBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllPersonnel" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all personnel in the database.
 
 @return A java.util.List of personnel.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getUAPsForHCP" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of UAPs who work for this LHCP.
 
 @param hcpid The MID of the personnel in question.
 @return A java.util.List of UAPs.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPrescribingDoctor" return="edu.ncsu.csc.itrust.beans.PersonnelBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="prescription" type="edu.ncsu.csc.itrust.beans.PrescriptionBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Given a prescription that has been given, this method returns all the information for the
 doctor who authorized that prescription.
 
 @param prescription The PrescriptionBean describing the prescription in question.
 @return The PersonnelBean describing the doctor who authorized it.
 @throws DBException]]>
      </doc>
    </method>
    <method name="searchForPersonnelWithName" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="first" type="java.lang.String"/>
      <param name="last" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Matches all personnel who have names LIKE (as in SQL) the first and last names passed in.
 
 @param first The first name to be searched for.
 @param last The last name to be searched for.
 @return A java.util.List of personnel who match these names.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing information related to personnel: HCPs, UAPs, Admins
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.PersonnelDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO -->
  <class name="ProfilePhotoDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ProfilePhotoDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="store" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="photo" type="java.awt.image.BufferedImage"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Given an MID and an uploaded buffered image, store it in the database
 
 @param mid
 @param photo
 @return
 @throws DBException
 @throws IOException]]>
      </doc>
    </method>
    <method name="get" return="java.awt.image.BufferedImage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Return a profile photo for the given MID. Returns a default "No Photo Available" if
 
 @param mid
 @return
 @throws iTrustException
 @throws IOException]]>
      </doc>
    </method>
    <method name="removePhoto" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Given an MID, remove the associated image from the database
 
 @param mid
 @return
 @throws DBException
 @throws IOException]]>
      </doc>
    </method>
    <field name="DEFAULT_PROFILE_PHOTO" type="java.awt.image.BufferedImage"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.ProfilePhotoDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO -->
  <class name="ReasonCodesDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReasonCodesDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllORCodes" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.OverrideReasonBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of all ND codes
 
 @return A java.util.List of OverrideReasonBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getORCode" return="edu.ncsu.csc.itrust.beans.OverrideReasonBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a particular description for a given code.
 
 @param code The override reason code to be looked up.
 @return A bean representing the override reason that was looked up.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addORCode" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="orc" type="edu.ncsu.csc.itrust.beans.OverrideReasonBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Adds a new override reason code, returns whether or not the change was made. If the code already exists, an
 iTrustException is thrown.
 
 @param orc The overridereason bean to be added.
 @return A boolean indicating success or failure.
 @throws DBException
 @throws iTrustException]]>
      </doc>
    </method>
    <method name="updateCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="orc" type="edu.ncsu.csc.itrust.beans.OverrideReasonBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates a particular code's description
 
 @param orc A bean representing the particular override reason to be updated.
 @return An int representing the number of updated rows.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for managing the Reason Codes.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 The Override Reason Code (ORC) is a universal product identifier used in the
 United States for drugs intended for human use.
 
 @see http://www.fda.gov/Drugs/InformationOnDrugs/ucm142438.htm
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.ReasonCodesDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.ReferralDAO -->
  <class name="ReferralDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReferralDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getReferralsSentFrom" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReferralBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets a list of all referrals sent from an HCP
 @param mid The HCP's mid.
 @return The list of the referrals they sent.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getReferralsSentTo" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReferralBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets a list of all referrals sent to an HCP
 @param mid The HCP's mid.
 @return The list of the referrals sent to them.
 @throws DBException]]>
      </doc>
    </method>
    <method name="editReferral"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="r" type="edu.ncsu.csc.itrust.beans.ReferralBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Updates a given referral in the database.
 @param r The referral to update.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addReferral"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="r" type="edu.ncsu.csc.itrust.beans.ReferralBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a given referral to the database.
 @param r The referral to add.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used to update referrals, and fetch lists of referrals sent to and
 from HCPs.

 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.ReferralDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO -->
  <class name="RemoteMonitoringDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RemoteMonitoringDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getTelemedicineBean" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TelemedicineBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return remote monitoring list data for a given patient.
 
 @param patientMID Patient to retrieve data for.
 @return List of TelemedicineBeans
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPatientsData" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="loggedInMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns patient data for a given HCP
 
 @return
 @throws DBException]]>
      </doc>
    </method>
    <method name="getPatientDataByDate" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="lower" type="java.util.Date"/>
      <param name="upper" type="java.util.Date"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
    </method>
    <method name="getPatientDataByType" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="dataType" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Get the requested type of data for the specified patient.
 
 @param patientMID The MID of the patient
 @param dataType The type of telemedicine data to return
 @return A list of beans which all contain information of the requested type
 @throws DBException]]>
      </doc>
    </method>
    <method name="storePatientData"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="bean" type="edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean"/>
      <param name="reporterRole" type="java.lang.String"/>
      <param name="reporterMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
      <doc>
      <![CDATA[Store pedometer reading and height/weight data for a given patient in the RemoteMonitoringData table
 
 @param patientMID The MID of the patient
 @param height The height of the patient
 @param weight The weight of the patient
 @param pedometerReading The pedometer reading of the patient
 @param reporterRole  The role of the person that reported these monitoring stats
 @param reporterMID  The MID of the person that reported these monitoring stats
 @throws DBException]]>
      </doc>
    </method>
    <method name="validatePR"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="representativeMID" type="long"/>
      <param name="patientMID" type="long"/>
      <exception name="iTrustException" type="edu.ncsu.csc.itrust.exception.iTrustException"/>
    </method>
    <method name="getMonitoringHCPs" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Show the list of HCPs monitoring this patient
 
 @param patientMID The MID of the patient
 @return list of HCPs monitoring the provided patient]]>
      </doc>
    </method>
    <method name="addPatientToList" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="HCPMID" type="long"/>
      <param name="tBean" type="edu.ncsu.csc.itrust.beans.TelemedicineBean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Add a patient to the list of HCPs' monitoring lists of Patients
 
 @param patientMID The MID of the patient
 @param HCPMID The MID of the HCP
 @param tBean The TelemedicineBean indicating what telemedicine data the patient is allowed to enter.
 @return true if added successfully, false if already in list]]>
      </doc>
    </method>
    <method name="removePatientFromList" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientMID" type="long"/>
      <param name="HCPMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Remove a patient from the list of HCPs' monitoring lists of Patients
 
 @param patientMID The MID of the patient
 @param HCPMID The MID of the HCP
 @return true if removed successfully, false if not in list]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for the keeping track of remote monitoring data.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.RemoteMonitoringDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO -->
  <class name="ReportRequestDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReportRequestDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getReportRequest" return="edu.ncsu.csc.itrust.beans.ReportRequestBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a full bean describing a given report request.
 
 @param id The unique ID of the bean in the database.
 @return The bean describing this report request.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllReportRequestsForRequester" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReportRequestBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all report requests associated with a given requester.
 
 @param mid The MID of the personnel in question.
 @return A java.util.List of report requests.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllReportRequestsForPatient" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.ReportRequestBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all of the report requests associated with a specific patient.
 
 @param pid The MID of the patient in question.
 @return A java.util.List of report requests.
 @throws DBException]]>
      </doc>
    </method>
    <method name="addReportRequest" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="requesterMID" type="long"/>
      <param name="patientMID" type="long"/>
      <param name="date" type="java.util.Date"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Adds a request for a report.
 
 @param requesterMID The MID of the requester.
 @param patientMID The MID of the patient in question.
 @param date The date the request was made.
 @return A long of the unique ID of the report request.
 @throws DBException]]>
      </doc>
    </method>
    <method name="setViewed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ID" type="long"/>
      <param name="date" type="java.util.Date"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Sets the status of a report request to 'Viewed'
 
 @param ID The unique ID of the request in question.
 @param date The date the request was viewed.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for handling data related to report requests.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.ReportRequestDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.RiskDAO -->
  <class name="RiskDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RiskDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="hasFamilyHistory" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <param name="icdLower" type="double"/>
      <param name="icdUpper" type="double"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[This method is implemented using {@link FamilyDAO} for 2 reasons: (a) definitions of family members
 might change, so it's better to centralize that code and (2) to make this code a little bit "nicer"
 even though it executes one query per family member. If this method gets slow, then you will need to
 refactor. Otherwise, let's just keep it simple...
 
 @param patientID The MID of the patient in question.
 @param icdLower A double of the lower bound for the codes.
 @param icdUpper A double of the upper bound for the codes.
 @return A boolean indicating whether a family member had a match in this range.
 @throws DBException]]>
      </doc>
    </method>
    <method name="hadChildhoodInfection" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <param name="icdCodes" type="double[]"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns whether or not a patient had a childhood infection for the exact, given ICD codes.
 
 @param patientID The MID of the patient in question.
 @param icdCodes A parameter list of the ICD codes to match.
 @return A boolean indicating whether this patient had all the listed ICD codes.
 @throws DBException]]>
      </doc>
    </method>
    <method name="hasSmoked" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns if the patient has ever smoked in their life
 
 @param patientID The MID of the patient in question.
 @return A boolean indicating whether the patient smoked.
 @throws DBException]]>
      </doc>
    </method>
    <method name="hadPriorDiagnoses" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <param name="lowerICDCode" type="double"/>
      <param name="upperICDCode" type="double"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns if a patient has ever been diagnosed with the given ICD code, in the range [lower,upper)
 
 @param patientID The MID of the patient in question.
 @param lowerICDCode A double of the lower ICD code.
 @param upperICDCode A double of the upper ICD code.
 @return A boolean indicating whether there was a match in the given range.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for finding risk factors for a given patient.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.RiskDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.SurveyDAO -->
  <class name="SurveyDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SurveyDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="addCompletedSurvey"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="surveyBean" type="edu.ncsu.csc.itrust.beans.SurveyBean"/>
      <param name="date" type="java.util.Date"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Insert survey data into database.
 @param surveyBean The Bean representing the user's responses which will be inserted.
 @param date The date the survey was completed.]]>
      </doc>
    </method>
    <method name="getSurveyData" return="edu.ncsu.csc.itrust.beans.SurveyBean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Gets survey data from the database by the office visit id. Creates an instance of an
 SurveyBean with data and returns it.
 
 @param id The unique ID of the survey in question.
 @return A bean containing the SurveyBean.
 @throws DBException]]>
      </doc>
    </method>
    <method name="isSurveyCompleted" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Has this survey been completed?
 
 @param visitID The unique ID of the office visit we are wondering about.
 @return boolean indicating whether this survey is completed.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A DAO for handling all Survey data.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.SurveyDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO -->
  <class name="SurveyResultDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SurveyResultDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getSurveyResultsForZip" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.SurveyResultBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="zip" type="java.lang.String"/>
      <param name="specialty" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all the survey results in the database that correspond to a particular zip code.
 
 @param zip The zipcode we are interested in as a String.
 @param specialty The specialty we are interested in as a String.
 @return A java.util.List of SurveyResultBeans.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getSurveyResultsForHospital" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.SurveyResultBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hospitalID" type="java.lang.String"/>
      <param name="specialty" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns all the survey data associated with a given hospital and a certain specialty.
 
 @param hospitalID The unique ID of the iTrust hospital we are querying about.
 @param specialty A string representing the specialty we are interested in.
 @return A java.util.List of SurveyResultBeans.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A DAO for handling all Survey results.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.SurveyResultDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.TransactionDAO -->
  <class name="TransactionDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TransactionDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getAllTransactions" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the whole transaction log
 
 @return
 @throws DBException]]>
      </doc>
    </method>
    <method name="logTransaction"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="edu.ncsu.csc.itrust.enums.TransactionType"/>
      <param name="loggedInMID" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Log a transaction, just giving it the person who is logged in and the type
 
 @param type The {@link TransactionType} enum representing the type this transaction is.
 @param loggedInMID The MID of the user who is logged in.
 @throws DBException]]>
      </doc>
    </method>
    <method name="logTransaction"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="edu.ncsu.csc.itrust.enums.TransactionType"/>
      <param name="loggedInMID" type="long"/>
      <param name="secondaryMID" type="long"/>
      <param name="addedInfo" type="java.lang.String"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Log a transaction, with all of the info. The meaning of secondaryMID and addedInfo changes depending on
 the transaction type.
 
 @param type The {@link TransactionType} enum representing the type this transaction is.
 @param loggedInMID The MID of the user who is logged in.
 @param secondaryMID Typically, the MID of the user who is being acted upon.
 @param addedInfo A note about a subtransaction, or specifics of this transaction (for posterity).
 @throws DBException]]>
      </doc>
    </method>
    <method name="getAllRecordAccesses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <param name="getByRole" type="boolean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of all transactions in which an HCP accessed the given patient's record
 
 @param patientID The MID of the patient in question.
 @return A java.util.List of transactions.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getTransactionsAffecting" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mid" type="long"/>
      <param name="start" type="java.util.Date"/>
      <param name="range" type="int"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[The Most Thorough Fetch 
 @param mid MID of the logged in user
 @param start Index to start pulling entries from
 @param range Number of entries to retrieve
 @return List of <range> TransactionBeans affecting the user starting from the <start>th entry
 @throws DBException]]>
      </doc>
    </method>
    <method name="getRecordAccesses" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.TransactionBean&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="patientID" type="long"/>
      <param name="lower" type="java.util.Date"/>
      <param name="upper" type="java.util.Date"/>
      <param name="getByRole" type="boolean"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Return a list of all transactions in which an HCP accessed the given patient's record, within the dates
 
 @param patientID The MID of the patient in question.
 @param lower The starting date as a java.util.Date
 @param upper The ending date as a java.util.Date
 @return A java.util.List of transactions.
 @throws DBException]]>
      </doc>
    </method>
    <method name="getOperationalProfile" return="edu.ncsu.csc.itrust.beans.OperationalProfile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns the operation profile
 
 @return The OperationalProfile as a bean.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for the logging mechanism.
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.TransactionDAO -->
  <!-- start class edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO -->
  <class name="VisitRemindersDAO" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="VisitRemindersDAO" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param factory The {@link DAOFactory} associated with this DAO, which is used for obtaining SQL connections, etc.]]>
      </doc>
    </constructor>
    <method name="getPatients" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of patients associated with a given HCP.
 
 @param hcpid The MID of the HCP in question.
 @return A java.util.List of Visit Reminder Forms.]]>
      </doc>
    </method>
    <method name="getDiagnosedVisitNeeders" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of patients who need a visit for this HCP. This means:
 
 Alive patient, no office visit for > 1 yr, diagnosed: - Diabetes: 250.xx - Asthma: 493.xx -
 Circulatory-System Disease: [ 390.00 , 459.99 ]
 
 @param hcpid The MID of the HCP in question.
 @return A java.util.List of visit reminders.]]>
      </doc>
    </method>
    <method name="getFluShotDelinquents" return="java.util.List&lt;edu.ncsu.csc.itrust.beans.forms.VisitReminderReturnForm&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hcpid" type="long"/>
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <doc>
      <![CDATA[Returns a list of old people who need a flu shot
 
 CURRENT SPEC: Alive patient, over 50 years old, no flu shot - 90656, 90658, 90660 a) during the months
 09 - 12 of current calendar year if in 09 - 12 b) during the months 09 - 12 of last calendar year if
 not in 09 - 12
 
 Determines current date and calls one of two private methods these methods return different sets of
 people - a: people who haven't had a flu shot yet this year and need one - b: people who missed last
 year's flu shot and need a check-up
 
 @return A java.util.List of Visit Reminder Forms.
 @param hcpid The MID of the HCP in question.
 @param patientBirthday The birthday of the patient in question.
 @throws DBException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used for queries related to patient reminders
 
 DAO stands for Database Access Object. All DAOs are intended to be reflections of the database, that is,
 one DAO per table in the database (most of the time). For more complex sets of queries, extra DAOs are
 added. DAOs can assume that all data has been validated and is correct.
 
 DAOs should never have setters or any other parameter to the constructor than a factory. All DAOs should be
 accessed by DAOFactory (@see {@link DAOFactory}) and every DAO should have a factory - for obtaining JDBC
 connections and/or accessing other DAOs.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.dao.mysql.VisitRemindersDAO -->
</package>
<package name="edu.ncsu.csc.itrust.enums">
  <!-- start class edu.ncsu.csc.itrust.enums.BloodType -->
  <class name="BloodType" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.enums.BloodType&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.enums.BloodType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.enums.BloodType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="parse" return="edu.ncsu.csc.itrust.enums.BloodType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bloodTypeStr" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[All possible blood types
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.enums.BloodType -->
  <!-- start class edu.ncsu.csc.itrust.enums.Ethnicity -->
  <class name="Ethnicity" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.enums.Ethnicity&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.enums.Ethnicity[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.enums.Ethnicity"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="parse" return="edu.ncsu.csc.itrust.enums.Ethnicity"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[All possible ethnicities represented in iTrust.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.enums.Ethnicity -->
  <!-- start class edu.ncsu.csc.itrust.enums.Gender -->
  <class name="Gender" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.enums.Gender&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.enums.Gender[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.enums.Gender"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="parse" return="edu.ncsu.csc.itrust.enums.Gender"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="input" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Male or Female.  Not specified is provided as well, for incomplete forms or patient's discretion.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.enums.Gender -->
  <!-- start class edu.ncsu.csc.itrust.enums.PrescriptionAlerts -->
  <class name="PrescriptionAlerts" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.enums.PrescriptionAlerts&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.enums.PrescriptionAlerts[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.enums.PrescriptionAlerts"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNDCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isAlert" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Every prescription that should be alerted for emergency reports - in the future, this should be abstracted
 out to a database table so it can be changed at runtime.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.enums.PrescriptionAlerts -->
  <!-- start class edu.ncsu.csc.itrust.enums.Role -->
  <class name="Role" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.enums.Role&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.enums.Role[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.enums.Role"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getDBTable" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUserRolesString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="parse" return="edu.ncsu.csc.itrust.enums.Role"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="str" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[The iTrust user roles: Patient, ER, HCP, UAP, PHA, Administrator and Tester.
 Consult the requirements for the contextual meanings of these individual choices.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.enums.Role -->
  <!-- start class edu.ncsu.csc.itrust.enums.State -->
  <class name="State" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.enums.State&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.enums.State[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.enums.State"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAbbrev" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="parse" return="edu.ncsu.csc.itrust.enums.State"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="state" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[All of our wonderful states.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.enums.State -->
  <!-- start class edu.ncsu.csc.itrust.enums.TransactionType -->
  <class name="TransactionType" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.enums.TransactionType&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.enums.TransactionType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.enums.TransactionType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getActionPhrase" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isPatientViewable" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="parse" return="edu.ncsu.csc.itrust.enums.TransactionType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="int"/>
    </method>
    <field name="patientViewableStr" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[This string is used in the SQL statement associated with pulling events for
 display in a patient's Access Log]]>
      </doc>
    </field>
    <doc>
    <![CDATA[All of the possible transaction types, in no particular order, used in producing the operational profile.
 TransactionCode -- identification code
 Description -- basic description of the event
 ActionPhrase -- a patient-centered English sentence describing the action (used in activity feeds)
 PatientViewable -- boolean for if the action will be displayed in the patient activity feed]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.enums.TransactionType -->
</package>
<package name="edu.ncsu.csc.itrust.exception">
  <!-- start class edu.ncsu.csc.itrust.exception.DBException -->
  <class name="DBException" extends="edu.ncsu.csc.itrust.exception.iTrustException"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DBException" type="java.sql.SQLException"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getSQLException" return="java.sql.SQLException"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return The SQL Exception that was responsible for this error.]]>
      </doc>
    </method>
    <method name="getExtendedMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[The reasoning behind this wrapper exception is security. When an SQL Exception gets thrown all the way back
 to the JSP, we begin to reveal details about our database (even knowing that it's MySQL is bad!) So, we
 make a wrapper exception with a vague description, but we also keep track of the SQL Exception for
 debugging and testing purposes.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.exception.DBException -->
  <!-- start class edu.ncsu.csc.itrust.exception.ErrorList -->
  <class name="ErrorList" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Iterable&lt;java.lang.String&gt;"/>
    <constructor name="ErrorList"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="addIfNotNull"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="errorMessage" type="java.lang.String"/>
      <doc>
      <![CDATA[Adds a message to the list if it's not a Java null or empty string.
 
 @param errorMessage]]>
      </doc>
    </method>
    <method name="getMessageList" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the list of error messages
 
 @return]]>
      </doc>
    </method>
    <method name="hasErrors" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns true if the list has any errors
 
 @return]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="iterator" return="java.util.Iterator&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Used by the validators to create a list of error messages.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.exception.ErrorList -->
  <!-- start class edu.ncsu.csc.itrust.exception.FormValidationException -->
  <class name="FormValidationException" extends="java.lang.Exception"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FormValidationException" type="java.lang.String[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor with error messages passed as a list of parameters to the method.
 @param errorMessages The list of error messages to be returned in the special form validation box.]]>
      </doc>
    </constructor>
    <constructor name="FormValidationException" type="edu.ncsu.csc.itrust.exception.ErrorList"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor with error messages as a special ErrorList data type.
 @param errorList An ErrorList object which contains the list of error messages.]]>
      </doc>
    </constructor>
    <method name="getErrorList" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the error list as a java.util.List of Strings.
 @return The error list]]>
      </doc>
    </method>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The error message will be displayed at the top of the iTrust page as in other iTrust Exceptions.]]>
      </doc>
    </method>
    <method name="printHTML"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="out" type="JspWriter"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[The special formatting for error messages is then kept in one place.
 @param out The output writer (in this case a JSPWriter) where the formatted list will go.
 @throws IOException If the writer is incorrect.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This exception is used specifically for when an action involves the correct
 and proper submission of a web form.  Form Validation is handled by a series of
 other classes, but when form validation is incorrect or incomplete, this exception
 is thrown.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.exception.FormValidationException -->
  <!-- start class edu.ncsu.csc.itrust.exception.iTrustException -->
  <class name="iTrustException" extends="java.lang.Exception"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="iTrustException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The typical constructor.
 @param message A message to be displayed to the screen.]]>
      </doc>
    </constructor>
    <method name="getMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[For messages which are displayed to the user. Usually, this is a very general message for security
 reasons.]]>
      </doc>
    </method>
    <method name="getExtendedMessage" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[For exceptions which show a lot of technical detail, usually delegated to a subclass
 
 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A specialized exception class for displaying iTrust error messages.
 This exception is handled by the default iTrust exception handler.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.exception.iTrustException -->
  <!-- start class edu.ncsu.csc.itrust.exception.NoHealthRecordsException -->
  <class name="NoHealthRecordsException" extends="edu.ncsu.csc.itrust.exception.iTrustException"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NoHealthRecordsException"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor, which just passes a pre-specified message to an iTrustException.]]>
      </doc>
    </constructor>
    <field name="MESSAGE" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[This error message is thrown when checking for health risk indicators and the
 patient has had no health records entered.  It is a separate case than an iTrustException
 because the error handling is slightly different.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.exception.NoHealthRecordsException -->
</package>
<package name="edu.ncsu.csc.itrust.risk">
  <!-- start class edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator -->
  <class name="ChronicDiseaseMediator" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ChronicDiseaseMediator" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
      <doc>
      <![CDATA[Given a factory and patient ID, and sets up a list of all risk checkers
 
 @param factory The DAOFactory to be used in creating the necessary DAOs to perform the checks.
 @param pid The MID of the patient in question.
 @throws DBException
 @throws NoHealthRecordsException]]>
      </doc>
    </constructor>
    <method name="getDiseaseAtRisk" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.RiskChecker&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A list of diseases that this patient is at risk for]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Figures out which risk checker strategy to use
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.ChronicDiseaseMediator -->
  <!-- start class edu.ncsu.csc.itrust.risk.HeartDiseaseRisks -->
  <class name="HeartDiseaseRisks" extends="edu.ncsu.csc.itrust.risk.RiskChecker"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HeartDiseaseRisks" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
    </constructor>
    <method name="qualifiesForDisease" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDiseaseRiskFactors" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks to see if the given patient is at risk for Heart Disease
 For details on what each method does, see {@link RiskChecker}
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.HeartDiseaseRisks -->
  <!-- start class edu.ncsu.csc.itrust.risk.RiskChecker -->
  <class name="RiskChecker" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RiskChecker" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return The name of the disease being checked.]]>
      </doc>
    </method>
    <method name="getDiseaseRiskFactors" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A java.util.List of the risk factors increasing this patients disease risk.]]>
      </doc>
    </method>
    <method name="qualifiesForDisease" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A boolean indicating whether the patient is at increased risk.]]>
      </doc>
    </method>
    <method name="isAtRisk" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[This method exists purely for performance - just stop once you hit the threshold. <br />
 <br />
 Also, the risk factors should be cached in the RiskFactor implementors - in getPatientRiskFactors there
 should be no double-querying
 
 @return isAtRisk]]>
      </doc>
    </method>
    <method name="getPatientRiskFactors" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A java.util.List of patient risk factors associated with this disease.]]>
      </doc>
    </method>
    <field name="patient" type="edu.ncsu.csc.itrust.beans.PatientBean"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="currentHealthRecord" type="edu.ncsu.csc.itrust.beans.HealthRecord"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="factory" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[An abstract class which has a number of utlity methods for checking risks.
 
 When extending this class, use the methods to fill in all of the necessary information. Then use isAtRisk
 and getPatientRiskFactors to get the actual risks. See the known subclasses for an example
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.RiskChecker -->
  <!-- start class edu.ncsu.csc.itrust.risk.Type1DiabetesRisks -->
  <class name="Type1DiabetesRisks" extends="edu.ncsu.csc.itrust.risk.RiskChecker"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Type1DiabetesRisks" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
    </constructor>
    <method name="qualifiesForDisease" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDiseaseRiskFactors" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks to see if the given patient is at risk for Type 1 Diabetes.
 For details on what each method does, see {@link RiskChecker}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.Type1DiabetesRisks -->
  <!-- start class edu.ncsu.csc.itrust.risk.Type2DiabetesRisks -->
  <class name="Type2DiabetesRisks" extends="edu.ncsu.csc.itrust.risk.RiskChecker"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Type2DiabetesRisks" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="DBException" type="edu.ncsu.csc.itrust.exception.DBException"/>
      <exception name="NoHealthRecordsException" type="edu.ncsu.csc.itrust.exception.NoHealthRecordsException"/>
    </constructor>
    <method name="qualifiesForDisease" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDiseaseRiskFactors" return="java.util.List&lt;edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks to see if the given patient is at risk for Type II Diabetes.
 For details on what each method does, see {@link RiskChecker}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.Type2DiabetesRisks -->
</package>
<package name="edu.ncsu.csc.itrust.risk.factors">
  <!-- start class edu.ncsu.csc.itrust.risk.factors.AgeFactor -->
  <class name="AgeFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AgeFactor" type="edu.ncsu.csc.itrust.beans.PatientBean, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[The risk factor associated with checking if a person is over a particular age
 See {@link PatientRiskFactor} for details on what each method typically does.
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.AgeFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor -->
  <class name="ChildhoodInfectionFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ChildhoodInfectionFactor" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, double[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks if the patient had the given diagnoses during childhood.
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.ChildhoodInfectionFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.CholesterolFactor -->
  <class name="CholesterolFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="CholesterolFactor" type="edu.ncsu.csc.itrust.beans.HealthRecord"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks if cholesterol is over a given threshold for a given patient
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.CholesterolFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.EthnicityFactor -->
  <class name="EthnicityFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EthnicityFactor" type="edu.ncsu.csc.itrust.beans.PatientBean, edu.ncsu.csc.itrust.enums.Ethnicity[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks if the ethnicity of a patient matches the one at risk
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.EthnicityFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor -->
  <class name="FamilyHistoryFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FamilyHistoryFactor" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, double, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks if a patient has a family history of a given diagnosis range. Delegates straight to the DAO.
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.FamilyHistoryFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.GenderFactor -->
  <class name="GenderFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="GenderFactor" type="edu.ncsu.csc.itrust.beans.PatientBean, edu.ncsu.csc.itrust.enums.Gender"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks if the patient's gender matches the given at-risk one.
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.GenderFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.HypertensionFactor -->
  <class name="HypertensionFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HypertensionFactor" type="edu.ncsu.csc.itrust.beans.HealthRecord"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks if the patient's blood pressure is above a given threshold.
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.HypertensionFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor -->
  <class name="PatientRiskFactor" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PatientRiskFactor"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A textual description of what the patient's status is that's causing the risk.]]>
      </doc>
    </method>
    <method name="hasFactor" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A boolean indicating whether the patient has the increased risk.]]>
      </doc>
    </method>
    <method name="hasRiskFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return A boolean indicating whether the patient has the increased risk.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Abstract class for risk factors, the hasRiskFactor delegates to the protected version. Caches the result in
 case it gets checked more than once.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor -->
  <class name="PriorDiagnosisFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PriorDiagnosisFactor" type="edu.ncsu.csc.itrust.dao.DAOFactory, long, double, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks for prior diagnoses by delegatin to the DAO
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.PriorDiagnosisFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.SmokingFactor -->
  <class name="SmokingFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SmokingFactor" type="edu.ncsu.csc.itrust.dao.DAOFactory, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Risk factor delegates to the DAO to see if a patient has ever smoked in their life
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.SmokingFactor -->
  <!-- start class edu.ncsu.csc.itrust.risk.factors.WeightFactor -->
  <class name="WeightFactor" extends="edu.ncsu.csc.itrust.risk.factors.PatientRiskFactor"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="WeightFactor" type="edu.ncsu.csc.itrust.beans.HealthRecord, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hasFactor" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Checks the patient's body mass index over the given threshold
 See {@link PatientRiskFactor} for details on what each method typically does.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.risk.factors.WeightFactor -->
</package>
<package name="edu.ncsu.csc.itrust.server">
  <!-- start class edu.ncsu.csc.itrust.server.ProfilePhotoServlet -->
  <class name="ProfilePhotoServlet" extends="HttpServlet"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ProfilePhotoServlet"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="doGet"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="req" type="HttpServletRequest"/>
      <param name="resp" type="HttpServletResponse"/>
      <exception name="ServletException" type="ServletException"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="setDaoFactory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="daoFactory" type="edu.ncsu.csc.itrust.dao.DAOFactory"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.server.ProfilePhotoServlet -->
  <!-- start class edu.ncsu.csc.itrust.server.SessionTimeoutListener -->
  <class name="SessionTimeoutListener" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SessionTimeoutListener"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <constructor name="SessionTimeoutListener" type="edu.ncsu.csc.itrust.dao.DAOFactory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The specialized constructor, which takes a particular DAOFactory to be used when checking for the pre-specified
 timeout limit.
 @param factory The DAOFactory to be used.]]>
      </doc>
    </constructor>
    <method name="sessionCreated"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="HttpSessionEvent"/>
      <doc>
      <![CDATA[Called when the HttpSession is created, this method pulls the pre-specified limit from the
 database and sets it as a property of the HttpSession.
 @param arg0 The HttpSessionEven which just occurred.]]>
      </doc>
    </method>
    <method name="sessionDestroyed"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="arg0" type="HttpSessionEvent"/>
      <doc>
      <![CDATA[Must be declared for compliance with the interface. Not implemented.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A listener which will time the user out after a pre-specified time limit.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.server.SessionTimeoutListener -->
</package>
<package name="edu.ncsu.csc.itrust.tags">
  <!-- start class edu.ncsu.csc.itrust.tags.ICD9CMLink -->
  <class name="ICD9CMLink" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ICD9CMLink"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="doStartTag" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JspException" type="JspException"/>
    </method>
    <method name="doEndTag" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JspException" type="JspException"/>
    </method>
    <method name="release"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPageContext"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageContext" type="PageContext"/>
    </method>
    <method name="setParent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parent" type="Tag"/>
    </method>
    <method name="getParent" return="Tag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getCode" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="java.lang.String"/>
    </method>
    <method name="setCode"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="code" type="double"/>
    </method>
    <doc>
    <![CDATA[JSP tag used as a utility to link to the actual ICD9CM site
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.tags.ICD9CMLink -->
  <!-- start class edu.ncsu.csc.itrust.tags.PatientNavigation -->
  <class name="PatientNavigation" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PatientNavigation"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="doStartTag" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JspException" type="JspException"/>
    </method>
    <method name="doEndTag" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JspException" type="JspException"/>
    </method>
    <method name="release"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPageContext"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageContext" type="PageContext"/>
    </method>
    <method name="setParent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parent" type="Tag"/>
    </method>
    <method name="getParent" return="Tag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getThisTitle" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setThisTitle"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="thisPage" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[JSP tag that is used as the patient navigation bar at the bottom of the screen.
 
 To add a new page, add to the two arrays, and make sure that the page accepts PID
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.tags.PatientNavigation -->
  <!-- start class edu.ncsu.csc.itrust.tags.StateSelect -->
  <class name="StateSelect" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="StateSelect"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="doStartTag" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JspException" type="JspException"/>
    </method>
    <method name="doEndTag" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="JspException" type="JspException"/>
    </method>
    <method name="release"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setPageContext"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pageContext" type="PageContext"/>
    </method>
    <method name="setParent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parent" type="Tag"/>
    </method>
    <method name="getParent" return="Tag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setValue"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="value" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[JSP tag that adds an HTML select for states, from the enum.
 
 @see {@link State}
 
 Also selects the current state
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.tags.StateSelect -->
</package>
<package name="edu.ncsu.csc.itrust.validate">
  <!-- start class edu.ncsu.csc.itrust.validate.AddPatientValidator -->
  <class name="AddPatientValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddPatientValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PatientBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The validator used by {@link AddPatientAction}. Only checks first name, last name, and email
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.AddPatientValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.AddPersonnelValidator -->
  <class name="AddPersonnelValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AddPersonnelValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The validator used by {@link AddPatientAction}. Only checks first name, last name, and email
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.AddPersonnelValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.AdverseEventValidator -->
  <class name="AdverseEventValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.AdverseEventBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AdverseEventValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="edu.ncsu.csc.itrust.beans.AdverseEventBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param d A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates an adverse event bean, from {@link AdverseEventAction}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.AdverseEventValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.AllergyBeanValidator -->
  <class name="AllergyBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.AllergyBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AllergyBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="m" type="edu.ncsu.csc.itrust.beans.AllergyBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validator used to validate adding a new allergy in {@link EditOfficeVisitAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.AllergyBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.ApptBeanValidator -->
  <class name="ApptBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.ApptBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ApptBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bean" type="edu.ncsu.csc.itrust.beans.ApptBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.ApptBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator -->
  <class name="ApptTypeBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.ApptTypeBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ApptTypeBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="a" type="edu.ncsu.csc.itrust.beans.ApptTypeBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.ApptTypeBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.BeanValidator -->
  <class name="BeanValidator" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="BeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bean" type="T"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
    <method name="checkFormat" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="value" type="java.lang.String"/>
      <param name="format" type="edu.ncsu.csc.itrust.validate.ValidationFormat"/>
      <param name="isNullable" type="boolean"/>
      <doc>
      <![CDATA[Check the format against the given enum. isNullable will check if the string is empty or a Java null.
 Otherwise, an error message will be returned. Use this in conjunction with {@link ErrorList}.
 
 @param name
 @param value
 @param format
 @param isNullable
 @return]]>
      </doc>
    </method>
    <method name="checkFormat" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="longValue" type="java.lang.Long"/>
      <param name="format" type="edu.ncsu.csc.itrust.validate.ValidationFormat"/>
      <param name="isNullable" type="boolean"/>
      <doc>
      <![CDATA[Check a long value against a particular format. isNullable will check if it is empty or a Java null.
 Otherwise, an error message will be returned. Use this in conjunction with {@link ErrorList}.
 
 @param name
 @param longValue
 @param format
 @param isNullable
 @return]]>
      </doc>
    </method>
    <method name="checkFormat" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="doubleValue" type="java.lang.Double"/>
      <param name="format" type="edu.ncsu.csc.itrust.validate.ValidationFormat"/>
      <param name="isNullable" type="boolean"/>
      <doc>
      <![CDATA[Check the format against the given enum. isNullable will check if it is a Java null. Otherwise, an
 error message will be returned. Use this in conjunction with {@link ErrorList}.
 
 @param name
 @param doubleValue
 @param format
 @param isNullable
 @return]]>
      </doc>
    </method>
    <method name="checkGender" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="gen" type="edu.ncsu.csc.itrust.enums.Gender"/>
      <param name="format" type="edu.ncsu.csc.itrust.validate.ValidationFormat"/>
      <param name="isNullable" type="boolean"/>
      <doc>
      <![CDATA[Check against the proper gender
 
 @param name
 @param gen
 @param format
 @param isNullable
 @return]]>
      </doc>
    </method>
    <method name="checkInt" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="value" type="java.lang.String"/>
      <param name="lower" type="int"/>
      <param name="upper" type="int"/>
      <param name="isNullable" type="boolean"/>
      <doc>
      <![CDATA[The that an integer is the proper format, and is in the correct range
 
 @param name
 @param value
 @param lower
 @param upper
 @param isNullable
 @return]]>
      </doc>
    </method>
    <method name="checkDouble" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="value" type="java.lang.String"/>
      <param name="lower" type="double"/>
      <param name="upper" type="double"/>
      <doc>
      <![CDATA[Check that a double is in the proper format and is in the correct range
 
 @param name
 @param value
 @param lower
 @param upper
 @return]]>
      </doc>
    </method>
    <method name="checkBoolean" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="value" type="java.lang.String"/>
      <doc>
      <![CDATA[Check that the value fits the "true" or "false"
 
 @param name
 @param value
 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Abstract class used by all validators that provides utility methods for checking formatting of a particular
 field. Specify the Bean to be validated
 
 @author Andy
 
 @param <T>
            The bean type to be validated]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.BeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator -->
  <class name="DiagnosisBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.DiagnosisBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DiagnosisBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="edu.ncsu.csc.itrust.beans.DiagnosisBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates an ICD9CM code
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.DiagnosisBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.DrugInteractionValidator -->
  <class name="DrugInteractionValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.DrugInteractionBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DrugInteractionValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="edu.ncsu.csc.itrust.beans.DrugInteractionBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param d A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates a drug interaction bean, from {@link DrugInteractionAction}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.DrugInteractionValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator -->
  <class name="EditOfficeVisitValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EditOfficeVisitValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <constructor name="EditOfficeVisitValidator" type="boolean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="form" type="edu.ncsu.csc.itrust.beans.forms.EditOfficeVisitForm"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used to validate updating an office visit, by {@link EditOfficeVisitAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.EditOfficeVisitValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.EMailValidator -->
  <class name="EMailValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EMailValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="m" type="edu.ncsu.csc.itrust.beans.MessageBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param m A bean of the type to be validated.]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.EMailValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.HealthRecordFormValidator -->
  <class name="HealthRecordFormValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.forms.HealthRecordForm&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HealthRecordFormValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bean" type="edu.ncsu.csc.itrust.beans.forms.HealthRecordForm"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validator used in adding health information on Basic Health History, {@link EditHealthHistoryAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.HealthRecordFormValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.HospitalBeanValidator -->
  <class name="HospitalBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.HospitalBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HospitalBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="h" type="edu.ncsu.csc.itrust.beans.HospitalBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates the input for hospital beans, {@link UpdateHospitalListAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.HospitalBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.LabProcedureValidator -->
  <class name="LabProcedureValidator" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LabProcedureValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="edu.ncsu.csc.itrust.beans.LabProcedureBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <method name="checkFormat" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="value" type="java.lang.String"/>
      <param name="format" type="edu.ncsu.csc.itrust.validate.ValidationFormat"/>
      <param name="isNullable" type="boolean"/>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.LabProcedureValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.LOINCBeanValidator -->
  <class name="LOINCBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.LOINCbean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LOINCBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="m" type="edu.ncsu.csc.itrust.beans.LOINCbean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validator used to validate LOINCbean]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.LOINCBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.MailValidator -->
  <class name="MailValidator" extends="EmailValidator"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MailValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validateEmail" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="email" type="java.lang.String"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.MailValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.MedicationBeanValidator -->
  <class name="MedicationBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.MedicationBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MedicationBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="m" type="edu.ncsu.csc.itrust.beans.MedicationBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates ND code beans, from {@link UpdateNDCodeListAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.MedicationBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.MessageValidator -->
  <class name="MessageValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.MessageBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="MessageValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mBean" type="edu.ncsu.csc.itrust.beans.MessageBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
    </method>
    <doc>
    <![CDATA[Used to validate updating an office visit, by {@link EditOfficeVisitAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.MessageValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator -->
  <class name="OverrideReasonBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.OverrideReasonBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OverrideReasonBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="orc" type="edu.ncsu.csc.itrust.beans.OverrideReasonBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates reason code beans, from {@link UpdateReasonCodeListAction}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.OverrideReasonBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.PatientValidator -->
  <class name="PatientValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.PatientBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PatientValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PatientBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates a patient bean, from {@link EditPatientAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.PatientValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.PersonnelValidator -->
  <class name="PersonnelValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.PersonnelBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="PersonnelValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.PersonnelBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates a personnel bean, from {@link EditPersonnelAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.PersonnelValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.ProcedureBeanValidator -->
  <class name="ProcedureBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.ProcedureBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="ProcedureBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="edu.ncsu.csc.itrust.beans.ProcedureBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates an ND code, from {@link UpdateNDCodeListAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.ProcedureBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator -->
  <class name="RemoteMonitoringDataBeanValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="RemoteMonitoringDataBeanValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The default constructor.]]>
      </doc>
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="m" type="edu.ncsu.csc.itrust.beans.RemoteMonitoringDataBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validator used to validate adding new remote monitoring data in {@link AddRemoteMonitoringDataAction}]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.RemoteMonitoringDataBeanValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.SecurityQAValidator -->
  <class name="SecurityQAValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.SecurityQA&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SecurityQAValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bean" type="edu.ncsu.csc.itrust.beans.SecurityQA"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validates the security question and answer. This doesn't follow the same format as the others because this
 validator is used for the various states of reset password, {@link SetSecurityQuestionAction}
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.SecurityQAValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.SurveySearchValidator -->
  <class name="SurveySearchValidator" extends="edu.ncsu.csc.itrust.validate.BeanValidator&lt;edu.ncsu.csc.itrust.beans.SurveyResultBean&gt;"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SurveySearchValidator"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="validate"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bean" type="edu.ncsu.csc.itrust.beans.SurveyResultBean"/>
      <exception name="FormValidationException" type="edu.ncsu.csc.itrust.exception.FormValidationException"/>
      <doc>
      <![CDATA[Performs the act of validating the bean in question, which varies depending on the
 type of validator.  If the validation does not succeed, a {@link FormValidationException} is thrown.
 
 @param p A bean of the type to be validated.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Validator for zip code that is entered when a user searches for HCP survey results.]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.SurveySearchValidator -->
  <!-- start class edu.ncsu.csc.itrust.validate.ValidationFormat -->
  <class name="ValidationFormat" extends="java.lang.Enum&lt;edu.ncsu.csc.itrust.validate.ValidationFormat&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="edu.ncsu.csc.itrust.validate.ValidationFormat[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="edu.ncsu.csc.itrust.validate.ValidationFormat"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getRegex" return="java.util.regex.Pattern"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Enum with all of the validation formats that fit into a regex.
 
 @author Andy]]>
    </doc>
  </class>
  <!-- end class edu.ncsu.csc.itrust.validate.ValidationFormat -->
</package>

</api>
